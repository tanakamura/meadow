2009-06-08  Hideyuki SHIRAI  <shirai@meadowy.org>

	* Sync up with Emacs22.3.

2009-06-03  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* fileio.c: Remove include winioctl.h
	(S_IFLNK): Removed into s/ms-w32.h
	(stat): Ditto.
	(mw32-symlink-program): Removed into w32.c
	(mw32-symlink-hook): Ditto.
	(FSCTL_GET_REPARSE_POINT): Ditto.
	(REPARSE_DATA_BUFFER): Ditto.
	(REPARSE_DATA_BUFFER_HEADER_SIZE): Ditto.
	(MAXIMUM_REPARSE_DATA_BUFFER_SIZE): Ditto.
	(execute_readlink_hook): Ditto.
	(readlink_notruename): Ditto.
	(readlink): Ditto.
	(lstat): Ditto.
	(symlink_exe_messages): Ditto.
	(symlink): Ditto.
	(stat_following_symlink): Removed into w32.c and renamed as
	`sys_stat'.
	(ssize_t): Typedef removed into s/ms-w32.h

	* w32.c : Include winioctl.h
	(stat): Undefine the macro of emulated syscall.
	(mw32-symlink-program): Lisp variable moved from fileio.c
	(mw32-symlink-hook): Lisp variable moved from fileio.c
	(FSCTL_GET_REPARSE_POINT): Macro moved from fileio.c
	(REPARSE_DATA_BUFFER): Typedef moved from fileio.c
	(REPARSE_DATA_BUFFER_HEADER_SIZE): Define moved from fileio.c
	(MAXIMUM_REPARSE_DATA_BUFFER_SIZE): Ditto.
	(file_attributes_stat): Function deleted.
	(execute_readlink_hook): Function moved from fileio.c
	(readlink_notruename): Function moved from fileio.c
	(readlink): Function moved from fileio.c
	(sys_stat): Function moved and renamed from stat_following_symlink
	in fileio.c.
	(lstat): Function moved from fileio.c. Import link counting and
	inode number generation feature from file_attributes_stat().
	(symlink_exe_messages): Constant moved from fileio.c
	(symlink): Function moved from fileio.c

	* filemode.c (S_IFLNK): Removed into s/ms-w32.h
	(S_ISLNK): Delete duplicate define.

	* s/ms-w32.h : Include sys/stat.h before defining macro stat so
	that stat() in sys/stat.h is disabled.
	(stat): New emulated syscall.
	(S_IFLNK): New macro for symbolic link support.
	(ssize_t): New typedef moved from fileio.c.

	* dired.c (S_IFLNK): Removed into s/ms-w32.h

	* image.c (stat): Removed into s/ms-w32.h

	* lread.c (stat): Removed into s/ms-w32.h

	* sysdep.c (stat): Removed into s/ms-w32.h

2009-05-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* fileio.c (_REPARSE_DATA_BUFFER): Defined if
	REPARSE_DATA_BUFFER_HEADER_SIZE isn't defined.
	(snprintf): Moved to config.nt.
	(S_ISDIR): Check if it is defined or not.
	(IO_REPARSE_TAG_SYMLINK): New macro for VC6.
	(FSCTL_GET_REPARSE_POINT): Ditto for VC6.

2009-05-29  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* fileio.c (mw32_file_truename0): Add path name cacheing to reduce
	frequecy of symbolic link resolution.

2009-05-29  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in ($(TEMACS)): remove temacs.exe before
	running addsection.

2009-05-29  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in (LOCAL_FLAGS): -DUSE_CRT_DLL is moved to
	nt/nmake.mw32.def.

	* w32heap.c (_heap_init): Revert the change on 2009-05-28. But
	this function is still removed for MSVC.
	(_heap_term): Ditto.

2009-05-26  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* fileio.c (mw32_file_truename0): Resolve relative symbolic link.

2009-05-24  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in (EMACSLOADPATH): use DOS style path for Cygwin.

2009-05-24  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* makefile.mw32-in (LOCAL_FLAGS): add -DUSE_CRT_DLL for MSVC.
	* fileio.c: (ssize_t): New typedef for MSVC.
	(snprintf): New macro for MSVC.
	(S_ISDIR): New macro for MSVC.
	(ssize_t): New typedef for MSVC.
	(find_link_function): Bug fix.

2009-05-24  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* fileio.c : Windows *.lnk style symbolic link support, Enable
	symlink codes for VC.
	(Qfile_truename): New static intern.
	(REPARSE_DATA_BUFFER): New struct typedef for Win32 API.
	(REPARSE_DATA_BUFFER_HEADER_SIZE): New define for Win32 API.
	(MAXIMUM_REPARSE_DATA_BUFFER_SIZE): New define for Win32 API.
	(inhibit_file_truename): New variable.
	(allow_file_truename): New function.
	(find_link_function): New function.
	(mw32-file-content-string): New lisp function.
	(execute_readlink_hook): New lisp function.
	(readlink_notruename): New lisp function.
	(readlink): Modified.
	(resolve_symlink): New function.
	(mw32_file_truename): New funciton.
	(mw32_file_truename0): New funciton.
	(stat_following_symlink): Modified.
	(lstat): Modify and bug fix.
	(symlink): Modified.
	(mw32-file-native-symlink-p): New function.
	(mw32-symlink-program): C variable name modified.
	(mw32-symlink-hook): New elisp variable.
	(mw32-symlink-handler-map): New elisp variable.
	(mw32-symlink-buffer-size): New elisp variable.

	* sysdep.c : Enable symlink codes for VC.
	(stat): undef existing stat.

	* w32.c (mw32_file_truename): New extern function.
	(sys_fopen): Resolve symbolic link on windows.
	(sys_open): Ditto.
	(opendir): Ditto.

	* w32proc.c (mw32_file_truename): New extern function.
	(create_child): Resolve symbolink link of executable on windows.
	(sys_spawnve): Ditto.

	* lread.c : Enable symlink codes for VC.
	(stat): undef exising stat.

	* image.c : Enable symlink codes for VC.
	(stat): undef exising stat.

	* dired.c : Enable symlink codes for VC.

	* filemode.c : Enable symlink codes for VC.

2009-05-22  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* w32heap.c (_heap_init): Removed for MSVC.
	(_heap_term): Ditto.

	* strftime.c (tzname): Define for MSVC8 or later.

	* editfns.c (tzname): Ditto.

	* s/ms-w32.h (malloc): Define for MSVC.
	(free): Ditto.
	(realloc): Ditto.
	(calloc): Ditto.
	(utimbuf): Removed for MSVC8 or later.

	* w32.c (init_environment): Call sys_access instead of _access for
	MSVC8 or later.
	(utime): Removed for MSVC8 or later. Use utime() in the C runtime
	library instead.

	* mw32term.c: Don't include winable.h for MSVC9. This header is no
	longer distributed with MSVC9.
	(mw32_update_frame_alpha): SetLayeredWindowAttributes is renamed
	to SetLayeredWindowAttributesProc.
	(mw32_initialize): Ditto.

	* mw32fns.c (mw32_set_frame_alpha): Ditto.

	* sysdep.c: Include sys/utime.h instead of define utimbuf for
	MSVC8 or later.

2009-05-18  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* dired.c: Windows Vista/7 symbolic link supoort. Additional
	modification left uncommited in previous revision.

2009-05-17  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* fileio.c: Windows Vista/7 symbolic link supoort. Include
	windows.h, winioctl.h, shellapi.h
	(S_IFLNK): Redefine symbol for stat.
	(mw32_symlink_program): New variable.
	(readlink): New function.
	(stat_following_symlink): New function.
	(lstat): New function.
	(stat): Define stat as stat_following_symlink().
	(symlink_exe_messages): New constant.
	(symlink): New function.
	(Fdelete_file): Use rmdir for deleting symbolic link to a
	directory.

	* filemode.c (S_IFLNK): Redefine symbol for stat.
	(S_ISLNK): Ditto.

	* sysdep.c (stat): Define stat as stat_following_symlink().

	* lread.c (stat): Ditto.

	* image.c (stat): Ditto.

2009-03-09  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32font.c (mw32_initialize_default_logfont): Workaround. Select
	MS-Gothic explicitly as default font under Japanese
	environment (Active codepage == 932) on Windows Vista.  New
	environment variable 'MEADOW_DEFAULT_FONT' can be used to
	designate default font for all version of Windows.

2009-01-08  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32fns.c (mw32_WndProc<WM_EMACS_SETFOREGROUND>): Attach thread
	that currently has focus before setting foreground window and
	bring the focused window to top after focusing on it. Thanks to
	anonymous2 in ticket:397.

2008-09-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32select.c (create_owner): Request the message thread to create
	a window.  Refer to tiket:395.  Thanks to the anonymous
	contributor who made 'clipbd.patch'.

	* mw32term.h (WM_EMACS_CREATE_CLPBD): New macro.  Refer to
	tiket:395.  Thanks to the anonymous contributor who made
	'clipbd.patch'.
	(WM_EMACS_CREATE_CLPBD_REPLY): Ditto.

	* mw32fns.c (mw32m_track_popup_menu): New function. Refer to
	tiket:395.  Thanks to the anonymous contributor who made
	'clipbd.patch'.
	(mw32_WndProc<WM_EMACS_CREATE_CLPBD>): Call mw32m_create_clpbd().
	Refer to tiket:395.  Thanks to the anonymous contributor who made
	'clipbd.patch'.

2008-09-06  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* alloc.c (NSTATICS): Cancel increase for ImageMagick.

	* image.c (imagemagick_image_types): New variable.
	(imagemagick_image_type_lisp_symbol): Add an interned symbol to
	imagemagick_image_types.
	(define_imagemagick_type): Staticpro imagemagick_image_types.

2008-07-22  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* mw32fns.c (Fx_show_tip): Do not delete existing tip frame on the
	case of reusing for the same tip text. Fix #393.

2008-05-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* s/ms-w32.h (HAVE_TZNAME): Define it for Meadow. Refer to
	ticket:388.

2008-04-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.c (term_ntproc): Call term_w32select().  Thanks to Kazuhiro
	Ito <kzhr@d1.dion.ne.jp>.

2008-04-29  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32select.c: Include mw32term.h for Meadow.

	* makefile.mw32-in: Update dependencies.
	(WIN32OBJ): Add w32select.o instead of mw32clpbd.o.

	* w32.c (globals_of_w32): mw32_mule_clipboard_format is removed.

	* emacs.c (main): Call syms_of_w32select() instead of
	syms_of_mw32clipboard().
	(main): Call globals_of_w32select().
	(main): Don't call init_mw32clpbd().

	* mw32clpbd.c: Removed.

2008-04-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32clpbd.c (Fw32_get_clipboard_data): Use
	decoding_buffer_size() to get the buffer size.  Thanks to Kazuhiro
	Ito <kzhr@d1.dion.ne.jp>.

2008-04-06  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in ($(TRES)): Prerequisites are changed.

2008-04-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (NSTATICS): Increased for the latest ImageMagick.

2008-04-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs22.2.

2007-11-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (keymodifier): Define the escape key as a special
	key.  Refer to ticket:381.

2007-11-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (NSTATICS): Increased for the latest ImageMagick.

2007-10-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (syms_of_mw32fns): Defsubr Sdefault_printer_name.
	Thanks to Kazuhiro Ito <kzhr@d1.dion.ne.jp>.

2007-09-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (Fdefault_printer_name): New function from Emacs22.1.

	* makefile.mw32-in (LIBS): Add `WINSPOOL'.

2007-07-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs22.1.

2007-06-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs22 BASE.

2007-05-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs22 BASE.

2007-05-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2007-04-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2007-04-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (compute_tip_xy): Sync up with Emacs CVS HEAD.

2007-03-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2007-03-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.h (WM_EMACS_GET_IME_FONT_PROP): Removed.
	(WM_EMACS_MODIFY_IME_FONT_PROP): Ditto.
	(WM_EMACS_HIDE_TOOLTIP): Packed.
	(WM_EMACS_UPDATE_CURSOR): Ditto.

	* mw32term.c (get_face_height): Removed.
	(mw32_get_ime_font_property): Ditto.
	(mw32_process_main_thread_message<WM_EMACS_GET_IME_FONT_PROP>):
	Ditto.

	* mw32fns.c (get_face_height): New function from `mw32ter.c'.
	(mw32_get_ime_font_property): Ditto.
	(mw32_WndProc<WM_IME_STARTCOMPOSITION>): Call
	mw32_get_ime_font_property().
	(mw32_WndProc<WM_EMACS_MODIFY_IME_FONT_PROP>): Removed.

2007-02-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2007-01-21  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in: Sync up with makefile.w32-in.

2007-01-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c (set_window_buffer): Undo the last change.
	(set_window_buffer): Don't call clear_mouse_face() if the frame is
	a termcap frame.

2007-01-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c (set_window_buffer): Don't call clear_mouse_face() for
	MSVC.  This is just a hack and should be removed.

2007-01-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-11-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-10-29  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-10-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-09-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-09-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-09-11  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* mw32font.c (mw32_set_windows_logical_font): Fixed local variable
	declaration to build with MSVC. This is the way of standard C.

2006-09-10  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32font.c (mw32_set_windows_logical_font): Correct the
	calculation of overhang in non TrueType font. See ticket:136.
	(mw32_glyph_metric): Correct lbearing and rbearing in non TrueType
	font. See ticket:136.

2006-09-09  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-09-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_glyph_string_background): Call
	mw32_clear_glyph_string_rect() instead of mw32_fill_area_pix().

2006-09-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_glyph_string_foreground): Take account of
	horizontal offsets of the glyph string. This code is moved from
	xdisp.c.

2006-09-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_glyph_string_foreground): Don't use `pstr'
	and `nbytes' of of the glyph string.

	* xdisp.c (init_glyph_string): Removed arguments `pstr' and
	`nbytes'.
	(fill_glyph_string): Don't call SERIALIZE_FONTCP().
	(INIT_GLYPH_STRING): Removed argument `pstr'.
	(BUILD_STRETCH_GLYPH_STRING): Ditto.
	(BUILD_IMAGE_GLYPH_STRING): Ditto.
	(BUILD_CHAR_GLYPH_STRINGS): Ditto.
	(BUILD_COMPOSITE_GLYPH_STRING): Ditto.

	* dispextern.h (struct glyph_string): Removed members `pstr' and
	`nbytes'.

2006-09-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (init_glyph_string): Removed argument `pdx'.
	Don't call MW32_INVOKE_LAYOUTPROC.
	(INIT_GLYPH_STRING): Removed argument `pdx'.
	(BUILD_STRETCH_GLYPH_STRING): Ditto.
	(BUILD_IMAGE_GLYPH_STRING): Ditto.
	(BUILD_CHAR_GLYPH_STRINGS): Ditto.
	(BUILD_COMPOSITE_GLYPH_STRING): Ditto.

	* mw32term.c (mw32_draw_glyph_string_foreground): Don't use
	horizontal offsets of the glyph string.
	(mw32_draw_composite_glyph_string_foreground): Ditto.

	* dispextern.h (struct glyph_string): Removed member `pdx'.

2006-08-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (get_window_cursor_type): Remove Meadow specific codes.

	* mw32term.h (x_highlight_frame): New macro.

2006-08-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c: Use FONT_INFO_FROM_ID instead of
	MW32_FONT_INFO_FROM_FONT.

	* fontset.h (FONT_INFO_FROM_ID): Call mw32_get_font_info().

2006-08-29  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xfaces.c (clear_font_table): Call w32_unload_font().
	(set_font_frame_param): Activate invalidated function.

	* mw32font.c (w32_unload_font): New function.
	(set_font_frame_param): Moved to xfaces.c.

	* dispextern.h (struct glyph_string): Don't use MW32LogicalFont.

2006-08-26  YAMAZAKI Katsuhiro  <yamazaki-k@mwe.biglobe.ne.jp>

	* mw32fns.c (mw32_WndProc<WM_PAINT>): Always erase background.
	Refer to tiket:341.

2006-08-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c: Use FRAME_FOREGROUND_PIXEL and
	FRAME_BACKGROUND_PIXEL to get the frame colors.  Refer to
	ticket:334.

	* mw32fns.c (mw32_set_foreground_color): Ditto.

	* image.c (get_image_data_from_icon): Ditto.

	* mw32term.h (struct mw32_output): New member `x_compatible'.
	(struct mw32_output): Removed members `background_pixel' and
	`foreground_pixel'.  Refer to ticket:334.

2006-08-22  YAMAZAKI Katsuhiro <yamazaki-k@mwe.biglobe.ne.jp>

	* mw32fns.c (mw32_WndProc<WM_ERASEBKGND>): At the first the erase
	region is getting by GetUpdateRect. Use GetClientRect when
	GetUpdateRect returns 0 (meaning there is no update region).
	Refer to ticket:335.
	(mw32_WndProc<WM_PAINT>): Cancel previous change.

	* mw32term.c (mw32i_scroll_run): Delete the calculation of fringe
	area. Refer to ticket:336.

2006-08-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-08-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_ERASEBKGND>): Revert the changes in
	r4135.  Refer to ticket:335.

2006-08-17  Masayuki Fujii  <boochang@m4.kcn.ne.jp>

	* mw32clpbd.c (init_mw32clpbd): Modify a test for
	GetClipboardSequenceNumber API. Refer to ticket:321.

2006-08-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_PAINT>): Revert the last change
	partially.  Refer to ticket:336.

2006-08-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (Fx_create_frame): Normalize coding style.

2006-08-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_ERASEBKGND>): Return 0 if there is no
	update region.  Refer to ticket:335.

2006-08-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-08-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (load_in_memory_image): Use 0x80 instead of 0xff as a
	foreground pixel value.

2006-08-05  YAMAZAKI Katsuhiro <yamazaki-k@mwe.biglobe.ne.jp>

	* keyboard.c (kbd_buffer_store_event_hold): Fix asymmetric usage of
	W32_BLOCK_EVENT and W32_UNBLOCK_EVENT.

2006-08-05  YAMAZAKI Katsuhiro <yamazaki-k@mwe.biglobe.ne.jp>

	* mw32fns.c (mw32_WndProc<WM_ERASEBKGND>): Change the retun value
	from `0' to `1', because when the application erases the background,
	it returns to the not `0' values.
	Change the function for getting erase rectangle from GetClientRect
	to GetUpdateRect. Refer to w32fns.c.
	(mw32_WndProc<WM_PAINT>): Change the function for getting drawing
	rectangle from GetClientRect to BeginPaint.
	Call mw32_clear_native_frame_area when ps.fErase is `t'.

2006-08-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (Fmw32_get_device_capability): Return 'full if the
	pixel depth is greater than or equal to 24 bits.

2006-08-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* process.c (wait_reading_process_output): Revert the last change.

	* mw32term.c (MW32_read_socket): Ignore the 2nd argument
	`expected'. Refer to [meadow-develop: 7443].

	* keyboard.c (kbd_buffer_get_event): Remove `have_input'.

2006-07-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* process.c (wait_reading_process_output): Reset `got_some_input'
	when timeout has occured.

	* keyboard.c (kbd_buffer_get_event): Call note_sync_event() even
	if the end time is specified.
	(kbd_buffer_get_event): Call read_avail_input() with the return
	value of wait_reading_process_output().

2006-07-29  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-07-28  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32clpbd.c (init_mw32clpbd): Test GetClipboardSequenceNumber
	API only if GetProcAddress succeeds.

2006-07-28  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32clpbd.c (GetClipboardSequenceNumber_Proc): New type.
	(get_clipboard_sequence_number_fn): New variable.
	(last_clipboard_sequence_number): New variable.
	(Fw32_set_clipboard_data): Store clipboard text only if
	GetClipboardSequenceNumber API is not available. Store clipboard
	sequence number instread of clipboard text if
	GetClipboardSequenceNumber API is available.
	(Fw32_get_clipboard_data): Return nil if clipboard sequence number
	is not changed since w32-set-clipboard-data sets data in
	clipboard.
	(init_mw32clpbd): New function.
	* emacs.c (main): Call init_mw32clpbd.

2006-07-27  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* regex.c (regex_compile): Undo the last change.

2006-07-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* regex.c (regex_compile): Don't optimize on VC 6.  Refer
	to [meadow-develop: 7410].

2006-07-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* regex.c (regex_compile): Activate the invalidate codes.

2006-07-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32term.h: Sync up with Emacs CVS HEAD.

	* w32proc.c: Don't include "w32term.h"

	* mw32font.c (FONTSET_FROM_ID): Use mw32_get_fontset_table().
	(FONTSET_REF_VIA_BASE): Use mw32_fontset_ref_via_base().
	(FONTSET_SET): Use mw32_fontset_set().

	* fontset.c: Sync up with Emacs CVS HEAD.
	(lookup_overriding_fontspec): Validated as a stub.
	(mw32_get_fontset_table): New function.
	(mw32_fontset_set): Ditto.
	(mw32_fontset_ref_via_base): Ditto.

2006-07-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* regex.c (regex_compile): Add comment.

	* w32term.h (EMACS_CLASS): Removed.

	* strftime.c (my_strftime): Mark up Meadow specific code
	explicitly.

	* mw32term.c (mw32_release_frame_hdc): Redefine as a void
	function.
	(mw32_cleanup_frame_hdc): Ditto.

	* mw32term.h: Ditto.

	* lisp.h (DEFUN): Sync up with Emacs CVS HEAD.

	* image.c: Mark up Meadow specific code explicitly.

	* frame.h (EMACS_CLASS): Sync up with Emacs CVS HEAD.

	* fontset.c: Mark up Meadow specific code explicitly.
	(fontset_ref_via_base): Sync up with Emacs CVS HEAD.
	(fontset_font_pattern): Ditto.

	* eval.c (Fsignal): Mark up Meadow specific code explicitly.

	* emacs.c (sbrk): New extern for Meadow.

	* editfns.c (syms_of_editfns): Sync up with Emacs CVS HEAD.

	* dispextern.h (struct glyph_string): Mark up Meadow specific code
	explicitly.
	Sync up with Emacs CVS HEAD.

	* coding.h (ENCODE_SYSTEM): Sync up with Emacs CVS HEAD.
	(DECODE_SYSTEM): Ditto.

	* charset.c (Fmake_char_internal): Mark up Meadow specific code
	explicitly.

	* alloc.c: Remove a temporary prototype.

2006-07-22  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in (TEMACS_TMP): New variable from Emacs CVS HEAD.
	(EMACS_DMP): Removed.
	(OBJ1): Add w32heap.$(O) and unexw32.$(O)
	(WIN32OBJ): Remove mw32mem.$(O)
	($(EMACS)): Remove -nd option for temacs.exe. Don't move emacs.dmp
	to Meadow.dmp.
	($(TEMACS)): Depend on addsection.exe. Execute addsection.exe.
	(bootstrap-temacs): Define PURESIZE instead of PDUMP_HASH_SIZE and
	PDUMP_OBJECT_ARRAY_SIZE.
	(bootstrap-emacs): Remove -nd option for temacs.exe. Don't move
	emacs.dmp to Meadow.dmp
	(install): Don't copy Meadow.dmp.

	* alloc.c (staticpvec): Removed.
	(staticpidx): Ditto.
	(allocate_string): Revert change for portable dumper.
	(FLOAT_BLOCK_SIZE): Sync up with Emacs CVS HEAD.
	(GETMARKBIT): New macro from Emacs CVS HEAD.
	(SETMARKBIT): Ditto.
	(UNSETMARKBIT): Ditto.
	(FLOAT_BLOCK): Ditto.
	(FLOAT_INDEX): Ditto.
	(struct float_block): Sync up with Emacs CVS HEAD.
	(FLOAT_MARKED_P): Ditto.
	(FLOAT_MARK): Ditto.
	(FLOAT_UNMARK): Ditto.
	(make_float): Ditto.
	(CONS_BLOCK_SIZE): Ditto.
	(CONS_BLOCK): New macro from Emacs CVS HEAD.
	(CONS_INDEX): Ditto.
	(CONS_MARKED_P): Sync up with Emacs CVS HEAD.
	(CONS_MARK): Ditto.
	(CONS_UNMARK): Ditto.
	(Fcons): Ditto.
	(Fmake_byte_code): Revert change for portable dumper.
	(pure_alloc): Ditto.
	(Fpurecopy): Ditto.
	(staticpro): Sync up with Emacs CVS HEAD.
	(staticpro_pdump): Removed.
	(Fgarbage_collect): Revert change for portable dumper.
	(mark_object): Ditto.
	(struct pdump_header_type): Removed.
	(struct pdump_forward): Ditto.
	(struct pdump_forward_pointer): Ditto.
	(struct pdump_forward_subr_doc): Ditto.
	(struct pdump_forward_interval_tree): Ditto.
	(struct pdump_forward_hash_table): Ditto.
	(struct pdump_block_table): Ditto.
	(struct pdump_root): Ditto.
	(PDUMP_HASH_SIZE): Ditto.
	(PDUMP_OBJECT_ARRAY_SIZE): Ditto.
	(PDUMP_POINTERS_SIZE): Ditto.
	(PDUMP_SUBR_DOC_SIZE): Ditto.
	(PDUMP_INTERVAL_TREE_SIZE): Ditto.
	(PDUMP_OFFSET): Ditto.
	(enum pdump_load_scheme): Ditto.
	(pdump_load_offset): Ditto.
	(enum pdump_object_type): Ditto.
	(struct pdump_type_objects): Ditto.
	(pdump_lisp_object): Ditto.
	(pdump_pointers): Ditto.
	(pdump_pointers_index): Ditto.
	(pdump_subr_doc): Ditto.
	(pdump_subr_doc_index): Ditto.
	(pdump_interval_tree): Ditto.
	(pdump_interval_tree_index): Ditto.
	(pdump_hash_table): Ditto.
	(pdump_hash_table_index): Ditto.
	(pdump_header): Ditto.
	(pdump_objects_start): Ditto.
	(PDUMP_STRING_BYTES): Ditto.
	(PDUMP_LARGE_STRING_P): Ditto.
	(PDUMP_STRING_DATA_DUMP_SIZE_ALIGNMENT): Ditto.
	(PDUMP_STRING_DATA_DUMP_SIZE): Ditto.
	(PDUMP_LISP_STRING_DUMP_SIZE): Ditto.
	(PDUMP_BOOL_VECTOR_SIZE): Ditto.
	(PDUMP_BOOL_VECTOR_P): Ditto.
	(PDUMP_VECTORLIKE_LENGTH): Ditto.
	(PDUMP_VECTORLIKE_SIZE): Ditto.
	(PDUMP_LISP_HASH_TABLE_SIZE): Ditto.
	(PDUMP_LISP_HASH_TABLE_ELEM_COUNT): Ditto.
	(PDUMP_LISP_HASH_TABLE_ALLOCATED_COUNT): Ditto.
	(pdump__hexdump): Ditto.
	(pdump_message): Ditto.
	(PDUMP_MESSAGE): Ditto.
	(pdump_hash_value): Ditto.
	(pdump_put_hash): Ditto.
	(pdump_get_hash): Ditto.
	(pdump_register_object): Ditto.
	(pdump_register_pointer): Ditto.
	(pdump_register_subr_doc): Ditto.
	(pdump_count_interval_tree_length): Ditto.
	(pdump_register_interval_tree_iter): Ditto.
	(pdump_register_interval_tree): Ditto.
	(pdump_register_hash_table): Ditto.
	(PDUMP_REGISTERING_MESSAGE): Ditto.
	(pdump_add_object): Ditto.
	(pdump_object_to_enum): Ditto.
	(pdump_forward_object): Ditto.
	(pdump_size): Ditto.
	(pdump_write_objects): Ditto.
	(pdump_add_special_buffers): Ditto.
	(pdump_write_special_buffers): Ditto.
	(pdump_write_coding_symbols): Ditto.
	(pdump): Ditto.
	(PDUMP_RELOCATE): Ditto.
	(pdump_object_start_address): Ditto.
	(pdump_load_interval_tree): Ditto.
	(pdump_load_hash_table): Ditto.
	(pdump_read_coding_symbols): Ditto.
	(pdump_map_file): Ditto.
	(pdump_load): Ditto.
	(pdump_free): Ditto.
	(pdump_relocate_objects): Ditto.
	(unmark_pdumped_objects): Ditto.
	(pdump_check_hash_table): Ditto.
	(pdump_check_object_validity_Lisp_Int): Ditto.
	(pdump_check_object_validity_Lisp_String_data): Ditto.
	(pdump_check_object_validity_Lisp_String_intervals): Ditto.
	(pdump_check_object_validity_Lisp): Ditto.
	(pdump_check_object_validity_Lisp_Vectorlike): Ditto.
	(pdump_check_object_validity_Lisp_Symbol): Ditto.
	(pdump_check_object_validity_Lisp_Misc): Ditto.
	(pdump_check_object_validity_Lisp_Cons): Ditto.
	(pdump_check_object_validity_Lisp_Float): Ditto.
	(pdump_check_object_validity): Ditto.
	(pdump_check_root_objects): Ditto.
	(pdump_file_check_readable): Ditto.
	(pdump_find_exe_path): Ditto.
	(pdump_find_dump_file): Ditto.
	(pdump_open_dump_file): Ditto.
	(Fpdump_load_scheme): Ditto.
	(Fpdump_relocated_p): Ditto.
	(Fpdumped_p): Ditto.
	(init_alloc_once): Merge with reinit_alloc_once.
	Revert changes for portable dumper.
	(syms_of_alloc): Revert changes for portable dumper.

	* emacs.c (main): Revert changes for portable dumper.
	Do not call functions reinit_*.

	* lread.c (read1): Revert changes for portable dumper.
	(read_vector): Ditto.
	(read_list): Ditto.
	(make_symbol): Ditto.
	(init_obarray): Revert changes for portable dumper. Merge with
	reinit_obarray.

	* lisp.h (struct Lisp_Cons): Revert hack for portable dumper on
	2005-04-09 and on 2005-04-20.
	(struct Lisp_Float): Ditto.
	(struct Lisp_Marker): Revert hack for portable dumper on
	2005-04-20.
	(struct Lisp_Buffer_Local_Value): Ditto.
	(struct Lisp_Overlay): Ditto.

	* puresize.h (CHECK_IMPURE): Revert dummy definition.
	(PURE_P): Revert dummy definition.

	* s/ms-w32.h (SYSTEM_PURESIZE_EXTRA): Increased for mw32-specific
	elisp files.

	* editfns.c (syms_of_editfns): Merge with reinit_syms_of_editfns.

	* insdel.c (syms_of_insdel): Merge with reinit_syms_of_insdel.

	* window.c (init_window_once): Merge with reinit_window_once.
	(syms_of_window): Use staticpro instead of staticpro_nopdump.

	* search.c (syms_of_search): Merge with reinit_syms_of_search.

	* fontset.c (syms_of_fontset): Merge with reinit_syms_of_fontset.

	* abbrev.c (syms_of_abbrev): Merge with reinit_syms_of_abbrev.

	* frame.c (syms_of_frame): Use staticpro instead of
	staticpro_nopdump.

	* coding.c (init_coding_once): Merge with reinit_coding_once.

	* minibuf.c (init_minibuf_once): Merge with reinit_minibuf_once.
	(syms_of_minibuf): Merge with reinit_syms_of_minibuf.

	* mw32font.c (syms_of_mw32font): Merge with
	reinit_syms_of_mw32font.

	* mw32fns.c (syms_of_mw32fns): Merge with reinit_syms_of_mw32fns.

	* print.c (syms_of_print): Use staticpro instead of
	staticpro_nopdump.

	* eval.c (init_eval_once): Merge with reinit_eval_once.

	* buffer.c (pdump_global_buffer_p): Removed.
	(init_buffer_once): Merge with init_buffer_once_1 and
	init_buffer_once_2.
	(syms_of_buffer): Use staticpro instead of staticpro_nopdump.

	* w32proc.c: Include w32heap.h.
	(RVA_TO_PTR): New macro.

	* callint.c (syms_of_callint): Use staticpro instead of
	staticpro_nopdump. Merge with reinit_syms_of_callint.

	* w32.h: Remove declaration related with mw32mem.c.

	* w32.c: Include w32heap.h.
	(init_ntproc): Call check_windows_init_file.

	* mw32menu.c (syms_of_mw32menu): Use staticpro instead of
	staticpro_nopdump. Merge with reinit_syms_of_mw32menu.

	* category.c (syms_of_category): Merge with
	reinit_syms_of_category.

	* vm-limit.c (get_lim_data): Sync up with Emacs CVS HEAD.

	* lastfile.c: Ditto.

	* mw32reg.c: Remove unused empty function
	reinit_syms_of_mw32reg.

	* dispnew.c (syms_of_display): Use staticpro instead of
	staticpro_nopdump. Merge with reinit_syms_of_display.

2006-07-17  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* mw32fns.c (mw32_WndProc<WM_INITMENU>): Revert changes for
	WM_INITMENU in r4102 to move it to WM_ENTERMENULOOP.
	(mw32_WndProc<WM_ENTERMENULOOP>): Force showing mouse cursor when
	main menu or popup menu is activated. Closes #307.

2006-07-17  YAMAZAKI Katsuhiro <yamazaki-k@mwe.biglobe.ne.jp>

	* mw32fns.c (Fx_create_frame): Move the position in which
	GET_FRAME_HDC is called after mw32window, because the window handle
	is obtained in there.
	(mw32_WndProc<WM_PAINT>): Changes from EnterCriticalSection and
	LeaveCriticalSection to MW32_BLOCK_FRAME_HDC and
	MW32_BLOCK_FRAME_HDC.

	* mw32term.h (GET_FRAME_HDC_LEVEL_LIMIT): Moved to `mw32term.c'.
	(MW32_BLOCK_FRAME_HDC): New Macro.
	(MW32_UNBLOCK_FRAME_HDC): Ditto.
	(GET_FRAME_HDC): Changes from the macro to the function call. 
	(RELEASE_FRAME_HDC): Ditto.
	(CLEANUP_FRAME_HDC): Ditto.

	* mw32term.c (GET_FRAME_HDC_LEVEL_LIMIT): Moved from `mw32term.h'.
	(MAIN_THREAD_FRAME_HDC_STACK): New define.
	(main_thread_hdc_frame): New variable.
	(old_main_thread_hdc_stack): Ditto.
	(old_main_thread_hdc): Ditto.
	(old_main_thread_hdc_nestlevel): Ditto.
	(old_main_thread_hdc_hwnd): Ditto.
	(old_main_thread_hdc_frame): Ditto.
	(mw32_init_frame_hdc): New function.
	(mw32_get_frame_hdc): Ditto.
	(mw32_release_frame_hdc): Ditto.
	(mw32_cleanup_frame_hdc): Ditto.
	(MW32_update_begin): Changes from EnterCriticalSection and
	LeaveCriticalSection to MW32_BLOCK_FRAME_HDC and
	MW32_BLOCK_FRAME_HDC.
	(mw32_clear_mouse_face): Ditto.
	(mw32_initialize): Call mw32_init_frame_hdc.

2006-07-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_mouse_wheel_handler): Use the current message
	to get the mouse position instead of `last_mouse_motion_message'.
	(mw32_mouse_wheel_handler): Take account of up/down modifiers.

	* Sync up with Emacs CVS HEAD.

2006-07-14  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* lisp.h (VALBITS): Revert the change on rev 4107

2006-07-14  Hideyuki SHIRAI  <shirai@meadowy.org>

	* lisp.h (VALBITS): [MD:7371], [MD:7374] Sync up Emacs CVS HEAD
	for VC++.
	(ARRAY_MARK_FLAG): Ditto.

2006-07-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keyboard.c (make_lispy_event<W32_MOUSE_WHEEL_EVENT>): Insert
	`nil' into the list of the wheel event just before `delta' to
	suppress errors in describe-key().  Refer to ticket:312.

2006-07-09  YAMAZAKI Katsuhiro <yamazaki-k@mwe.biglobe.ne.jp>

	* mw32term.c (mw32_destroy_frame_hdc): Don't release main thread
	DC, because this function is called between GET_FRAME_HDC
	and RELEASE_FRAME_HDC on main thread.

	* mw32fns.c (mw32_WndProc<WM_INITMENU>): Show mouse cursor
	when it is hidden. Refer to ticket:307
	(mw32_create_tip_frame): Sync up Emacs CVS HEAD.
	Refer to w32fns.c.
	(Fx_show_tip): Ditto.

	* xdisp.c (redisplay_window): Remove redundant line, and
	sync up Emacs CVS HEAD.
	(erase_phys_cursor): Remove redundant line.
	(display_and_set_cursor): Sync up Emacs CVS HEAD.
	(note_mouse_highlight): If Suspend|ResumeThread returns NG,
	it is retried. Refer to ticket:299.

	* window.c (delete_window): Remove force release FRAME_HDC.

2006-07-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-06-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c: Normalize coding style and remove redundant spaces.

	* mw32fns.c: Ditto.

	* mw32ime.c: Ditto.

	* mw32reg.c: Ditto.

	* mw32term.c: Ditto.

	* mw32term.h: Ditto.

	* xdisp.c: Ditto.

2006-06-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_process_main_thread_message): Don't update the
	cursor if the root window of the frame is nil.
	(mw32_message_loop<WM_EMACS_CLEAR_MOUSE_FACE>): Don't clear mouse
	face if the frame is NULL.
	Refer to ticket:305 for these changes. Thanks to the anonymous
	contributor to this ticket.

2006-05-27  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-05-25  Hideyuki SHIRAI  <shirai@meadowy.org>
	Thanks Yamazaki-san <yamazaki-k@mwe.biglobe.ne.jp> and his patchs
	again; Ticket #237 and #299.

	* mw32fns.c (mw32_WndProc): Sleep message thread in a few minutes
	for main thread running.

	* xdisp.c (note_mouse_highlight): If call in message-thread,
	suspend and resume the main-thread during to change the buffer.

2006-05-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-05-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.c (encode_filename): Remove redundant spaces.
	(decode_filename): Ditto.
	(dostounix_filename): Undo the last change.
	(unixtodos_filename): Ditto.
	(map_w32_filename): Ditto.
	(Fdos_to_unix_filename): Encode and decode the file name around
	dostounix_filename().
	(Funix_to_dos_filename): Encode and decode the file name around
	unixtodos_filename().

2006-05-14  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* w32.c (normalize_filename): Correct conversion to lower case.
	(map_w32_filename): Use normalize_filename instead of
	unixtodos_filename.

2006-05-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* coding.c: Redo the canceled merge.  Refer to ticket:296.

	* Sync up with Emacs CVS HEAD.

2006-05-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.c: Include "charset.h" and "coding.h".
	(encode_filename): New function.
	(decode_filename): Ditto.
	(dostounix_filename): Encode and Decode the file name around
	normalize_filename().
	(unixtodos_filename): Ditto.

2006-05-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.c (Fdos_to_unix_filename): Allocate memory for a file name
	on the stack.
	(Funix_to_dos_filename): Ditto.

2006-05-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c: Purge XSTRING and use SDATA, SBYTES and SCHARS
	instead.

	* mw32menu.c: Ditto.

	* mw32ime.c: Ditto.

	* mw32font.c: Ditto.

	* mw32dl.c: Ditto.

	* mw32clpbd.c: Ditto.

	* mw32bdf.c: Ditto.

	* w32.c (normalize_filename): Ditto.
	Normalize coding style.

2006-05-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-05-03  Masayuki Fujii  <boochang@m4.kcn.ne.jp>

	* mw32term.h: Remove inclusion of w32api.h.

2006-05-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.h: Include <imm.h> explicitly.
	Consider `HAVE_RECONVERTSTRING' to define `RECONVERTSTRING'.

2006-05-02  Hideyuki SHIRAI  <shirai@meadowy.org>

	Thanks Yamazaki-san <yamazaki-k@mwe.biglobe.ne.jp> and his patchs;
	exclusion-01.patch, remove-framehdc-00.patch and
	remove-warning-00.patch in Ticket #237 and Meadow-develp:7288.

	* dispnew.c (clear_desired_matrices): Remove strange `ifdef'.
	(adjust_glyphs): Ditto.
	(adjust_frame_glyphs): Set this function as critical section with
	GET|RELEASE_FRAME_HDC.
	(free_glyphs): Ditto.
	(free_window_matrices): Ditto.

	* window.c (delete_window): Force release FRAME_HDC.

	* minibuf.c (Fexit_minibuffer): Suppress compilation warnings.

	* xdisp.c (display_echo_area_1): Remove GET|RELEASE_FRAME_HDC.
	(redisplay_tool_bar): Ditto.
	(redisplay_window_0): Ditto.
	(redisplay_internal): Set this function as critical section with
	GET|RELEASE_FRAME_HDC.

	* mw32term.c (mw32_set_clip_area): Use GET|RELEASE_FRAME_HDC
	instead of FRAME_HDC.
	(mw32_unset_clip_area): Ditto.
	(MW32_frame_up_to_date): Ditto.
	(mw32_get_lighter_color): Ditto.
	(mw32_draw_relief_rect): Ditto.
	(mw32_shift_glyphs_for_insert): Ditto.
	(MW32_mouse_position): Ditto.
	(show_or_hide_mouse_cursor): Sync up EMACS CVS HEAD (refer to
	w32term.c).

	* xfaces.c (free_realized_multibyte_face): Set this function as
	critical section with GET|RELEASE_FRAME_HDC.
	(cache_face): Sync up Emacs CVS Head.

	* image.c (image_background): Use GET|RELEASE_FRAME_HDC instead of
	FRAME_HDC.
	(image_background_transparent): Use GET|RELEASE_FRAME_HDC instead
	of FRAME_HDC.

	* mw32font.c (mw32_set_windows_logical_font): Use
	GET|RELEASE_FRAME_HDC instead of FRAME_HDC.

	* process.c (Fmake_network_process): Suppress compilation
	warnings.

	* mw32dl.c (undefsubr): Suppress compilation warnings.

	* mw32menu.c (set_frame_menubar): Suppress compilation warnings.

	* mw32ime.c (mw32_ime_inject_keystrokes): Suppress compilation
	warnings.

	* mw32term.h (GET_FRAME_HDC_LEVEL_LIMIT): Set 256.
	(FRAME_HDC): Delete unused macro.

2006-04-26  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.h: Add the condition related to cygwin for definition
	of RECONVERTSTRING.

2006-04-26  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.h: Revert the change on 2006-04-25.

2006-04-25  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.h: Modify the condition for definition of
	RECONVERTSTRING.

2006-04-23  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* coding.c: Undo the last merge temporarily.  Refer to ticket:296.

2006-04-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-03-29  Hideyuki SHIRAI  <shirai@meadowy.org>

	* mw32term.c (mw32_draw_bar_cursor): Fix FRAME_HDC. See
	ticket:293.

2006-03-13  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.h (WM_EMACS_FLUSH_MESSAGE): New message.
	(WM_EMACS_KEYSTROKE): New message.

	* mw32term.c (mw32_message_loop): Modify related to IME input.
	(mw32_message_loop<WM_EMACS_FLUSH_MESSAGE>): New message handler.
	(mw32_message_loop<WM_EMACS_KEYSTROKE>): New message handler.
	(mw32_message_loop<WM_KEYDOWN>): Modify related to IME input.

	* mw32ime.c (Vmw32_ime_composition_window): New variable.
	(mw32_set_ime_conv_window): Use Vmw32_ime_composition_window if
	possible.
	(mw32_ime_record_keycode): Don't record keycode when choking
	keystrokes.
	(mw32_get_ime_result_string): Start keystroke choking immediately
	if needed.
	(mw32_ime_choke_keystroke): Add parameter for debugging.
	(mw32_ime_stop_choke_keystrokes): New function.
	(mw32_change_shift_state): New function.
	(mw32_ime_inject_keystrokes): Moved out from
	mw32-ime-input-method-function and widen applicable chars.
	(mw32_ime_inject_keymessage): New function.
	(mw32_ime_input_method_function_unwind): Fix coding style. Stop
	choking keystrokes and put them into message queue.
	(mw32-ime-input-method-function): Improve tolerance of key
	fastshot.
	(mw32-protect-fep-input): Removed.
	(fep-force-on): Don't send keyup message.
	(fep-force-on): Ditto.
	(syms_of_mw32ime): Add initialize of Vmw32_ime_composition_window.

	* dispnew.c (clear_current_matrices): Sync with message-thread.

	* xdisp.c (display_echo_area_1): Ditto.
	(redisplay_tool_bar): Ditto.
	(redisplay_window_0): Ditto.

2006-02-24  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32ime.c (CHOKEDKEYBUFLEN): New macro.
	(choke_keystroke): New variable.
	(choked_key_index): New variable.
	(choked_key_buf): New variable.
	(mw32_ime_choke_keystroke): New function.
	(mw32-ime-input-method-function): Protect key strokes around
	switching of fep from disordering and/or vanishing.
	(mw32-protect-fep-input): New lisp function.

	* mw32term.c (mw32_message_loop<WM_KEYDOWN>): Protect key strokes
	around switching of fep from disordering and/or vanishing.

2006-02-20  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.h (WM_EMACS_UPDATE_CURSOR): New macro.

	* mw32term.c (mw32_new_focus_frame): Add cursor control.
	(mw32_draw_window_cursor): Unnecessary to check validity of hdc
	here.

2006-02-20  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* image.c (mw32_cross_disabled_image): Fix asymmetric usage of
	GET_FRAME_HDC () and RELEASE_FRAME_HDC ().

2006-02-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-02-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* s/ms-w32.h (HAVE_FCNTL_H): Define HAVE_FCNTL_H.

	* alloc.c: Don't define INCLUDED_FCNTL.

2006-02-13  Kyotaro HORIGUCHI  <horiguti@meadowy.org>
	* mw32term.h (pending_clear_mouse_face): New variable.
	(WITH_MESSAGE_THREAD_HDC): Removed.

	* mw32term.c (MW32_update_begin): Fix the range of critical
	section.
	(MW32_update_end): Make hdc_nestlevel zero when hdc is
	INVALID_HANDLE_VALUE.
	(mw32_new_focus_frame): Remove disabled code and unused variable.
	(mw32_frame_rehighlight_1): Unnecessary to do highlight here.
	(mw32_clear_mouse_face): New function.
	(show_or_hide_mouse_cursor): Use mw32_clear_mouse_face instead of
	clear_mouse_face for synchronization with main thread.
	(mw32_message_loop): Do mw32_clear_mouse_face when pending. Use
	mw32_clear_mouse_face instead of clear_mouse_face for
	synchronization with main thread.

	* mw32fns.c (mw32m_new_focus_frame): Removed.
	(mw32_WndProc): Call mw32_new_focus_frame instaed of
	mw32m_new_focus_frame.
	(x-create-frame): Initialize
	f->output_data.mw32->pending_clear_mouse_face.
	(mw32_create_tip_frame): Ditto.

	* xfaces.c (free_realized_faces): Synchronize with message thread.

2006-02-05  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* lread.c (openp): initialize encoded_fn before GCPRO6.

2006-02-01  Kyotaro HORIGUCHI  <horiguti@meadowy.org>
	* mw32term.c: Include winable.h to use SendInput() and related
	types.
	(mw32_set_caret): Don't call main thread when this frame is
	deleted.
	(mw32_free_frame_resources): Set INVALID_HANDLE_VALUE to windows
	descriptor to mark this frame is deleted.

	* mw32term.h (ULONG_PTR): Delete definition, which is defined in
	winable.h newly included in mw32term.c.
	(PULONG_PTR): Ditto.
	(MOUSEINPUT): Ditto.
	(KEYBDINPUT): Ditto.
	(HARDWAREINPUT): Ditto.
	(INPUT): Ditto.
	(INPUT_MOUSE): Ditto.
	(INPUT_KEYBOARD): Ditto.
	(INPUT_HARDWARE): Ditto.
	(SENDINPUTPUROC): Ditto.

	* mw32ime.c (Vmw32_fep_switch_by_key_event): Renamed to
	mw32_fep_switch_by_key_event and type is changed to int.
	(fep-force-on): Ditto.
	(fep-force-off): Ditto.
	(mw32-ime-input-method-function): Change the method setting
	initial input into IME. Injecting key event instead of setting
	composition string with WM_MULE_IMM_SET_COMPOSITION_STRING, which
	has different behavior between MS-IME and ATOK.

	* callproc.c (Vmw32_process_expects_pty): Renamed to
	mw32_process_expects_pty.

	* process.c (Vmw32_process_expects_pty): External variable is
	renamed to mw32_process_expects_pty.

2006-01-29  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* s/ms-w32.h (STDC_HEADERS): Correct an invalid definition.

2006-01-28  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2006-01-26  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* image.c (mw32_image_to_fullcolor): use GET/RELEASE_FRAME_HDC
	instead of FRAME_HDC.
	(mw32_cross_disabled_image): Ditto.

	* w32proc.c (sys_spawnve): Protect decoded_program from GC.

2006-01-05  Hideyuki SHIRAI  <shirai@meadowy.org>

	* mw32term.h (ULONG_PTR, *PULONG_PTR): New types for old compiler.

2005-12-28  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* w32proc.c (sys_spawnve): Bug fix around path conversion.

	* mw32fns.c (mw32_WndProc<WM_PAINT>): Don't expose_frame when
	INPUT_BLOCKED_P.

	* dispnew.c (adjust_glyphs): Inhibit glyph matrices modification
	during expose_frame is running.

2005-12-28  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* w32.c (normalize_filename): Revert change on 2005-12-25.

2005-12-27  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32ime.c (fep_switch_event): New sync object.
	(mw32-fep-switch-by-key-event): New lisp variable.
	(mw32_ime_control_init): Initialize fep_switch_event.
	(mw32_ime_input_method_function_unwind): Set parameter properly to
	call Ffep_force_off().
	(mw32-ime-input-method-function): call
	redisplay_preserve_echo_area () before set the position of fep
	window.
	(fep-force-on): Add new mode that changes FEP state by internally
	generated windows key event instead of IMM API. This mode is
	activated when mw32-fep-switch-by-key-event is not nil.
	(fep-force-off): Ditto.
	(mw32-fep-switch-by-key-event): New function to control behavior
	of fep-force-on and fep-force-off.

	* mw32term.c (SendInputProc): New function pointer for Win32 API.
	(mw32_send_key_event): New function.
	(mw32_initialize): Initialize SendInputProc.

	* mw32term.h (struct INPUT): New struct for SendInput.
	(struct MOUSEINPUT): Ditto.
	(struct KEYBDINUT): Ditto.
	(struct HARDWAREINPUT): Ditto.
	(SENDINPUTPROC): New typedef.

	* mw32fns.c (fep_switch_state): New extern.
	(mw32_WndProc<WM_IME_NOTIFY>): Set event when FEP switched.
	(mw32_WndProc<WM_IME_REPORT>): Set event when FEP switched.

	* callproc.c (call-process): ENCODE_FILE command path.

	* w32proc.c: New include charset.h, coding.h.
	(sys_spawnve): Properly handle multibyte characters and path
	separator.

2005-12-25  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* w32.c (normalize_filename): Sync up with Emacs CVS HEAD.
	See ticket:268.

2005-12-20  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32font.c (check_lisp_object_logfont): Use EQ() instead of
	equation.
	(mw32_set_encoding_byte_from_charset): type of variable charset is
	changed.
	(set_font_frame_param): Add parameter declaration.
	(Fw32_add_font_internal): Ditto.
	(Fw32_get_font_info): Ditto.
	(Fw32_score_logfont_candidates): use XINT().

	* process.c (create_process): Use EQ() instead of equation
	operator.

	* mw32fns.c: Add function prototypes.
	(x_rgb_names): Correct a return value.
	(mw32_WndProc<WM_EMACS_MODIFY_IME_FONT_PROP>): Use NILP() instead
	of evaluating value of Lisp_Object as boolean.
	(Fx_show_tip): type of 3rd argument of try_window() should be 0,
	not Qnil.
	(Fmw32_file_dialog): Add parameter declaration.

	* buffer.c (pdump_global_buffer_p): Use EQ() instead of equation
	operator.

	* mw32bdf.c (mw32_get_bdf_font_info): Use make_number() instead of
	XFASTINT()

	* w32inevt.c (key_event): Use assignment instead of XSETINT().

	* mw32menu.c: Add a function prototype.

	* lisp.h: Add a function prototype.

	* mw32reg.c (Fmw32_registry_set): Add parameter declaration.

	* mw32ime.c: Add function prototypes.
	(IMMCONTEXTCAR): Use make_number() instead of XFASTINT().
	(IMMCONTEXTCDR): Ditto.
	(immcontext): Use XUINT().
	(Fw32_ime_create_conversion_agent): Use make_number() instead of
	XFASTINT().
	(Fw32_ime_get_composition_string): Use make_number() instead of
	direct assignment.

	* mw32term.c: Add function prototypes.
	(Fmw32_get_window_position): Add parameter declaration.
	(Fmw32_get_scroll_bar_info): Ditto.
	(note_sync_event): Use EQ() instead of equation operator.
	(show_or_hide_mouse_cursor): Ditto.
	(Fw32_get_system_metrics): Add parameter declaration.
	(Fw32_get_key_state): Ditto.
	(Fw32_get_mouse_wheel_scroll_lines): Ditto.
	(FMeadow_version): Ditto.
	(Fmw32_sh_get_file_info): Ditto.

	* xfaces.c: Add function prototypes.

	* sysdep.c (read_input_waiting): Use = operator instead of
	XSETINT().

2005-12-13  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* w32.c (sys_getsockopt): New function.
	(pfn_getsockopt): New function pointer.
	(init_winsock): Initialize pfn_getsockopt.

	* process.c (wait_reading_process_output): Get errno by
	sys_getsockopt.

2005-12-13  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32ime.c (IMMGETVIRTUALKEYPROC): New typedef.
	(ImmGetVirtualKeyProc): New function pointer.
	(input_method_function_event): New event object.
	(waiting_on_main_thread): New variable.
	(input_method_function_string): New variable.
	(last_ime_keycode): New variable.
	(last_ime_keymod): New variable.
	(mw32_ime_get_virtual_key): New function.
	(mw32_ime_record_keycode): New function.
	(mw32_ime_set_composition_string): New function.
	(mw32_get_ime_composition_string): Renamed to
	mw32_get_ime_result_string. Add process for
	mw32-ime-input-method-function.
	(mw32_ime_get_composition_string): New function.
	(mw32_ime_control_init): Initialize ImmGetVirtualKeyProc and
	input_method_function_event.
	(conversion_agent_wndproc<WM_MULE_IMM_GET_COMPOSISION_STRING>):
	Message renamed to WM_MULE_IMM_GET_RESULT_STRING and ditto about
	the calling function.
	(mw32_ime_cancel_input_function): New function.
	(mw32-ime-input-method-function): New lisp function.
	(fep-force-on): Detail doc string.
	(fep-force-off): Ditto.
	(cmode_list): New static data for imm-get-conversion-status.
	(imm-get-conversion-status): New lisp function.
	(w32-set-ime-mode): Changed.

	* mw32term.c (mw32_message_loop<WM_KEYDOWN>): Record virtual
	keycode of VK_PROCESSKEY.
	(mw32_message_loop<WM_MULE_IME_REPORT>): Don't enter the loop when
	lpStr is null.

	* mw32term.h (WM_MULE_IMM_GET_RESULT_STRING): New symbol.
	(WM_MULE_IMM_GET_SET_MODE): Numerical ID is shifted.

	* mw32fns.c (mw32_WndProc<WM_IME_COMPOSITION>):
	mw32_get_ime_composition_string() is renamed to
	mw32_get_ime_result_string(). Cancel input method function when no
	composition string is left.
	(mw32_WndProc<WM_WM_MULE_IMM_SET_COMPOSITION_STRING>): New message
	handler.
	(mw32_WndProc<WM_WM_MULE_IMM_GET_COMPOSITION_STRING>): New message
	handler.
	(mw32_create_tip_frame): Don't set tip_frame here. See ticket:253.
	(x-show-tip): Set tip_frame after complition of frame setup. See
	ticket:253.

2005-12-13  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* dispnew.c (adjust_glyphs): Remove W32_BLOCK_INPUT,
	W32_UNBLOCK_INPUT.
	(free_glyphs): Ditto.
	(update_single_window): Ditto.
	(change_frame_size_1): Ditto.
	(update_frame): Ditto. Do GET_FRAME_HDC(), RELEASE_FRAME_HDC().

	* mw32term.c (main_thread_hdc): New variable.
	(main_thread_hdc_nestlevel): Ditto.
	(main_thread_hdc_hwnd): Ditto.
	(mw32_destroy_frame_hdc): Release main thread DC on destroying the
	owner frame.
	(mw32_set_caret): Remove W32_BLOCK_INPUT/W32_UNBLOCK_INPUT. Avoid
	unnecessary call to message thread.
	(MW32_update_begin): Changed. Do blocking of caret.
	(MW32_update_end): Changed. Do unblocking of caret.
	(MW32_frame_up_to_date): Remove W32_BLOCK_INPUT/W32_UNBLOCK_INPUT.
	(mw32_get_ime_font_property): Remove treatment for
	W32_BLOCK_INPUT.
	(mw32_process_main_thread_message<WM_EMACS_EXPOSE_FRAME>):
	Removed.
	(unwind_get_device_capability): Alter RELEASE_TEMP_HDC with
	RELEASE_FRAME_HDC.
	(mw32-get-device-capability): Alter GET_TEMP_HDC with
	GET_FRAME_HDC.

	* mw32term.h (main_thread_hdc): New extern.
	(main_thread_hdc_nestlevel): Ditto.
	(main_thread_hdc_hwnd): Ditto.
	(struct mw32_output): Rename member hdc_refcount to hdc_nestlevel,
	message_thread_hdc to hdc. Removed members message_thread_hdc and
	message_thread_hdc_refcount.
	(FRAME_HDC): Changed.
	(GET_FRAME_HDC): Changed.
	(RELEASE_FRAME_HDC): Ditto.
	(GET_TEMP_HDC): Removed.
	(RELEASE_TEMP_HDC): Ditto.
	(CLEANUP_FRAME_HDC): New macro.
	(FRAME_HDC_VALID_P): Changed.
	(update_begin_hook): New extern.
	(update_end_hook): Ditto.

	* mw32sync.h (main_thread_id): New extern.
	(W32_BLOCK_INPUT): Removed.
	(W32_UNBLOCK_INPUT): Removed.

	* mw32fns.c (mw32m_new_focus_frame): Variable name for hdc is
	changed. Remove W32_BLOCK_INPUT/W32_UNBLOCK_INPUT.
	(mw32_WndProc<WM_ERASEBKGND>): Variable names for hdc are changed.
	(mw32_WndProc<WM_PAINT>): Variable name for hdc is changed. Remove
	W32_BLOCK_INPUT/W32_UNBLOCK_INPUT.
	(mw32_WndProc<WM_SETFOCUS>): Synchronizing caret state.
	(mw32_WndProc<WM_KILLFOCUS>): Ditto.
	(mw32_WndProc<WM_EMACS_SETCARET>): Changed.
	(x-create-frame): Variable names for hdc are changed. Replace
	GET_TEMP_HDC with GET_FRAME_HDC. Also for RELEASE_*.
	(mw32_create_tip_frame)Variable names for hdc are changed.

	* mw32font.c (mw32_load_lf): Replace GET_TEMP_HDC with
	GET_FRAME_HDC. Also for RELEASE_*.

	* image.c (get_image_data_from_icon): Ditto.

	* xdisp.c (redisplay_internal): Cleanup main thread hdc.

	* frame.c (delete-frame): Use GET_FRAME_HDC to block message
	thread as alternative of W32_BLOCK_INPUT.

	* window.c (delete_window): Remove
	W32_BLOCK_INPUT/W32_UNBLOCK_INPUT.
	(set-window-configuration): Ditto.

	* eval.c (signal): Remove W32_UNBLOCK_INPUT.

2005-12-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c: Remove redundant spaces.

	* mw32term.c: Ditto.

	* mw32ime.c: Ditto.

2005-12-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_real_positions): Correct the screen position of
	the frame.

2005-12-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_real_positions): Import from x_real_positions()
	in `macfns.c'.  Refer to ticket:247 .

2005-11-29  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_get_ime_font_property): Append a closing
	parenthesis.

2005-11-29  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_get_ime_font_property): Get the first character
	position on the current line as an interger instead of a lisp
	object.  Refer to ticket:250.

2005-11-29  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* w32proc.c (sys_select): Enable to detect connection error of
	non-blocking connect.

2005-11-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-11-25  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (MW32_update_begin): W32_UNBLOCK_INPUT to avoid
	dead-lock with WM_PAINT.

2005-11-24  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.h (FRAME_HDC): Returns INVALID_HANDLE_VALUE for
	non-window frame. Fixed ticket:243.
	(GET_FRAME_HDC): Ditto.
	(GET_TEMP_HDC): Ditto.
	(RELEASE_FRAME_HDC): Do nothing for non-window frame.
	(RELEASE_TEMP_HDC): Ditto.

	* mw32term.c (mw32_fill_area_pix): Remove workaround code.

	* mw32fns.c (x_set_tool_bar_lines): Don't call
	mw32_clear_native_frame_area for non-window frame.

	* mw32fns.c (mw32_create_tip_frame): Initialize hdc
	critical section for tooltip frame.

2005-11-24  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32_set_caret): W32_UNBLOCK_INPUT after the
	finishing of process in window procedure. Don't BLOCK/UNBLOCK
	caret when this frame does not use caret.
	(MW32_update_begin): Synchronize with processing of WM_PAINT.
	(mw32_free_frame_resources): Delete critical section object.

	* mw32fns.c (mw32_WndProc<WM_ERASEBKGND>): Change hdc handling.
	(mw32_WndProc<WM_PAINT>): Process expose_frame in this thread and
	synchronize with WM32_update_begin.
	(x-create-frame): Initialize critical section object.

	* mw32term.h (struct mw32_output): New member hdc_critsec.
	(RELEASE_TEMP_HDC): Bug fix.

2005-11-23  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* image.c (get_image_data_from_icon): Use GET/RELEASE_TEMP_HDC
	because this function is sometimes called in main thread.

	* mw32term.c (mw32_fill_area_pix): Work around ticket:243

2005-11-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_real_positions): Call AdjustWindowRectEx()
	instead of AdjustWindowRect().
	(mw32_check_fullscreen): Don't increment the width and the height
	of the frame.
	(mw32_check_fullscreen): Don't maximize the frame with
	`WM_SYSCOMMAND'.
	(mw32_WndProc<WM_MOVE>): Call mw32_real_positions().
	(mw32_WndProc<SIZE_RESTORED>): Ditto.
	(mw32_WndProc<WM_WINDOWPOSCHANGED): Ditto.
	(mw32_WndProc<WM_WINDOWPOSCHANGED>): Call AdjustWindowRectEx()
	instead of AdjustWindowRect().

	* frame.c (x_set_frame_parameters): Undo the last change.

2005-11-20  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.c (mw32_fill_area_pix): Use GET/RELEASE_FRAME_HDC
	because this function is sometimes called in main thread.
	(mw32_draw_hollow_cursor): Ditto.
	(mw32_draw_fringe_bitmap): Ditto.

2005-11-18  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.h (struct mw32_output): New member hdc_refcount,
	message_thread_hdc_refcount, select_event.
	(FRAME_HDC): Change the manner of getting hdc.
	(GET_FRAME_HDC_LEVEL_LIMIT): New constant.
	(GET_FRAME_HDC): New macro.
	(GET_TEMP_HDC): New macro.
	(RELEASE_FRAME_HDC): New macro.
	(RELEASE_TEMP_HDC): New macro.
	(WITH_MESSAGE_THREAD_HDC): New macro.
	(MW32_BLOCK_CARET): New macro.
	(MW32_UNBLOCK_CARET): New macro.
	(WM_EMACS_EXPOSE_FRAME): New message.

	* mw32term.c (mw32_anticipate_overwrite_caret): Removed.
	(mw32_restore_overwritten_caret): Ditto.
	(mw32_destroy_frame_hdc): Deleted. Cease hdc pooling.
	(mw32_set_caret): Hiding caret synchronously.
	(windows_in_frame_redrawn): Variable removed.
	(MW32_update_begin): Totally rewritten.
	(MW32_update_end): Ditto. Don't call mw32_update_frame_alpha.
	(mw32_update_frame_alpha): Cease force redrawing.
	(mw32i_update_window_begin): Changed.
	(mw32i_update_window_end): Caret control is moved into
	MW32_update_end.
	(mw32_update_alpha_hint): Lisp variable removed.
	(mw32_write_glyphs): Don't call mw32_anticipate_overwrite_caret.
	(mw32_insert_glyphs): Ditto.
	(mw32_clear_end_of_line): Cease controllng caret.
	(MW32_set_vertical_scroll_bar): Get/Release hdc when needed.
	(mw32_process_main_thread_message<WM_EMACS_EXPOSE_FRAME>): New
	message handler. Do expose_frame in main thread.
	(show_or_hide_mouse_cursor): Alter parameter dpyinfo by f. Call
	clear_mouse_face with message_thread_hdc.
	(mw32_message_loop): Position of show_or_hide_mouse_cursor is
	moved backwards.
	(mw32_free_frame_resources): CloseHandle for new member
	setcaret_event.
	(unwind_get_device_capability): New function.
	(mw32-get-device-capability): Change the manner to get hdc.

	* mw32fns.c (mw32_update_frame_alpha): Remove parameter updated_p.
	(mw32_set_frame_alpha): Ditto.
	(mw32_WndProc): Ditto.
	(x_set_tool_bar_lines): Get and release hdc when needed.
	(mw32_WndProc<WM_PAINT>): Request main-thread executing
	expose_frame rather than myself.
	(mw32_WndProc<WM_EMACS_SETCARET>): Signal event object when
	processing done.
	(x-create-frame): Add initialization of
	output_data.mw32->hdc_refcount, message_thread_hdc_refcount,
	setcaret_event. Get and release hdc for initialize use.

	* mw32font.c (mw32_set_windows_logical_font): Change the manner of
	getting hdc.
	(mw32_load_lf): Get and release hdc by myself.

	* dispnew.c (direct_output_forward_char): Get hdc, don't call
	mw32_update_frame_alpha.

	* xdisp.c (redisplay_internal): Get hdc by myself.
	(ALLOCATE_HDC): Tune to new hdc handling.
	(RELEASE_HDC): Ditto.
	(message_thread_hdc_backup): Variable removed.
	(erase_phys_cursor): Don't store hdc internally.
	(display_and_set_cursor): Block caret. Tune to new hdc/caret
	handling.
	(show_mouse_face): Ditto.

2005-11-16  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (windows_in_frame_redrawn): New variable. Modify
	the algorithm to detect window modification.
	(mw32i_update_window_begin): Ditto. And remove meaningless code.
	(MW32_update_end): Ditto.
	(mw32i_update_window_end): Ditto. And remove meaningless code.

	* dispnew.c (direct_output_forward_char): Supress unnecessary
	redrawing when cursor type is caret cursor.

	* xdisp.c (display_and_set_cursor): Don't call erase_phys_cursor
	for caret cursor.

	* w32proc.c (sys_select_socket): Bug fix. Initialize variable.

2005-11-15  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32i_update_window_begin): Don't process for
	deleted frame.
	(mw32i_update_window_end): Ditto.
	(mw32_update_frame_alpha): Add new parameter updated_p. Avoid
	excessive WM_PAINT when alpha >= 0.
	(MW32_update_end): Ditto.

	* mw32fns.c (mw32_update_frame_alpha): Change prototype.
	(mw32_set_frame_alpha): Ditto.
	(mw32_WndProc): Ditto.
	(mw32_window): Ditto.

	* dispnew.c (direct_output_forward_char): Ditto.

	* xdisp.c (get_window_cursor_type): Bug fix for previous change.

	* w32.c (sys_select_socket): Return 0 when no fd is specified.

	* w32proc.c (sys_select): Return error when sys_select_socket
	failes.

2005-11-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_encode_char): For DIM=1 charset, set
	ccl->reg[2] to -1 before calling ccl_driver. Refer to ticket:229.

2005-11-14  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* w32.c (sys_single_select_nowait): Deleted. Change the method
	by which asynchronous connect is treated. See ticket:233.
	(sys_select_socket): New function. Ditto.

	* w32proc.c (sys_select): Use sys_select_socket instead of
	sys_single_select_nowait. Ditto.

2005-11-14  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* w32proc.c (sys_select): Initialize o[rw]fds when [rw]fds is
	NULL. Check owfds independent of orfds.

	* mw32term.c (mw32i_update_window_end): Suppress redundant use of
	XFRAME().
	(MW32_update_end): Synchronizing caret state. Fixed ticket:230.

	* xdisp.c (get_window_cursor_type): Replace caret-cursor with
	hollow-box-cursor for non-selected window. Fixed ticket:231.

2005-11-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_real_positions): Normalize coding style.
	(mw32_check_fullscreen): Ditto.
	(mw32_check_fullscreen): Don't turn on `async_visible' of the
	frame explicitly.
	(mw32_check_fullscreen): Correct the top-left position of the
	frame.
	(mw32_WndProc<WM_SHOWWINDOW>): New section.  Refer to ticket:160.

2005-11-13  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* w32.c (pfn_fd_set): New typedef.
	(pfn_select): New variable for platform function.
	(init_winsock): New initialize for pfn_select.
	(set_errno): New errocode WSAEWOULDBLOCK (EINPROGRESS).
	(sys_single_select_nowait): New function.

	* w32proc.c (sys_select): Handles asynchronous connect.

2005-11-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_SYSCOMMAND>): Mask the value of
	wParam with 0xFFF0 to get the type of system command requested.

2005-11-11  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* process.c (mw32-set-pty-flag): Set pty_flag by t/nil but 1/0.

2005-11-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc): Normalize coding style.

2005-11-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_real_positions): Normalize coding style.
	(mw32_check_fullscreen): Check if the full screen is required or
	not strictly.  When the full width or full height is required,
	arrange the frame size on its own.
	(mw32_WndProc<WM_WINDOWPOSCHANGED>): Check if the full screen is
	required or not strictly.
	Refer to ticket:196.

2005-11-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32clpbd.c (last_clipboard_text_size): New variable.
	(Fw32_set_clipboard_data): Keep the size of the clipborad data in
	`last_clipboard_text_size'.
	(Fw32_set_clipboard_data): Reset `last_clipboard_text_size'.
	(Fw32_get_clipboard_data): Check if the size of the clipborad data
	is equal to the last one.
	Refer to ticket:196.

2005-11-03  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* ccl.h (struct ccl_program): Cancel previous change.

	* ccl.c (setup_ccl_program): Ditto.
	(check_ccl_update): Ditto.

	* mw32erm.c (mw32_encode_char): Check ccl program update.

2005-11-03  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* ccl.h (struct ccl_program): Add new member alloc_size.
	* ccl.c (setup_ccl_program): Copy ccl_program from lisp object on
	ccl setup.
	(check_ccl_update) : Ditto.

2005-11-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (define_imagemagick_type): Ignore Encapsulated
	PostScript related formats, which ImageMagick cannot handle
	correctly.  Refer to ticke:209.

2005-11-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (Fmw32_get_image_magick_extensions): Ignore Encapsulated
	PostScript related formats, which ImageMagick cannot handle
	correctly.  Refer to ticke:209.

2005-11-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-11-01  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* emacs.c (bug_reporting_address, REPORT_MEADOW_BUG_ADDRESS):
	Defined a bug reporting email address for meadow and use it
	without emacs's address selection logic which brings abend.
	See ticket:157 for more detail.

2005-11-01  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.c (mw32_calc_absolute_position): Convert bottom-right
	to top-left coordinate within screen, not within working area.

2005-11-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_check_fullscreen): Don't maximize the frame when
	the frame is iconified and set `async_visible' 1.
	(mw32_WndProc<WM_SIZE>): Set the FULLSCREEN_BOTH bit of
	`want_fullscreen'.
	(mw32_WndProc<WM_WINDOWPOSCHANGED>): Don't rearrange the frame
	size if the FULLSCREEN_BOTH bit of `want_fullscreen' is 1.
	(mw32_WndProc<WM_SYSCOMMAND>): New section.

	* mw32term.c (x_set_window_size): Simplify the expression to
	calculate `scroll_bar_actual_width' of the frame.

	* frame.c (x_set_frame_parameters): Don't call Fset_frame_size()
	if `want_fullscreen' of the frame is true to keep it fullscreen.

2005-11-01  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32_calc_absolute_position): Relocate frame
	position within desctop when mw32-restrict-frame-position is
	non-nil. Bug fix for previous change. See ticket:212.
	(mw32-restrict-frame-position): New variable.

	* mw32fns.c (mw32m_create_frame_window): Remove code for frame
	reallocation.
	(mw32_WndProc<WM_IME_REQUEST>): mw32_get_ime_reconversion_length
	has been united with mw32_get_ime_reconversion_string.

	* mw32ime.c (mw32_get_ime_reconversion_string): Give up
	reconversion for read-only text. See ticket:218.
	(mw32_get_ime_reconversion_length): Removed, united with
	mw32_get_ime_reconversion_string.

2005-10-28  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32-get-window-position): New lisp function.
	(mw32_update_frame_alpha): Cast the parameter to suppress the
	warning.

	* mw32fns.c (mw32m_create_frame_window): Prevent the title bar
	from overlapping with the task bar at the top of the screen on
	creating frame.
	(mw32_WndProc<WM_EMACS_UPDATE_ALPHA>): Cast the parameter to
	suppress the warning.

2005-10-26  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (WM_EMACS_UPDATE_ALPHA): New message.
	(mw32_update_frame_alpha): Change definition. Allow
	changing window style as usual function. Inhibit changing state
	on main thread. See ticket:210.
	(MW32_update_end): Definition of mw32_update_frame_alpha is
	changed.

	* mw32fns.c (mw32_set_frame_alpha): Allow nil as part of alpha
	value list. Don't call mw32_update_frame_alpha. See ticket:210.
	(mw32_WndProc): Definition of mw32_update_frame_alpha is changed.
	(mw32_WndProc<WM_EMACS_UPDATE_ALPHA>): New message handler.
	(mw32_window): Definition of mw32_update_frame_alpha is changed.

	* dispnew.c (direct_output_forward_char): Ditto.

2005-10-19  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* dispnew.c (direct_output_forward_char): Call
	mw32_update_frame_alpha() to refresh display when frame alpha is
	used.
	Fixed ticket:210

	* mw32term.c (show_or_hide_mouse_cursor): Suppress unnecesary
	timer creation.
	(show_or_hide_mouse_cursor<WM_TIMER>): Delete timer when the mouse
	cursor is hidden.

2005-10-21  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.c (mw32_calc_absolute_position): Implement this
	function.
	(x_set_offset): Set negative offsets correctly.

2005-10-19  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (show_or_hide_mouse_cursor): Reconstruct code. See
	ticket:205 .
	(show_or_hide_mouse_cursor<WM_MOUSELEAVE>): Don't change
	current_cursor of current frame when leaving client area.
	(w32-hide-mouse-stickiness): New variable. See ticket:205
	(w32-hide-mouse-timeout): Change meaning. See ticket:205
	(w32-hide-mouse-on-key): Ditto.
	(w32-hide-mouse-by-wheel): Ditto.

2005-10-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_check_fullscreen): Turn the process over to
	Windows to work around ticket:188.
	(mw32_WndProc<WM_WINDOWPOSCHANGED>): Don't restrict the frame size
	to work around ticket:188.

2005-10-18  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32_hide_mouse_by_wheel): Change type to
	Lisp_Object.
	(show_or_hide_mouse_cursor): Lower sensitivity to mouse motion
	when hide mouse cursor by wheel rotaion.

2005-10-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (Fx_create_frame): Suppress compilation warnings.
	Remove redundant spaces.

	* mw32term.c (mw32_update_frame_alpha): Ditto.

2005-10-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (MW32_set_vertical_scroll_bar): Partially sync up
	with Emacs CVS HEAD to fix ticket:194.

2005-10-16  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32-update-alpha-hint): New LISP variable.
	(mw32_update_frame_alpha): Use mw32-update-alpha-hint to select
	redrawing method.

2005-10-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32menu.c (set_frame_menubar): Call x_set_window_size() to fix
	#189. This forces the window size to be recomputed if menubar has
	just been created.

2005-10-15  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* alloc.c (PDUMP_POINTERS_SIZE): Expanded from 127 to 255.
	* mw32fns.c (mw32_WndProc<WM_ACTIVATE>): Don't simply break
	here. It is necessary to call DefWindowProc() for this message.
	(mw32_WndProc<WM_ACTIVATEAPP>): Ditto.

	* mw32term.c (mw32_update_frame_alpha): Suppress excessive call of
	SetLayeredWindowAttributes().
	(w32-hide-mouse-by-wheel): New varilable.
	(show_or_hide_mouse_cursor): Add function to hide mouse cursor on
	mouse wheel rotation.

2005-10-15  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32fns.c (file_dialog_callback): Flags of open file dialog are
	modified when file type is changed.

2005-10-15  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32_update_frame_alpha): Avoid excessive call of
	SetLayeredWindowAttributes() on moving layered window.

2005-10-14  Kyotaro HORIGUCHI  <horiguti@meadowy.org>
	* alloc.c (PDUMP_SUBR_DOC_SIZE): Expand to 1100.

	* mw32term.c (mw32_load_cursor): New external function.

	* mw32ime.c (ImmIsIMEProc): New Win32 API.
	(mw32-ime-available): New function.
	(mw32-input-langunage-code): New function.

	* mw32fns.c (mw32_init_app): Don't set window class cursor.
	(x-create-frame): Load IDC_ARROW cursor when failed to load
	IDC_HAND. Windows NT, 95 does not has IDC_HAND cursor.
	(mw32_real_positions): New function imported from w32fns.c.
	(mw32_check_fullscreen): New function imported from w32term.c.
	(mw32_WndProc<WM_ACTIVATE>): New message handler.
	(mw32_WndProc<WM_ACTIVATEAPP>): New message handler.

2005-10-14  Hideyuki SHIRAI  <shirai@meadowy.org>

	* mw32term.h (IDC_HAND): New constant for Win32 API.

2005-10-13  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.h (mw32_alpha_type): New enumeration.
	(struct mw32_output): Remove *_alpha except current_alpha, and add
	alpha[]. Add new member current_cursor;

	* mw32term.c (mw32_update_frame_alpha): Refine code and sadd
	upport of alpha of resizing window.
	(show_or_hide_mouse_cursor): Set mouse cursor.
	(show_or_hide_mouse_cursor<WM_MOUSELEAVE>): Restore mouse cursor
	when leaving.
	(mw32_define_frame_cursor): Set current cursor.
	(mw32_term_init): Initialize mouse cursor image.

	* mw32fns.c (CHECK_ALPHA_RANGE): New macro.
	(mw32_set_frame_alpha): Refine code and sadd upport of alpha of
	resizing window. Remove excessive whitespaces.
	(mw32_WndProc<WM_SETFOCUS>): Immediately udpate alpha.
	(mw32_WndProc<WM_KILLFOCUS>): Immediately udpate alpha.
	(mw32_WndProc<WM_MOVING>): Refine.
	(mw32_WndProc<WM_SIZING>): New event handler.
	(mw32_WndProc<WM_EXITSIZEMOVE>): Ditto.
	(x-create-frame): Following changes of mw32_output.  Initialize
	mouse cursor images.
	(mw32_load_cursor): New function copied from w32fns.c.

2005-10-12  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.h (WS_EX_LAYERED): Avoid redefining this macro.
	(LWA_ALPHA): Ditto.

2005-10-12  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.h(SETLAYEREDWINDOWATTRPROC): New typedef.
	(WS_EX_LAYERED): New constant for Win32 API.
	(LWA_ALPHA): New constant for Win32 API.
	(WM_EMACS_HIDE_TOOLTIP): New message.

	* mw32term.c: Remove include windows.h.
	(mw32_initialize): Setup SetLayeredWindowAttributes() of
	user32.dll.
	(mw32_process_main_thread_message<WM_EMACS_HIDE_TOOLTIP>): New
	message handler to hide tooltip.
	(show_or_hide_mouse_cursor): Send WM_EMACS_HIDE_TOOLTIP to main
	thread to hide tooltip on hiding mouse cursor.

	* mw32fns.c: Remove include windows.h.
	(mw32_set_frame_alpha): Return if SetLayeredWindowAttributes
	cannot be used.

2005-10-12  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c: (show_or_hide_mouse_cursor): Do mouse-face control.
	(mw32_message_loop): Move code about mouse-face hiding into
	show_or_hide_mouse_cursor.

	* xdisp.c (erase_phys_cursor): Now message_thread_hdc here is not
	from BeginPaint(), so let it be used when valid. Re-get main
	thread hdc when hdc is invalidated. Move position of the code
	block to cover draw_phys_cursor_glyph().
	Fixed ticket:166

2005-10-12  Kyotaro HORIGUCHI  <horiguti@meadowy.org>
	* mw32fns.c: include <windows.h> to use
	(mw32_inhibit_hide_mouse): New extern.
	(Fmw32_file_dialog): Inhibit hiding mouse cursor when displaying
	dialogue.
	Fixed ticket: 164

	* mw32term.c: include <windows.h> to use
	(mw32_inhibit_hide_mouse): New varialbe.
	(show_or_hide_mouse_cursor): Inhibit hiding mouse cursor when
	mw32_inhibit_hide_mouse is not 0.

2005-10-12  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* frame.c (frame_parms): New frame parameter "alpha".

	* mw32fns.c: include <windows.h> to use
	SetLayeredWindowAttributes.
	(Qalpha): New symbol.
	(mw32-frame-alpha-lower-limit): New LISP variable.
	(mw32_update_frame_alpha): New extern.
	(mw32_set_frame_alpha): New function.
	(mw32_WndProc<WM_MOVING>): New message handler.
	(mw32_window): Setup initial frame alpha.
	(x-create-frame): Initiallize frame parameters *-alpha.
	(mw32i_frame_parm_handlers): Add frame parm handler
	mw32_set_frame_alpha.

	* mw32term.h(struct mw32_output): New four members active_alpha,
	inactive_alpha, moving_alpha, and current_alpha.

	* mw32term.c: include <windows.h> to use
	SetLayeredWindowAttributes.
	(mw32_update_frame_alpha): New function.
	(MW32_update_end): Refresh layered window when frame alpha is set.

2005-10-12  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (MW32_MOUSE_HIDE_TIMER_ID): New constant;
	(show_or_hide_mouse_cursor): Use timer to perform hiding mouse
	cursor by timeout.
	Fixed ticket: 182

2005-10-05  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* minibuf.c (Fminibuffer_complete_word): Add GCPRO.

2005-10-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-10-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_rectangle): New function.
	(mw32_draw_glyph_string_foreground): Call mw32_draw_rectangle()
	instead of Rectangle() to fix #168.
	(mw32_draw_composite_glyph_string_foreground): Ditto.

2005-09-27  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in (depend): Output file is renamed.
	Update dependency.

2005-09-23  Masayuki Fujii  <boochang@m4.kcn.ne.jp>

	* mw32term.c (Fw32_set_modifier_key): Check virtkey instead of
	key.

2005-09-21  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (w32-ansi-code-page): New Lisp variable.
	(syms_of_mw32fns): Set w32-ansi-code-page.  This variable affects
	the behavior of set-locale-environment.

2005-09-20  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* fileio.c (Fread_file_name): Sync UP with Emacs CVS. Pass Qt as
	fifth parameter to Fmw32_file_dialog if only directly.

	* mw32fns.c (Fmw32_file_dialog): Add fifth argument `only_dir_p'.

2005-09-20  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* makefile.mw32-in (ALLOBJS): Removed using of obsoleted macro
	OBJ2.
	($(TEMACS)): Likewise.

2005-09-19  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in (install): Copy buildobj.lst to
	$(INSTALL_DIR)/bin for dump.bat.

2005-09-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (erase_phys_cursor): Undo the last change concerned with
	`message_thread_hdc'.

2005-09-17  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.meadow.w32-in: Removed.

	* makefile.nt: Ditto.

2005-09-16  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (MW32_update_end): Avoid using f->output_data.mw32
	before creation of frame.

2005-09-15  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* xdisp.c (set_glyph_string_background_width): Condition on
	background color cause garbage background at the end of display
	line. Disable this check.

	* fileio.c (expand-file-name): Bug fix for multibyte
	default-directory syncing up with Emacs CVS HEAD (1.554)
	(auto_save_error): Pass copy of lisp string to message2 syncing up
	with Emacs CVS HEAD. (1.553)

	* coding.c (code_convert_region_unwind): Sync up with Emacs CVS
	HEAD(1.325). Argument format changed.
	(run_pre_post_conversion_on_str): Sync up with Emacs CVS
	HEAD(1.325). If pre-write-conversion function changed the current
	buffer, delete the new buffer.
	(run_pre_write_conversin_on_c_str): Likewise.

	* mw32term.h (Vw32_system_coding_system): removed.
	(Vlocale_coding_system): New extern in replace of
	Vw32_system_coding_system.
	Fixed ticket:130

	* mw32term.c (mw32-sh-get-file-info): Use locale-coding-system
	instead of obsolete variable w32-system-coding-system.

	* mw32fns.c (mw32_set_name): Ditto.
	(mw32_set_title): Ditto.
	(mw32-file-dialog): Ditto.
	(mw32-file-dialog): Ditto.

	* mw32ime.c (mw32_get_ime_reconversion_length): Ditto.
	(mw32_get_ime_reconversion_string): Ditto.
	(w32-ime-register-word-dialog): Ditto.
	(w32-ime-set-composition-string): Ditto.
	(w32-ime-get-composition-string): Ditto.
	(w32-ime-get-candidate-list): Ditto.

	* mw32reg.c (registry_to_reg_sz_size): Ditto.
	(registry_to_reg_sz): Ditto.
	(mw32-registry-list-keys): Ditto.
	(mw32-registry-list-values): Ditto.
	(mw32-registry-get): Ditto.
	(mw32-registry-delete-key): Ditto.
	(mw32-registry-delete-value): Ditto.
	(mw32-registry-create-key): Ditto.
	(mw32-registry-set): Ditto.

	* mw32menu.c (appendmenu_encode): Ditto.
	(modifymenu_encode): Ditto.
	(insertmenu_encode): Ditto.
	(add_menu_item): Ditto.

	* mw32mci.c (mw32-mci-send-string): Ditto.
	(mw32-mci-get-error-string): Ditto.

	* w32proc.c (Vw32_system_coding_system): Removed.
	(Vlocale_coding_system): New extern in replace of
	Vw32_system_coding_system.
	(w32-get-locale-info): Use locale-coding-system instead of
	obsolete variable w32-system-coding-system.

	* mw32font.c (Vw32_system_coding_system): Removed.
	(logfont_to_lisp_object): Use locale-coding-system instead of
	obsolete variable w32-system-coding-system.
	(encode_logfont_name): Ditto.
	(mw32_enumfontfamilyproc): Ditto.
	(w32-enum-logfont): Ditto.
	(syms_of_mw32font): Remove definition of w32-system-coding-system.

	* coding.h (ENCODE_SYSTEM): Use locale-coding-system instead of
	obsolete variable w32-system-coding-system.
	(DECODE_SYSTEM): Ditto.
	(Vw32_system_coding_system): removed.

2005-09-14  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_EMACS_SETCARET>): Bug fix. Cope with
	sudden switch of frame without WM_KILLFOCUS and occasional
	failure of ShowCaret ().
	Fixed ticket:151

	* mw32term.h (TOBESHOWN_CARET): Ditto, New symbol.
	(MW32_FRAME_CARET_STATE2): Ditto, New macro.

	* mw32ime.c: Fix type of return values.

2005-09-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-09-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_message_loop): Set `keyboard_handle' to the
	signaled state.

2005-09-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (show_mouse_face): Don't show the mouse face when
	dpyinfo->mouse_face_window is nil.

2005-09-04  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in (bootstrap-clean): Don't remove
	../bin/Meadow.dmp.
	(bootstrap-emacs): Don't copy Meadow.exe and Meadow.tmp to ../bin.

2005-09-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.mw32-in (WIN32OBJ): Remove the redundant object.

2005-09-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32menu.c: Declare function prototypes with arguments.
	(single_menu_item): Remove the last argument.
	(single_keymap_panes): Remove the codes related with `notbuttons'.

2005-09-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32menu.c (add_menu_item): Draw graphical radio buttons and
	tickboxes.
	(single_menu_item): Don't draw text-based radio buttons and
	tickboxes.
	(mw32menu_show): Call add_menu_item() with `type' and `selected'
	to draw graphical radio buttons and tickboxes.

2005-09-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32menu.c: Sync up with Emacs CVS HEAD.

2005-09-03  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* process.c (Fmw32_set_pty_flag): New Lisp function.
	(create_process): Correct data type of
	Vmw32_process_expects_pty. Set process under setup to
	Vmw32_process_under_setup.

	* callproc.c (Vmw32_process_under_setup): New Lisp variable.
	(Fcall_process): Set nil to Vmw32_process_under_setup.

2005-09-02  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.mw32-in: New file.

2005-09-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32menu.c (single_menu_item): Add a prefix to not only the item
	name but the pane name.

2005-09-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_message_loop): New argument `leftover'.  Thanks
	to pooh <pooh-san@basil.freemail.ne.jp>.
	(mw32_async_handle_message): Don't call WaitMessage() if
	`leftover' which is obtained in mw32_message_loop() is false.
	Thanks to pooh <pooh-san@basil.freemail.ne.jp>.

2005-09-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (glyph_rect): Sync up with Emacs CVS HEAD.

2005-08-27  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-08-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_message_loop): Don't set `keyboard_handle' to
	the signaled state.  Thanks to ISHIKURA Hiroyuki
	<neko@cc.rim.or.jp>.
	(mw32_async_handle_message): Set `keyboard_handle' to the signaled
	state.  Thanks to ISHIKURA Hiroyuki <neko@cc.rim.or.jp>.

2005-08-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_async_handle_message): Don't call
	WaitForSingleObject(). This is quite redundant.

2005-08-25  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32_scroll_bar_handle_click): Revert the
	method of convert scroll bar range.
	(mw32_scroll_bar_inhibit_set_handle): Removed. Use bar->dragging
	instead.
	(mw32-get-scroll-bar-info): New emacs function.
	(mw32-initialize): Correct comment format.

	* termhooks.h (enum scroll_bar_part): New part
	scroll_bar_handle_position.

	* keyboard.c (Qhandle_position): New symbol.
	(scroll_bar_parts): Add Qhandle_position.

2005-08-24  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32_scroll_bar_inhibit_set_handle): New variable.
	(mw32_scroll_bar_handle_click): Calculate range of scroll bar
	using page size so as to make fit with real scroll range. Inhibit
	changing ranges of scrollbar during scrolling buffer with
	thumbtrack.
	(mw32_scroll_bar_set_handle): Inhibit changing ranges of scrollbar
	during scrolling buffer with thumbtrack.

2005-08-23  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (x_old_rgb_names): Support new pixel format,
	"#RRGGBBAA".  Thanks to yamazaki-k@mwe.biglobe.ne.jp.

2005-08-23  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (logfont_to_lisp_object): Don't use XFASTINT() to get
	the first argument for Flist().  Use an integer instead.  Thanks
	to yamazaki-k@mwe.biglobe.ne.jp.
	(mw32_enumfontfamilyproc): Ditto.

2005-08-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (syms_of_image): Add image type of XPM in Meadow
	environment.

2005-08-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-08-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (imagemagick_get_bits_per_pixel): Return 24 when the
	image type is GrayscaleType.

2005-08-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-08-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.h (struct MW32LogicalFont): New member `max_width'.
	(FONT_MAX_WIDTH): New macro.

	* mw32font.c (mw32_set_windows_logical_font): Initialize
	`plf->max_width'.
	(set_font_info): Initialize `fontp->size' with FONT_MAX_WIDTH()
	instead of FONT_MAX_WIDTH().

2005-07-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (define_imagemagick_type): Add comment.
	Don't add the image type which has already defined.
	(init_image): Undo the last change.
	Don't define the image type which has already defined.
	Fix comment.

2005-07-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (init_image): Initialize ImageMagick after the
	definition of BMP.

2005-07-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c: Remove redundant spaces.

2005-07-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (XPM_find_next_line): Consider other EOL types, such as
	`dos' and `mac'.
	Normalize coding style and remove redundant spaces.

2005-07-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_change_window_heights): Removed.
	(x_set_menu_bar_lines): Sync up with Emacs CVS HEAD.
	(x_set_tool_bar_lines): Ditto.
	(Fx_create_frame): Ditto.

2005-07-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32bdf.c: Normalize coding style and remove redundant spaces.

	* mw32bdf.c: Ditto.

	* mw32bdf.h: Ditto.

	* mw32clpbd.c: Ditto.

	* mw32dl.h: Ditto.

	* mw32fns.c: Ditto.

	* mw32font.c: Ditto.

	* mw32font.h: Ditto.

	* mw32ime.c: Ditto.

	* mw32mci.c: Ditto.

	* mw32mci.h: Ditto.

	* mw32mem.c: Ditto.

	* mw32menu.c: Ditto.

	* mw32oime.c: Ditto.

	* mw32reg.c: Ditto.

	* mw32term.c: Ditto.

	* mw32term.h: Ditto.

	* ChangeLog.Meadow: Ditto.

2005-07-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (resolve_mask_color): Don't destroy pixel iterators in
	use.

2005-07-10  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* w32proc.c (sys_spawnve): Don't use LISP string object directly
	being pointed by C pointer here because GC may move the object on
	Ffuncall(call1) used after here.

2005-07-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c (init_image): Don't entry XPM and BMP to avoid
	duplicated definitions.

2005-07-09  Kyotaor HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (update_mouse_cursor): Renamed to
	show_or_hide_mouse_cursor.
	(show_or_hide_mouse_cursor): Renamed from update_mouse_cursor and
	gathering codes to controlling mouse cursor visibility.
	(mw32_message_loop<WM_KEYDOWN>): Moved codes controlling mouse
	cursor visiblity into show_or_hide_mouse_cursor().
	(mw32_message_loop<WM_*BUTTON*>): Ditto.

2005-07-05  Kyotaor HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c (WndProc<WM_PAINT>): Move codes abount hdc from
	expose_frame to here because of change of definition of
	expose_frame. Use hdc get with GetDC () instead of BeginPaint ()
	for message_thread_hdc because of unnecessary clipping of region.

	* xdisp.c (expose_frame): Ditto.
	(erase_phys_cursor): Delete codes obsoleted by this change.

	* mw32term.c (safe_SaveDC): Correct misspelling of comment.

2005-07-05  Kyotaor HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (safe_SaveDC): New function to retry SaveDC up to 5
	times on failure.
	(SaveDC): New macro to replace original SaveDC() to
	safe_SavceDC().

	* w32term.c (SaveDC): Ditto.

	* xdisp.c (SaveDC): Ditto.

2005-07-03  Kyotaor HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (Fmw32_get_device_capability<colors>): Use BITSPIXEL
	and PLANES instead of NUMCOLORS of GetDeviceCaps() to get number
	of available colors because NUMCOLORS returns unexpected value for
	Windows remote desktop.
	(x_set_window_size): Actual scroll bar width is
	FRAME_CONFIG_SCROLL_BAR_WIDTH (f) if it has a valid value.

	* mw32fns.c (Fx_display_color_cells): Ditto.

2005-06-28  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c: Sync up with Emacs CVS HEAD.
	(imagemagick_image_type_lisp_symbol): Don't protect symbols that
	have already been protected from GC.

	* mw32fns.c (mw32_decode_color): Made external.
	(enum image_value_type): Moved to `image.h'.
	(struct image_keyword): Ditto.
	(make_image): Ditto.
	(free_image): Ditto.
	(prepare_image_for_display): Ditto.
	(image_ascent): Ditto.
	(mw32_destruct_image): Ditto.
	(mw32_alloc_image_color): Ditto.
	(mw32_create_image_simple): Ditto.
	(make_image_cache): Ditto.
	(free_image_cache): Ditto.
	(clear_image_cache): Ditto.
	(Fclear_image_cache): Ditto.
	(postprocess_image): Ditto.
	(lookup_image): Ditto.
	(cache_image): Ditto.
	(forall_images_in_image_cache): Ditto.
	(mw32_find_image_file): Ditto.
	(mw32_map_image_file): Ditto.
	(slurp_file): Ditto.
	(bmp_*): Ditto.
	(magick_*): Ditto.
	(xpm_*): Ditto.
	(mw32_image_to_fullcolor): Ditto.
	(mw32_cross_disabled_image): Ditto.
	(mw32_disable_image): Ditto.
	(mw32_detect_edges): Ditto.
	(mw32_laplace): Ditto.
	(mw32_emboss): Ditto.
	(mw32_edge_detection): Ditto.
	(syms_of_mw32fns): Remove the definition of moved functions.
	(init_mw32fns): Ditto.

	* mw32term.c (mw32_setup_image_bitmap_handle): Made external.

	* dispextern.h (XImagePtr_or_DC): New type definition.
	(struct image): New member: background, background_transparent
	background_valid an background_transparent_valid.

	* alloc.c (NSTATICS): Increased.

2005-06-25  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c (mw32_find_image_file): Change the comment following
	removal of mw32-bitmap-file-path.

2005-06-25  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_EMACS_SETCARET>): Don't block
	UNBLOCK_CARET when the caret is being bloked.

	* xdisp.c (erase_phys_cursor): Use hdc of main thread to erase
	cursor region.

2005-06-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* image.c: Sync up with Emacs CVS HEAD.
	(check_x_frame): Define `check_x_frame' and `Bitmap_Record' for
	Meadow.

	* mw32fns.c (x_bitmap_height): Moved to `image.c'.
	(x_bitmap_width): Ditto.
	(x_bitmap_pixmap): Ditto.
	(mw32_allocate_bitmap_record): Ditto.
	(mw32_reference_bitmap): Ditto.
	(x_create_bitmap_from_data): Ditto.
	(x_create_bitmap_from_file): Ditto.
	(x_destroy_bitmap): Ditto.
	(x_destroy_all_bitmaps): Ditto.
	(define_image_type): Ditto.
	(lookup_image_type): Ditto.
	(valid_image_p): Ditto.
	(image_error): Ditto.
	(parse_image_spec): Ditto.
	(image_spec_value): Ditto.
	(Fimage_size): Ditto.
	(Fimage_mask_p): Ditto.
	(Vimage_cache_eviction_delay): Ditto.
	(Vmw32_bitmap_file_path): Renamed `Vx_bitmap_file_path' and moved
	to `image.c'.
	(syms_of_mw32fns): Don't initialize Qlaplace, Qemboss,
	Qedge_detection, Qheuristic, QCmatrix, QCcolor_adjustment, QCmask,
	Qbmp, QCtype, QCconversion, QCheuristic_mask, QCcolor_symbols,
	QCascent, QCmargin, QCrelief, QCindex, Qpostscript, Qxbm,
	Qpbm,Qxpm, Qjpeg, Qtiff, Qgif and Qpng.

	* mw32term.h (struct mw32_bitmap_record): Rename bhmp pixmap.

	* emacs.c (main): Call init_image().

2005-06-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-06-22  Hideyuki SHIRAI  <shirai@meadowy.org>

	* mw32term.c (Fmw32_sh_get_file_info): Encode `path_string' to
	w32_system_coding_system.

2005-06-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (get_file_attributes): New function.
	(get_info_to_retrieve): Ditto.
	(Fmw32_sh_get_file_info): Ditto.
	(syms_of_mw32term): Define Fmw32_sh_get_file_info().

	* mw32fns.c (magick_set_format): New function.
	(get_icon_size): Ditto.
	(pack_bitmap_data): Ditto.
	(get_image_data_from_icon): Ditto.
	(mw32_create_image_blob_from_icon): Ditto.
	(Fmw32_magick_scale_image): Free the memory allocated for
	ImageMagick.

2005-06-15  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* callproc.c (Vmw32_process_expects_pty): Correct type to int.
	* process.c (create_process): Refer to process-connection-type
	to determine whether process uses pty or not.

2005-06-14  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* callproc.c (mw32-process-expects-pty): New variable.
	(Fcall_process): Set mw32-process-expects-pty to nil.
	* process.c (create_process): Set mw32-process-expects-pty to t.

2005-06-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (magick_get_image_blob): New function.
	(magick_scale_image): Ditto.
	(Fmw32_magick_scale_image): New function.
	(syms_of_mw32fns): Define Fmw32_magick_scale_image().

2005-05-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (get_window_cursor_type): Sync up with Emacs CVS HEAD.
	(display_and_set_cursor): Disable system caret cursor when switch
	from system caret to non-system one.  Removed from
	get_window_cursor_type().

2005-05-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_IME_ENDCOMPOSITION>): Inactivate
	ime_composition_state

2005-05-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32ime.c (mw32_set_ime_conv_window): Correct the area of the
	IME composition window.  Thanks to Hidefumi Fujimoto
	<fujimoto@pluto.dti.ne.jp> and KOBAYASHI Yasuhiro
	<kobayays@otsukakj.co.jp>.

2005-05-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32clpbd.c (Vselection_coding_system): Renamed from
	`Vw32_clipboard_coding_system'.
	(Fw32_set_clipboard_data): Ditto.
	(Fw32_set_clipboard_data): Fix doc-strings.
	(Fw32_get_clipboard_data): Ditto.
	(Fw32_get_clipboard_data): Renamed from
	`Vw32_clipboard_coding_system'.
	(syms_of_mw32clipboard): Ditto.

2005-05-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (imagemagick_get_bits_per_pixel): Return 24 even if
	the image type is `PaletteType'.

2005-05-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-05-12  KOBAYASHI Yasuhiro  <kobayays@otsukakj.co.jp>

	* mw32term.h (mw32_set_ime_conv_window): Change prototype.

	* mw32term.c (mw32_draw_window_cursor): Change arguments of
	function PostMessage().

	* mw32fns.c (mw32_WndProc) [WM_IME_STARTCOMPOSITION,
	WM_MULE_IMM_SET_CONVERSION_WINDOW]: Change arguments of function
	mw32_set_ime_conv_window().

	* mw32ime.c (mw32_set_ime_conv_window): Change arguments. Set the
	IME window rectangle area.

2005-05-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (pixel_set_color): Removed.
	(wand_query_color_database): Use x_to_mw32_color() instead of
	pixel_set_color().
	(xpm_get_fullcolor_bmpdata): Swap the order of red and blue.

2005-05-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.nt: Update dependancies.

	* makefile.meadow.w32-in: Ditto.

	* mw32fns.c: Include "mw32wand.h" instead of <wand/magick-wand.h>.
	(pixel_get_red): Renamed from pixel_get_*_quantum() and use
	normalized pixels.
	(pixel_get_green): Ditto.
	(pixel_get_blue): Ditto.
	(pixel_get_alpha): Ditto.
	(QUANTIZE_PIXEL): New macro.
	(imagemagick_mask_equal_p): Use normalized pixels.
	(imagemagick_make_maskdata): Ditto.
	(imagimagick_get_fullcolor_bmpdata): Ditto.
	(imagemagick_read_color_table): Ditto.
	(resolve_mask_color): Ditto.
	(wand_query_color_database): Ditto.
	(imagimagick_get_256_bmpdata): Update pointer to keep pixels every
	scanline.

	* mw32wand.h: New file.

2005-05-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (MAGICK_WAND_DLL): New macro.
	(hmagick_wand): New variable.
	(hmagick_core): Renamed from hmagick.
	(magick_get_version): Removed.
	(magick_get_magick_version): Ditto.
	(magick_initialize_magick): Ditto.
	(magick_read_image): Ditto.
	(magick_blob_to_image): Ditto.
	(magick_clone_image_info): Ditto.
	(magick_destroy_image): Ditto.
	(magick_destroy_image_info): Ditto.
	(magick_get_image_pixels): Ditto.
	(magick_get_exception_info): Ditto.
	(magick_ping_blob): Ditto.
	(magick_ping_image): Ditto.
	(magick_destroy_image_list): Ditto.
	(magick_get_magick_info): Ditto.
	(magick_get_magick_list): Ditto.
	(magick_get_indexes): Ditto.
	(magick_transform_rgb_image): Ditto.
	(magick_acquire_image_pixels): Ditto.
	(magick_is_monochrome_image): Ditto.
	(magick_set_image_type): Ditto.
	(magick_constitute_image): Ditto.
	(magick_allocate_image): Ditto.
	(magick_set_image_piexels): Ditto.
	(magick_sync_image_pixels): Ditto.
	(magick_open_blob): Ditto.
	(magick_read_blob_string): Ditto.
	(magick_close_blob): Ditto.
	(magick_allocate_image_colormap): Ditto.
	(magick_query_color_database): Ditto.
	(magick_register_magick_info): Ditto.
	(magick_set_magick_info): Ditto.
	(magick_relinquish_magick_memory): Ditto.
	(magick_acquire_string): Ditto.
	(magick_get_version): New function.
	(new_magick_wand): Ditto.
	(destroy_magick_wand): Ditto.
	(magick_read_image): Ditto.
	(magick_query_formats): Ditto.
	(magick_relinquish_memory): Ditto.
	(magick_get_image_type): Ditto.
	(magick_get_image_height): Ditto.
	(magick_get_image_width): Ditto.
	(magick_set_image_type): Ditto.
	(magick_set_image_index): Ditto.
	(magick_read_image_blob): Ditto.
	(magick_get_image_colormap_color): Ditto.
	(magick_get_image_colors): Ditto.
	(magick_constitute_image): Ditto.
	(new_pixel_wand): Ditto.
	(destroy_pixel_wand): Ditto.
	(pixel_get_red_quantum): Ditto.
	(pixel_get_green_quantum): Ditto.
	(pixel_get_blue_quantum): Ditto.
	(pixel_get_alpha_quantum): Ditto.
	(pixel_set_color): Ditto.
	(pixel_get_index): Ditto.
	(new_pixel_iterator): Ditto.
	(destroy_pixel_iterator): Ditto.
	(pixel_get_next_iterator_row): Ditto.
	(pixel_set_iterator_row): Ditto.
	(resolve_imagemagick_api): Use MagickWand APIs.
	(imagemagick_transparent_color_p): Removed.
	(imagemagick_mask_equal_p): New function.
	(imagemagick_make_maskdata): Use MagickWand APIs.
	(imagemagick_setup_bmpmask): Ditto.
	(imagemagick_setup_fullcolor_bitmapinfo): Ditto.
	(imagimagick_get_fullcolor_bmpdata): Ditto.
	(imagemagick_read_color_table): Ditto.
	(imagemagick_setup_palette_bitmapinfo): Ditto.
	(imagimagick_get_mono_bmpdata): Ditto.
	(imagimagick_get_256_bmpdata): Ditto.
	(imagemagick_get_bits_per_pixel): Ditto.
	(resolve_mask_color): Ditto.
	(imagemagick_load_image_data): Ditto.
	(imagemagick_valid_data_p): Removed.
	(imagemagick_valid_object_p): Ditto.
	(load_in_memory_image): Use MagickWand APIs.
	(imagemagick_load): Ditto.
	(define_imagemagick_type): Ditto.
	(define_imagemagick_type): Don't use XPM decoder of ImageMagick.
	(initialize_imagemagick): Use MagickWand APIs.
	(Fmw32_get_image_magick_extensions): Ditto.
	(xpm_image_p): New function.
	(wand_query_color_database): Ditto.
	(xpm_read_values_section): Don't depend on ImageMagick.
	(xpm_read_colors_section): Ditto.
	(xpm_correct_colormap_with_symbols): Ditto.
	(xpm_read_pixels_section): Ditto.
	(xpm_get_fullcolor_bmpdata): New function.
	(xpm_setup_fullcolor_bitmapinfo): Ditto.
	(xpm_resolve_mask_color): Ditto.
	(xpm_make_maskdata): Ditto.
	(xpm_setup_bmpmask): Ditto.
	(xpm_load_image_data): Ditto.
	(xpm_load): Ditto.
	(init_mw32fns): Define XPM image type.

2005-05-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* process.c (Fstart_process): Correct comments.

	* print.c (print_error_message): Correct indentation.

2005-05-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.c (gettimeofday): Use `_timeb' and `_ftime' instead of
	`timeb' and `ftime' to suppress compilation warnings.

2005-04-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_window_cursor): Check if HDC of the frame
	is valid.

	* xdisp.c (display_and_set_cursor): Do not check if HDC of the
	frame is valid.

2005-04-24  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* xdisp.c (update_tool_bar): Initialize new_tool_bar before GCPRO1.

2005-04-24  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Sync up with Emacs CVS HEAD.

2005-04-22  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* xdisp.c (update_tool_bar): Initialize new_tool_bar before GCPRO1.

2005-04-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_anticipate_overwrite_caret): Declared as static
	function.
	(mw32_restore_overwritten_caret): Ditto.

2005-04-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (Vx_toolkit_scroll_bars): Removed.
	(mw32_write_glyphs): New function.
	(mw32_insert_glyphs): Ditto.
	(mw32_clear_end_of_line): Ditto.
	(mw32_redisplay_interface): Use the above functions.

	* xdisp.c (null_glyph_slice): Declare as static variable.
	(x_write_glyphs): Meadow specific codes are moved to
	mw32_write_glyphs().
	(x_insert_glyphs): Meadow specific codes are moved to
	mw32_insert_glyphs().
	(x_clear_end_of_line): Meadow specific codes are moved to
	mw32_clear_end_of_line().

2005-04-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (Fx_create_frame): Use FRAME_COLS() and FRAME_LINES().

	* buffer.c (Fget_buffer_create): Sync up with Emacs CVS HEAD.
	Check if current_buffer is not NULL before
	ucs-set-table-for-input().

	* alloc.c (Fmemory_use_counts): Sync up with Emacs CVS HEAD.

2005-04-20  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* alloc.c (PDUMP_OFFSET): Changed to a multiple of 8 if
	USE_LSB_TAG is defined.
	(PDUMP_LISP_STRING_DUMP_SIZE): Adjusted for 8-byte alignment if
	USE_LSB_TAG is defined.
	(PDUMP_VECTORLIKE_SIZE): Ditto.
	(PDUMP_LISP_HASH_TABLE_SIZE): Ditto.
	(pdump_register_object): Add assertion if USE_LSB_TAG is defined.
	(pdump_forward_object): Ditto.

	* lisp.h (TYPEMASK): Sync up with Emacs CVS HEAD.
	(XTYPE): Ditto.
	(XINT): Ditto.
	(XUINT): Ditto.
	(XSET): Ditto.
	(make_number): Ditto.
	(XPNTR): Ditto.
	(struct Lisp_Cons): add a tentative dummy member for alignment if
	USE_LSB_TAG is defined.
	(struct Lisp_Marker): Ditto.
	(struct Lisp_Buffer_Local_Value): Ditto.
	(struct Lisp_Overlay): Ditto.
	(struct Lisp_Float): Ditto.

	* w32proc.c (syms_of_ntproc): Initialization of
	Vw32_get_true_file_link_count is fixed.

2005-04-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_image_foreground): Don't use `slice' to
	derive `image_rect'.

	* xdisp.c: Declare notice_overwritten_cursor() as external
	function.

2005-04-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (image_ascent): Sync up with Emacs CVS HEAD.

	* mw32term.c (mw32_draw_relief_rect): Ditto.
	(mw32_draw_image_foreground): Ditto.
	(mw32_draw_image_relief): Ditto.

	* dispextern.h (GLYPH_SLICE_EQUAL_P): New macro.
	(GLYPH_EQUAL_P): Sync up with Emacs CVS HEAD.

2005-04-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (ALLOCATE_HDC): Use FRAME_HDC().
	(fill_glyph_string): New function.
	(draw_glyphs): Ditto.
	(INIT_GLYPH_STRING): New macro.
	(BUILD_STRETCH_GLYPH_STRING): Ditto.
	(BUILD_IMAGE_GLYPH_STRING): Ditto.
	(BUILD_CHAR_GLYPH_STRINGS): Ditto.
	(BUILD_COMPOSITE_GLYPH_STRING): Ditto.
	(BUILD_GLYPH_STRINGS): Ditto.

	* mw32term.c (mw32_compute_glyph_string_x): Removed.
	(mw32_fill_glyph_string): Ditto.
	(INIT_GLYPH_STRING): Ditto.
	(BUILD_STRETCH_GLYPH_STRING): Ditto.
	(BUILD_IMAGE_GLYPH_STRING): Ditto.
	(BUILD_CHAR_GLYPH_STRINGS): Ditto.
	(BUILD_COMPOSITE_GLYPH_STRING): Ditto.
	(BUILD_GLYPH_STRINGS): Ditto.
	(draw_glyphs): Ditto.
	(mw32_redisplay_interface): Update.

	* dispextern.h (struct redisplay_interface): New member
	`compute_glyph_string_overhangs' and `draw_glyph_string'.

2005-04-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (ALLOCATE_HDC): New macro for Meadow.
	(RELEASE): Ditto.
	(init_glyph_string): New function.

	* mw32term.c: Removed.
	(BUILD_STRETCH_GLYPH_STRING): Call INIT_GLYPH_STRING() instead of
	mw32_init_glyph_string().
	(BUILD_IMAGE_GLYPH_STRING): Ditto.
	(face_id): Ditto.
	(BUILD_COMPOSITE_GLYPH_STRING): Ditto.
	(draw_glyphs): Allocate and release HDC.

2005-04-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (append_glyph): Sync up with Emacs CVS HEAD.
	(append_composite_glyph): Ditto.
	(take_vertical_position_into_account): Ditto.
	(produce_image_glyph): Ditto.
	(append_stretch_glyph): Ditto.
	(expose_window): Ditto.
	(x_write_glyphs): New function.
	(x_insert_glyphs): Ditto.
	(x_clear_end_of_line): Ditto.
	(expose_overlaps): Ditto.

	* mw32term.c (mw32_shift_glyphs_for_insert): New function
	(mw32i_write_glyphs): Removed.
	(mw32i_insert_glyphs): Ditto..
	(mw32i_clear_end_of_line): Ditto.
	(mw32_anticipate_overwrite_caret): Renamed from
	anticipate_overwrite_caret().
	(mw32_restore_overwritten_caret): Renamed from
	restore_overwritten_caret().
	(mw32_redisplay_interface): Update.

	* dispextern.h (struct redisplay_interface): New member
	`shift_glyphs_for_insert'.

2005-04-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (get_specified_cursor_type): New function.
	(get_window_cursor_type): Ditto.
	(notice_overwritten_cursor): Ditto.
	(draw_phys_cursor_glyph): Meadow specific codes are explicitly
	marked.

	* mw32term.h (MW32_FRAME_CARET_WIDTH): Removed.
	(struct mw32_output): `cursor_width' and `desired_cursor' are
	Removed
	(FRAME_DESIRED_CURSOR): Removed.

	* mw32term.c (mw32i_write_glyphs): Sync up with Emacs CVS HEAD.
	(mw32i_insert_glyphs): Ditto.
	(mw32i_insert_glyphs): Ditto.
	(mw32i_clear_end_of_line): Ditto.
	(mw32_draw_caret_cursor): Ditto.
	(mw32_draw_bar_cursor): Ditto.
	(mw32_draw_window_cursor): Ditto.
	(notice_overwritten_cursor): Removed.

	* mw32fns.c (mw32_specified_cursor_type): Removed.
	(mw32_set_cursor_type): Sync up with Emacs CVS HEAD.
	(mw32_WndProc): Use FRAME_CURSOR_WIDTH() instead of
	MW32_FRAME_CARET_WIDTH().

	* frame.h (struct frame): Sync up with Emacs CVS HEAD.
	(FRAME_DESIRED_CURSOR): New macro.
	(FRAME_BLINK_OFF_CURSOR): Ditto.
	(FRAME_CURSOR_WIDTH): Ditto.
	(FRAME_BLINK_OFF_CURSOR_WIDTH): Ditto.

2005-04-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (x_fix_overlapping_area): New function from Emacs CVS
	HEAD.
	(draw_phys_cursor_glyph): Ditto.
	(erase_phys_cursor): Ditto.

	* mw32fns.c (x_set_tool_bar_lines): Follow the rename of
	mw32_clear_area().
	(mw32_WndProc): Ditto.

	* mw32term.c (mw32_clear_native_frame_area): Renamed from
	mw32_clear_area().
	(mw32_clear_frame_area): New function.
	(mw32i_after_update_window_line): Follow the rename of
	mw32_clear_area().
	(mw32i_clear_end_of_line): Ditto.
	(MW32_clear_frame): Ditto.
	(MW32_set_vertical_scroll_bar): Ditto.
	(mw32_draw_bar_cursor): Ditto.
	(mw32_draw_window_cursor): Ditto.
	(mw32_fix_overlapping_area): Removed.
	(mw32_draw_phys_cursor_glyph): Ditto.
	(erase_phys_cursor): Ditto.
	(mw32_redisplay_interface): Update.

	* dispextern.h (struct redisplay_interface): New member
	`clear_frame_area'.

2005-04-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (get_window_cursor_type): New function from Emacs CVS
	HEAD.
	(display_and_set_cursor): Ditto.
	(update_window_cursor): Ditto.
	(update_cursor_in_window_tree): Ditto.
	(x_update_cursor): Ditto.
	(x_clear_cursor): Ditto.
	(show_mouse_face): Ditto.
	(define_frame_cursor1): Ditto.

	* mw32term.c (frame_highlight): Call x_update_cursor() instead of
	mw32_update_cursor().
	(frame_unhighlight): Ditto.
	(show_mouse_face): Removed.
	(x_clear_cursor): Ditto.
	(erase_phys_cursor): Renamed from mw32_erase_phys_cursor().
	(mw32_define_frame_cursor): New function.
	(display_and_set_cursor): Removed.
	(mw32_draw_window_cursor): New function.
	(mw32_update_cursor): Removed.
	(mw32_update_cursor_in_window_tree): Ditto.
	(mw32_redisplay_interface): Update.

	* mw32fns.c (mw32_set_cursor_color): Call x_update_cursor()
	instead of mw32_update_cursor().

	* dispextern.h (struct redisplay_interface): New member
	`draw_window_cursor'.

2005-04-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (clear_mouse_face): Sync up with Emacs CVS HEAD.
	(note_mode_line_or_margin_highlight): Ditto.
	(note_mouse_highlight): Ditto.
	(expose_area): Ditto.
	(expose_line): Ditto.

	* mw32term.h (struct mw32_display_info): New member,
	`vertical_scroll_bar_cursor' and `mouse_face_hidden'.

	* mw32term.c (draw_glyphs): Renamed from mw32_draw_glyphs() and
	sync up with Emacs CVS HEAD.
	(mw32_fix_overlapping_area): Follow the above change.
	(mw32i_write_glyphs): Ditto.
	(mw32i_insert_glyphs): Ditto.
	(show_mouse_face): Ditto.
	(mw32_draw_phys_cursor_glyph): Ditto.
	(mw32i_clear_mouse_face): Removed.
	(mw32_message_loop<WM_KEYDOWN>): Inactivate mouse face when
	mouse_face_hidden is 0 and `mouse-highlight' is an integer.
	(mw32_message_loop<WM_MOUSEMOVE>): Activate mouse face when
	(mw32_term_init): Initialize `mouse_face_hidden' and
	`vertical_scroll_bar_cursor'.
	(mw32_redisplay_interface): Use x_clear_window_mouse_face()
	instead of mw32i_clear_mouse_face().

2005-04-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.nt (OBJ1): Replace spaces with tabs.
	(OBJ2): Ditto.
	(WIN32OBJ): Diito.
	(depend): Prevent makedepend.pl from making dependency on header
	files of ImageMagick.
	Update dependency.

2005-04-15  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.meadow.w32-in (depend): Prevent makedepend.pl from
	making dependency on header files of ImageMagick.
	Update dependency.

2005-04-15  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.meadow.w32-in: Remove dependency on header files of
	ImageMagick.

2005-04-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c: Include "mw32sync.h".
	(define_frame_cursor1): New function from Emacs CVS HEAD.
	(note_mode_line_or_margin_highlight): Ditto.
	(note_mouse_highlight): Ditto.
	(expose_area): Ditto.
	(expose_line): Ditto.
	(phys_cursor_in_rect_p): Ditto.
	(expose_window): Ditto.
	(expose_window_tree): Ditto.
	(expose_frame): Ditto.
	(x_intersect_rectangles): Ditto.

	* mw32term.h (struct mw32_output): Sync up with Emacs CVS HEAD.

	* mw32term.c (mw32_draw_image_foreground): Sync up with Emacs CVS
	HEAD.
	(mw32_expose_frame): Removed.
	(expose_window_tree): Ditto.
	(expose_area): Ditto.
	(expose_line): Ditto.
	(mw32_phys_cursor_in_rect_p): Ditto.
	(expose_window): Ditto.
	(mw32_intersect_rectangles): Ditto.
	(note_mode_line_highlight): Ditto.
	(note_mouse_highlight_handler): Ditto.
	(note_mouse_highlight): Ditto.
	(x_clear_cursor): Renamed from mw32_clear_cursor().
	(mw32_redisplay_interface): Update.

	* mw32fns.c (mw32_WndProc): Update arguments for expose_frame().

	* dispextern.h (struct redisplay_interface): New member,
	`define_frame_cursor'.

2005-04-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.nt (OBJ2): Add `image.c'.
	Update dependancies.

	* makefile.meadow.w32-in (OBJ1): Add `image.c'.
	Update dependancies.

	* xdisp.c (Vimage_types): Moved to `image.c'.

	* image.c: New file from Emacs CVS HEAD.

	* emacs.c (main): Call syms_of_image().

2005-04-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.c (file_attributes_stat): Check if the file is a directory
	or a regular file, when `w32-get-true-file-attributes' is t.

2005-04-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* gtkutil.c: New file from Emacs CVS HEAD.

	* gtkutil.c: Ditto.

	* gtkutil.h: Ditto.

	* mac.c: Ditto.

	* macfns.c: Ditto.

	* macgui.h: Ditto.

	* macmenu.c: Ditto.

	* macterm.c: Ditto.

	* macterm.h: Ditto.

	* sheap.c: Ditto.

	* stamp-h.in: Ditto.

	* unexmacosx.c: Ditto.

	* xsmfns.c: Ditto.

	* Makefile.c: Removed.

	* paths.h: Ditto.

	* paths.in: Ditto.

	* print1.c: Ditto.

2005-04-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* puresize.h: Sync up with Emacs CVS HEAD.

	* w32.c: Ditto.

	* w32.h: Ditto.

	* w32inevt.c (w32_console_read_socket): Ditto.

	* w32proc.c (syms_of_ntproc): Ditto.

2005-04-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h (struct Lisp_Float): New member `gcmarkbit'.  This is a
	hack for portable dumper.

	* alloc.c (FLOAT_BLOCK_SIZE): Undo the last change.
	(GETMARKBIT): Removed.
	(SETMARKBIT): Ditto.
	(UNSETMARKBIT): Ditto.
	(FLOAT_BLOCK): Ditto.
	(FLOAT_INDEX): Ditto.
	(struct float_block): Undo the last change.
	(FLOAT_MARKED_P): Refer to `gcmarkbit'.  This is a hack for
	portable dumper.
	(FLOAT_MARK): Ditto.
	(FLOAT_UNMARK): Ditto.
	(make_float): Initialize the allocated memory to clean up
	`gcmarkbit'.
	(PDUMP_BLOCK_HASH_SIZE): Removed.
	(struct pdump_block): Removed.
	(pdump_block_hash): Ditto.
	(pdump_block_hash_value): Ditto.
	(pdump_put_block_hash): Ditto.
	(pdump_get_block_hash): Ditto.
	(initialize_block_hash): Ditto.
	(pdump_float_blocks_size): Ditto.
	(pdump_register_object): Undo the last change.
	(pdump_forward_object): Ditto.
	(pdump_write_objects): Ditto.
	(pdump): Ditto.
	(PDUMP_RELOCATE): Ditto.
	(pdump_load): Ditto.
	(pdump_relocate_objects): Ditto.
	(unmark_pdumped_objects): Ditto.

	* fontset.c (lookup_overriding_fontspec): Invalidate for Meadow.

2005-04-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* dispextern.h (xassert): Undo the last change.

2005-04-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c: Follow the change of `struct glyph_row' and `struct
	glyph_string'.

	* mw32menu.c (Fx_popup_menu): Use Fkeymap_prompt() instead of
	map_prompt().

	* dispextern.h: Sync up with Emacs CVS HEAD.

	* emacs.c: Ditto.

	* fileio.c: Ditto.

	* fontset.c: Ditto.

	* keyboard.c: Ditto.

	* keyboard.h: Ditto.

2005-04-09  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h (MARKBIT): Removed.
	(XMARKBIT): Ditto.
	(XSETMARKBIT): Ditto.
	(XMARK): Ditto.
	(XUNMARK): Ditto.

2005-04-09  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h (struct Lisp_Cons): New member `gcmarkbit'.  This is a
	hack for portable dumper.
	(XCAR): Sync up with Emacs CVS HEAD.
	(XCDR): Ditto.
	(SYMBOL_NAME): Ditto.

	* alloc.c (CONS_MARKED_P): Refer to `gcmarkbit'.  This is a hack
	for portable dumper.
	(CONS_MARK): Ditto.
	(CONS_UNMARK): Ditto.
	(Fcons): Initialize the allocated memory to clean up `gcmarkbit'.
	(mark_object): Sync up with Emacs CVS HEAD.
	(pdump_hash_value): Cast `obj' as 'unsigned long' not to be
	negative.
	(pdump_map_file): Don't use `VALMASK'.

	* fileio.c (Fdo_auto_save): Sync up with Emacs CVS HEAD.

2005-04-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (struct backtrace): Removed.
	(Fgarbage_collect): Sync up with Emacs CVS HEAD.
	(mark_object): Ditto.
	(mark_buffer): Ditto.
	(survives_gc_p): Ditto.
	(gc_sweep): Ditto.

	* bytecode.c (mark_byte_stack): Ditto.
	(unmark_byte_stack): Ditto.

	* eval.c (mark_backtrace): Ditto.

2005-04-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* buffer.h (struct buffer): Sync up with Emacs CVS HEAD.

	* alloc.c (Fgarbage_collect): Ditto. `undo_list' related codes are
	merged.
	(mark_buffer): Ditto.
	(pdump_add_special_buffers): Use `undo_list' to get offset instead
	of `name'.
	(pdump_write_special_buffers): Ditto.
	(pdump_load): Ditto.

2005-04-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (FLOAT_BLOCK_SIZE): Sync up with Emacs CVS HEAD.
	(FLOAT_BLOCK_SIZE): New macro.
	(GETMARKBIT): Ditto.
	(SETMARKBIT): Ditto.
	(UNSETMARKBIT): Ditto.
	(FLOAT_BLOCK): Ditto.
	(FLOAT_INDEX): Ditto.
	(struct float_block): Sync up with Emacs CVS HEAD.
	(FLOAT_MARKED_P): Ditto.
	(FLOAT_MARK): Ditto.
	(FLOAT_UNMARK): Ditto.
	(make_float): Ditto.
	(mark_object): Ditto.
	(pdump_block_table): New structure.
	(PDUMP_BLOCK_HASH_SIZE): New macro.
	(pdump_block): New structure.
	(pdump_block_hash_value): New function.
	(pdump_put_block_hash): Ditto.
	(pdump_get_block_hash): Ditto.
	(initialize_block_hash): Ditto.
	(pdump_register_object): calculate a special offset for
	PDUMP_FLOAT.
	(pdump_write_objects): The codes related with PDUMP_FLOAT are
	removed.
	(pdump): Initialize `pdump_block_hash'.
	(pdump): Wirte float blocks.
	(pdump): Destruct memories for `pdump_block_hash'.
	(PDUMP_RELOCATE): Consider space for `float_block'.
	(pdump_load): Load float blocks.
	(pdump_relocate_objects): The codes related with Lisp_Float are
	removed.
	(unmark_pdumped_objects): Sync up with Emacs CVS HEAD.

	* lisp.h: Sync up with Emacs CVS HEAD. a member variable `type' is
	removed.

2005-04-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (MARK_STRING): Sync up with Emacs CVS HEAD.
	(UNMARK_STRING): Ditto.
	(STRING_MARKED_P): Ditto.
	(GC_STRING_BYTES): Ditto.
	(GC_STRING_CHARS): Ditto.
	(string_bytes): Ditto.
	(init_float): Ditto.
	(init_cons): Ditto.
	(init_symbol): Ditto.
	(init_marker): Ditto.

	* lisp.h: Sync up with Emacs CVS HEAD.

2005-04-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keyboard.c: New external lisp object `Vthrow_on_input'.
	(syms_of_keyboard): Initialize the above object.

2005-04-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* print.c (print_preprocess): Ditto.
	(print_object): Ditto.

	* alloc.c: Sync up with Emacs CVS HEAD.  The codes related with
	`Lisp_symbol' are merged.

	* bytecode.c (Fbyte_code): Ditto.

	* data.c (Fkeywordp): Ditto.
	(Fmakunbound): Ditto.
	(set_internal): Ditto.

	* eval.c (Fdefvaralias): Ditto.
	(specbind): Ditto.

	* lisp.h (struct Lisp_Symbol): Ditto.

	* lread.c (Fintern): Ditto.
	(Funintern): Ditto.
	(init_obarray): Ditto.

	* regex.c (regex_compile): Temporarily invalidate the process of
	whitespace.

2005-04-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c: Sync up with Emacs CVS HEAD.

	* buffer.c: Ditto.

	* dispnew.c: Ditto.

	* intervals.c (get_local_map): Ditto.

	* w32.c: Ditto.

	* w32fns.c: Ditto.

	* w32inevt.c (key_event): Ditto.

	* w32proc.c: Ditto.

2005-04-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* regex.c (regex_compile): Temporarily invalidate the process of
	whitespace.

	* alloc.c (pdump_forward): New member `next'.
	(pdump_put_hash): Improve efficiency.
	(pdump_get_hash): Ditto.
	(pdump): Free allocated memories for all the elements of
	`pdump_hash'.

2005-03-27  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keyboard.c (readable_events): Undo the last changes.

2005-03-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* buffer.h(struct buffer): Sync up with Emacs CVS HEAD.  Now
	`overlays_before' or `overlays_after' is a pointer to an instance
	of `struct Lisp_Overlay'.

	* alloc.c: Ditto.

	* buffer.c: Ditto.

	* editfns.c: Ditto.

	* indent.c (current_column): Ditto.

	* insdel.c (signal_before_change): Ditto.
	(signal_after_change): Ditto.

	* intervals.c (set_point_both): Ditto.

	* keyboard.c (command_loop_1): Ditto.
	(adjust_point_for_property): Ditto.

	* print.c (temp_output_buffer_setup): Ditto.
	(print_object): Ditto.

	* xdisp.c (load_overlay_strings): Ditto.
	(RECORD_OVERLAY_STRING): Ditto.
	(load_overlay_strings): Ditto.

	* xfaces.c (face_at_buffer_position): Ditto.

2005-03-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keyboard.c (readable_events): Sync up with Emacs CVS HEAD.

2005-03-26  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* alloc.c (pdump_type_objects): New member, `objects_size'.
	Member variable `obejcts' is changed from an array to a pointer.
	(pdump_register_object): Array is extended if it is full.
	(pdump): Initialization and cleanup of pdump_lisp_object is
	modified.

2005-03-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h (VALMASK): Validated even if NO_UNION_TYPE is defined.
	(GCTYPEMASK): Ditto.
	Undo the last changes of some macros for the environment where
	NO_UNION_TYPE is defined.

2005-03-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h: Sync up with Emacs CVS HEAD.

	* alloc.c: Ditto.

2005-03-24  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32menu.c: Include "keymap.h".

	* mw32term.c: Ditto.

	* alloc.c: Sync up with Emacs CVS HEAD.

	* fileio.c (report_file_error): Ditto.

	* lisp.h: Ditto.

2005-03-24  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (pdump): Initialize memories allocated for pdump.

2005-03-24  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c: Sync up with Emacs CVS HEAD.

	* keymap.c: Ditto.

	* lisp.h: Ditto.

2005-03-24  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* buffer.h: Sync up with Emacs CVS HEAD.

2005-03-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c: Sync up with Emacs CVS HEAD.  Now the object to chain
	of all the markers in a given buffer is a instance of `struct
	Lisp_Marker *'.

	* buffer.c: Ditto.

	* buffer.h Ditto.

	* editfns.c Ditto.

	* insdel.c Ditto.

	* lisp.h Ditto.

	* marker.c Ditto.

	* window.c Ditto.

	* xdisp.c Ditto.

2005-03-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* s/ms-w32.h (HAVE_STRFTIME): Use system strftime().

	* mw32term.c (MW32_reassert_line_highlight): Removed.
	(MW32_change_line_highlight): Ditto.
	(mw32_initialize): Don't initialize `change_line_highlight_hook'
	and `MW32_change_line_highlight'.

	* gmalloc.c: Sync up with Emacs CVS HEAD.

	* search.c: Ditto.

	* strftime.c: Ditto.

	* term.c: Ditto.

	* termhooks.h: Ditto.

	* w32bdf.c: Ditto.

	* w32console.c: Ditto.

	* w32heap.c: Ditto.

	* w32term.c: Ditto.

2005-03-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.meadow.w32-in (LIBS): Link `wsock32'.

2005-03-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* dispnew.c (sit_for): Sync up with Emacs CVS HEAD.

	* eval.c: Ditto.

	* regex.c: Ditto.

	* regex.h: Ditto.

2005-03-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.h (EXEC_SUFFIXES): Moved from process.h.

	* dispnew.c (Fsleep_for): Sync up with Emacs CVS HEAD.
	(sit_for): Ditto.

	* keyboard.c (kbd_buffer_get_event): Ditto.

	* process.c: Ditto.

	* process.h: Ditto.

	* alloc.c (NSTATICS): Increased.
	(PDUMP_SUBR_DOC_SIZE): Ditto.

2005-03-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (NSTATICS): Increased.

2005-03-06  Shuichi KITAGUCHI  <kit@meadowy.org>

	* mw32fns.c (WIN32): define WIN32 when it is not defined.

2005-03-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c: undefine WIN32_LEAN_AND_MEAN when it has already been
	defined.
	Include <magick/nt-base.h> to define `ssize_t'.

2005-03-06  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.meadow.w32-in (LOCAL_FLAGS): cleanup ImageMagick
	support.

2005-03-06  Shuichi KITAGUCHI  <kit@meadowy.org>

	* mw32magick: removed. (cleanup ImageMagick support)

	* mw32fns.c: update to ImageMagick 6.2.0.
	cleanup ImageMagick support.

	* makefile.nt (LOCAL_FLAGS): cleanup ImageMagick support.

2005-03-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* dispnew.c: Sync up with Emacs CVS HEAD.

	* editfns.c: Ditto.

	* frame.c: Ditto.

	* window.c: Ditto.

	* xfaces.c: Ditto.

2005-02-24  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (display_and_set_cursor): Draw the hollow box cursor
	if `cursor-in-non-selected-windows' is non-nil'.  Thanks to
	Hidefumi Fujimoto <fujimoto@pluto.dti.ne.jp>

2005-02-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* eval.c (reinit_eval_once): Increase max_specpdl_size up to 1000.
	Thanks to Hidefumi Fujimoto <fujimoto@pluto.dti.ne.jp>

2005-02-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c: Predicate that mw32_intersect_rectangles() is
	static.

	* mw32term.h: Predicate `struct glyph_slice'.

2005-02-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.h: Sync up with Emacs CVS HEAD.

	* mw32term.c (mw32_draw_vertical_border): Removed.
	(mw32_draw_vertical_border): New function.
	(mw32_get_char_face_and_encoding): Removed.
	(mw32_get_glyph_face_and_encoding): Ditto.
	(mw32_append_glyph): Ditto.
	(mw32_append_composite_glyph): Ditto.
	(take_vertical_position_into_account): Ditto.
	(mw32_produce_image_glyph): Ditto.
	(mw32_append_stretch_glyph): Ditto.
	(mw32_produce_stretch_glyph): Ditto.
	(mw32i_produce_glyphs): Ditto.
	(mw32_append_glyph_string_lists): Ditto.
	(mw32_prepend_glyph_string_lists): Ditto.
	(mw32_append_glyph_string): Ditto.
	(mw32i_get_glyph_overhangs): Ditto.
	(mw32_left_overwritten): Ditto.
	(mw32_left_overwriting): Ditto.
	(mw32_right_overwritten): Ditto.
	(mw32_right_overwriting): Ditto.
	(mw32_fill_composite_glyph_string): Ditto.
	(mw32_fill_image_glyph_string): Ditto.
	(mw32_fill_stretch_glyph_string): Ditto.
	(mw32_set_glyph_string_background_width): Ditto.
	(fast_find_position): Ditto.
	(fast_find_string_pos): Ditto.
	(clear_mouse_face): Ditto.
	(cancel_mouse_face): Ditto.
	(cursor_in_mouse_face_p): Ditto.
	(mw32_update_window_cursor): Ditto.

	* mw32font.h (XCharStruct): Renamed from `MW32CharMetric'.
	Sync up with Emacs CVS HEAD.

	* mw32font.c (get_device_width): Normalize coding style.
	(mw32_glyph_metric): Sync up with Emacs CVS HEAD.

	* mw32fns.c (image_ascent): New arguments, `slice'. Currently this
	is a dummy.

	* dispextern.h: Sync up with Emacs CVS HEAD.

	* fontset.h: Ditto.

	* frame.h: Ditto.

	* w32gui.h: Ditto.

	* xdisp.c: Ditto.

	* xfaces.c: Ditto.

2005-02-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* insdel.c: Sync up with Emacs CVS HEAD.

2005-02-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c: Purge a redundant keyword.

2005-02-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* config.in: Sync up with Emacs CVS HEAD.

	* cxux-crt0.s: Ditto.

	* data.c: Ditto.

	* dispextern.h: Ditto.

	* dispnew.c: Ditto.

	* dosfns.c: Ditto.

	* fileio.c: Ditto.

	* indent.c: Ditto.

	* intervals.h: Ditto.

	* keyboard.c: Ditto.

	* keyboard.h: Ditto.

	* keymap.c: Ditto.

	* lastfile.c: Ditto.

	* lisp.h: Ditto.

	* lread.c: Ditto.

	* macros.c: Ditto.

	* minibuf.c: Ditto.

	* msdos.c: Ditto.

	* mw32term.c: Ditto.

	* syntax.c: Ditto.

	* sysdep.c: Ditto.

	* syssignal.h: Ditto.

	* term.c: Ditto.

	* termhooks.h: Ditto.

	* xdisp.c: Ditto.

2005-02-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c: Sync up with Emacs CVS HEAD.
	(PDUMP_SUBR_DOC_SIZE): Increased.

	* Makefile.in: Sync up with Emacs CVS HEAD.

	* README: Ditto.

	* atimer.c: Ditto.

	* buffer.c: Ditto.

	* callproc.c: Ditto.

	* casefiddle.c: Ditto.

	* casetab.c: Ditto.

	* charset.c: Ditto.

	* coding.c: Ditto.

	* coding.h: Ditto.

	* data.c: Ditto.

	* dispextern.h: Ditto.

	* dispnew.c: Ditto.

	* dosfns.c: Ditto.

	* editfns.c: Ditto.

	* eval.c: Ditto.

	* filelock.c: Ditto.

	* floatfns.c: Ditto.

	* fns.c: Ditto.

	* fringe.c: Ditto.

	* insdel.c: Ditto.

	* keyboard.c: Ditto.

	* lisp.h: Ditto.

	* makefile.w32-in: Ditto.

	* mw32term.c: Ditto.

	* undo.c: Ditto.

	* window.c: Ditto.

	* xdisp.c: Ditto.

	* xfaces.c: Ditto.

	* xfns.c: Ditto.

	* xmenu.c: Ditto.

	* xselect.c: Ditto.

	* xterm.c: Ditto.

	* xterm.h: Ditto.

2005-02-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.meadow.w32-in (bootstrap-temacs): Increase
	PDUMP_OBJECT_ARRAY_SIZE.

	* callint.c: Sync up with Emacs CVS HEAD.

2005-02-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* data.c: Sync up with Emacs CVS HEAD.

	* eval.c: Ditto.

	* fns.c: Ditto.

	* lread.c: Ditto.

2005-02-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* callint.c: Sync up with Emacs CVS HEAD.

	* doc.c: Ditto.

	* fns.c: Ditto.

	* lisp.h: Ditto.

	* minibuf.c: Ditto.

	* makefile.meadow.w32-in: Ditto.

	* makefile.nt: Ditto.

2005-02-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* eval.c: Sync up with Emacs CVS HEAD.

	* keyboard.c: Ditto.

	* lisp.h: Ditto.

	* xdisp.c: Ditto.

2005-02-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.meadow.w32-in (bootstrap-temacs): Increase
	PDUMP_OBJECT_ARRAY_SIZE.

	* window.c (syms_of_window): New variable, auto-window-vscroll.

	* fileio.c (Fnext_read_file_uses_dialog_p): New function from
	Emacs CVS HEAD.

	* alloc.c (PDUMP_HASH_TABLE_SIZE): Increase PDUMP_HASH_TABLE_SIZE.

2005-01-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c: Sync up with Emacs CVS HEAD.

	* bytecode.c: Ditto.

	* fns.c: Ditto.

	* lisp.h: Ditto.

2005-01-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c: Sync up with Emacs CVS HEAD.

	* data.c: Ditto.

	* dispextern.h: Ditto.

	* insdel.c: Ditto.

	* lisp.h: Ditto.

	* marker.c: Ditto.

	* mem-limits.h: Ditto.

	* minibuf.c: Ditto.

	* process.c: Ditto.

	* puresize.h: Ditto.

	* sysdep.c: Ditto.

	* w32gui.h: Ditto.

	* w32inevt.h: Ditto.

2005-01-23  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c: Sync up with Emacs CVS HEAD.

	* blockinput.h: Ditto.

	* buffer.c: Ditto.

	* buffer.h: Ditto.

	* callint.c: Ditto.

	* callproc.c: Ditto.

	* casefiddle.c: Ditto.

	* charset.c: Ditto.

	* coding.c: Ditto.

	* data.c: Ditto.

	* dispnew.c: Ditto.

	* doc.c: Ditto.

	* editfns.c: Ditto.

	* emacs.c: Ditto.

	* fileio.c: Ditto.

	* floatfns.c: Ditto.

	* fns.c: Ditto.

	* fontset.c: Ditto.

	* getloadavg.c: Ditto.

	* gmalloc.c: Ditto.

	* insdel.c: Ditto.

	* keyboard.c: Ditto.

	* keyboard.h: Ditto.

	* lisp.h: Ditto.

	* lread.c: Ditto.

	* macros.c: Ditto.

	* marker.c: Ditto.

	* minibuf.c: Ditto.

	* mktime.c: Ditto.

	* mw32term.c: Ditto.

	* process.c: Ditto.

	* process.h: Ditto.

	* scroll.c: Ditto.

	* sound.c: Ditto.

	* sysdep.c: Ditto.

	* systty.h: Ditto.

	* syswait.h: Ditto.

	* term.c: Ditto.

	* termcap.c: Ditto.

	* termhooks.h: Ditto.

	* tparam.c: Ditto.

	* undo.c: Ditto.

	* unexelf.c: Ditto.

	* unexw32.c: Ditto.

	* w32.h: Ditto.

	* w32console.c: Ditto.

	* w32heap.c: Ditto.

	* w32inevt.c: Ditto.

	* w32proc.c: Ditto.

	* w32reg.c: Ditto.

	* w32xfns.c: Ditto.

	* xdisp.c: Ditto.

	* xfaces.c: Ditto.

	* xmenu.c: Ditto.

2005-01-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32term.h: Undo the last change.

2005-01-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* atimer.c: Sync up with Emacs CVS HEAD.

	* category.c: Ditto.

	* category.h: Ditto.

	* chpdef.h: Ditto.

	* cm.c: Ditto.

	* cm.h: Ditto.

	* cmds.c: Ditto.

	* commands.h: Ditto.

	* composite.c: Ditto.

	* composite.h: Ditto.

	* disptab.h: Ditto.

	* doprnt.c: Ditto.

	* dosfns.c: Ditto.

	* dosfns.h: Ditto.

	* ecrt0.c: Ditto.

	* filelock.c: Ditto.

	* filemode.c: Ditto.

	* firstfile.c: Ditto.

	* fontset.h: Ditto.

	* fringe.c: Ditto.

	* getpagesize.h: Ditto.

	* gnu.h: Ditto.

	* hftctl.c: Ditto.

	* indent.h: Ditto.

	* ioctl.h: Ditto.

	* keymap.h: Ditto.

	* lastfile.c: Ditto.

	* lisp.h: Ditto.

	* macros.h: Ditto.

	* md5.c: Ditto.

	* md5.h: Ditto.

	* msdos.c: Ditto.

	* msdos.h: Ditto.

	* ndir.h: Ditto.

	* param.h: Ditto.

	* point.h: Ditto.

	* pre-crt0.c: Ditto.

	* prefix-args.c: Ditto.

	* ralloc.c: Ditto.

	* region-cache.c: Ditto.

	* region-cache.h: Ditto.

	* scroll.c: Ditto.

	* sunfns.c: Ditto.

	* sysdep.c: Ditto.

	* sysselect.h: Ditto.

	* syssignal.h: Ditto.

	* systime.h: Ditto.

	* termchar.h: Ditto.

	* terminfo.c: Ditto.

	* termopts.h: Ditto.

	* uaf.h: Ditto.

	* unexaix.c: Ditto.

	* unexalpha.c: Ditto.

	* unexapollo.c: Ditto.

	* unexconvex.c: Ditto.

	* unexec.c: Ditto.

	* unexenix.c: Ditto.

	* unexhp9k800.c: Ditto.

	* unexmips.c: Ditto.

	* unexnext.c: Ditto.

	* unexsni.c: Ditto.

	* unexsunos4.c: Ditto.

	* vlimit.h: Ditto.

	* vm-limit.c: Ditto.

	* select.c: Ditto.

	* bdf.c: Ditto.

	* bdf.h: Ditto.

	* fns.c: Ditto.

	* heap.h: Ditto.

	* inevt.h: Ditto.

	* menu.c: Ditto.

	* reg.c: Ditto.

	* select.c: Ditto.

	* term.c: Ditto.

	* term.h: Ditto.

	* widget.c: Ditto.

	* widget.h: Ditto.

	* widgetprv.h: Ditto.

	* window.h: Ditto.

	* xfns.c: Ditto.

	* xmenu.c: Ditto.

	* xrdb.c: Ditto.

	* xselect.c: Ditto.

	* xterm.c: Ditto.

	* xterm.h: Ditto.

2005-01-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* abbrev.c (write_abbrev): Merge codes related with the change
	below.

	* coding.c (Fread_coding_system): Ditto.

	* editfns.c (Fformat): Ditto.

	* keymap.c (silly_event_symbol_error): Ditto.
	(describe_command): Ditto.
	(describe_translation): Ditto.

	* lread.c (Funintern): Ditto.

2005-01-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h (struct Lisp_Symbol): Change the name of the member
	variable `name' and its type.

	* alloc.c: Merge codes related with the change above.

	* buffer.c: Ditto.

	* bytecode.c: Ditto.

	* callint.c: Ditto.

	* charset.c: Ditto.

	* coding.c: Ditto.

	* data.c: Ditto.

	* eval.c: Ditto.

	* fns.c: Ditto.

	* fontset.c: Ditto.

	* keyboard.c: Ditto.

	* keymap.c: Ditto.

	* lread.c: Ditto.

	* minibuf.c: Ditto.

	* mw32fns.c: Ditto.

	* mw32font.c: Ditto.

	* mw32ime.c: Ditto.

	* print.c: Ditto.

	* process.c: Ditto.

	* xdisp.c: Ditto.

	* xfaces.c: Ditto.

2005-01-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* editfns.c: Partially sync up with Emacs CVS HEAD.

	* insdel.c: Ditto.

	* lisp.h: Ditto.

2005-01-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* buffer.c (delete_all_overlays): Delete each car part of
	`overlays_before' and `overlays_after'.

2005-01-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_encode_char): Initialize `char2b'.

2005-01-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32proc.c (sys_spawnve): Duplicate the whole elements of `argv'
	to prevent errors in GC.
	Partially sync up with Emacs CVS HEAD.

	* w32.c: Partially sync up with Emacs CVS HEAD.

2005-01-04  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* dired.c: undefine S_ISLNK and S_IFLNK for mingw-runtime 3.6
	and later.

	* fileio.c: Ditto.

	* filemode.c: Ditto.

2004-12-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* print.c: Sync up with Emacs CVS HEAD.

	* alloc.c (abort_on_gc): New external variable.
	(build_string): Sync up with Emacs CVS HEAD.
	(Fgarbage_collect): Ditto.

	* editfns.c (Fformat): Ditto.

	* eval.c (Fsignal): Ditto.

	* keyboard.c (cmd_error): Ditto.

	* lisp.h: Update declarations.

2004-12-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.nt (LINK_FLAGS): Set the base address for the program
	to 0x500000.  Thanks to Hidefumi Fujimoto
	<fujimoto@pluto.dti.ne.jp>

2004-12-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* data.c (store_symval_forwarding): Use
	SYMBOL_VALUE/SET_SYMBOL_VALUE to get/set symbol value. Thanks to
	Hiroya Murata <lapis-lazuli@pop06.odn.ne.jp>.

	* eval.c (specbind): Ditto.
	(unbind_to): Ditto.

	* fns.c (Fmd5): Ditto.

	* keyboard.c (intern): Ditto.

	* lread.c (defvar_int): Ditto.
	(defvar_bool): Ditto.
	(defvar_lisp_nopro): Ditto.
	(defvar_per_buffer): Ditto.
	(defvar_kboard): Ditto.

	* minibuf.c (read_minibuf): Ditto.

	* mw32dl.c (undefvar): Ditto.

	* lisp.h (SYMBOL_VALUE): Sync up with Emacs CVS HEAD.
	(SET_SYMBOL_VALUE): New macro from Emacs CVS HEAD.

2004-12-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_caret_cursor): Don't exit this function
	even if `cursor_glyph' is NULL.
	(mw32_erase_phys_cursor): Simplify expressions.

2004-12-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_caret_cursor): Make this function
	external.
	(mw32_erase_phys_cursor): Don't hide the cursor which is
	represented by the system caret.

	* fringe.c (draw_fringe_bitmap): Support system caret.

2004-12-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* process.c (Fprocess_plist): New function from Emacs CVS HEAD.
	(Fset_process_plist): Ditto.
	(syms_of_process): Define Fprocess_plist() and
	Fset_process_plist().

	* process.h: New member, `plist'.

2004-12-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keymap.c: Sync up with Emacs CVS HEAD.

	* keyboard.c (Vthis_original_command): New variable.
	(command_loop_1): Remap command through active keymaps.
	(syms_of_keyboard): Define variable, Vthis_original_command.

	* fns.c (map_char_table): Sync up with Emacs CVS HEAD.
	(Fmap_char_table): Ditto.
	(void_call2): New function from Emacs CVS HEAD.

	* casetab.c: Sync up with Emacs CVS HEAD.

	* fontset.c (Ffontset_info): Ditto.

	* lisp.h: Update declarations.

2004-12-02  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32_get_ime_font_property): Unblock the input
	if the current thread has blocked it.

2004-12-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc): Undo the last change.
	(mw32i_frame_parm_handlers): New element for "cursor-height"
	which invokes mw32_set_cursor_height().

	* frame.c (frame_parms): New element, "cursor-height".

2004-11-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc): Don't consider
	MW32_FRAME_CARET_HEIGHT(f) to calculate caret height.

2004-11-28  Shuichi KITAGUCHI  <kit@ysnb.net>

	* makefile.nt (DOC): use makefile instead of makefile.nt
	(bootstrap-temacs): Ditto.

2004-11-27  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* .gdbinit: Sync up with Emacs CVS HEAD.

	* emacs.c (gdb_array_mark_flag): Imported from Emacs CVS HEAD.

2004-11-27  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* buffer.c (init_buffer): Revert change of 2004-11-21. Always use
	getwd.

2004-11-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* abbrev.c: Sync up with Emacs CVS HEAD.

	* acldef.h: Ditto.

	* alloca.c: Ditto.

	* atimer.c: Ditto.

	* atimer.h: Ditto.

	* blockinput.h: Ditto.

	* buffer.c: Ditto.

	* buffer.h: Ditto.

	* bytecode.c: Ditto.

	* editfns.c: Ditto.

	* fileio.c: Ditto.

	* lisp.h: Update declarations.

2004-11-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_WndProc): Update frame size of frame parameters
	if frame size has been changed.  Thanks to Hidefumi Fujimoto
	<fujimoto@pluto.dti.ne.jp>.

	* keyboard.c (command_loop_1): Setting transient-mark-mode to
	`only' is a way of turning it on for just one command.  Thanks to
	Hidefumi Fujimoto <fujimoto@pluto.dti.ne.jp>.

	* mw32term.c (x_set_window_size): Update `f->win_gravity'.

2004-11-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keyboard.c (gen_help_event): Undo the last changes.

2004-11-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_scroll_bar_handle_click): Initialize
	`input_event'.  Thanks to KOBAYASHI Yasuhiro
	<kobayays@otsukakj.co.jp>.
	(mw32_drop_file_handler): Ditto.
	(mw32_menu_bar_store_activate_event): Ditto.
	(mw32_message_loop): Ditto.

	* keyboard.c (gen_help_event): Ditto.
	(kbd_buffer_store_help_event): Ditto.
	(record_asynch_buffer_change): Ditto.
	(read_avail_input): Ditto.

2004-11-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* fileio.c (Fvisited_file_modtime): Sync up with Emacs CVS HEAD.
	Thanks to Hidefumi Fujimoto <fujimoto@pluto.dti.ne.jp>.

	* keymap.c (syms_of_keymap): Ditto.

2004-11-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* macros.c: Sync up with Emacs CVS HEAD.  Thanks to Hidefumi
	Fujimoto <fujimoto@pluto.dti.ne.jp>.

	* lisp.h: Update a declaration.  Thanks to Hidefumi Fujimoto
	<fujimoto@pluto.dti.ne.jp>.

	* keyboard.c (Fcommand_execute): Update arguments for
	Fexecute_kbd_macro().  Thanks to Hidefumi Fujimoto
	<fujimoto@pluto.dti.ne.jp>.

2004-11-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* fns.c: New Lisp objects: Qcodeset, Qdays, Qmonths and Qpaper.
	(Flax_plist_get): New function from Emacs CVS HEAD.
	(Flax_plist_put): Ditto.
	(Feql): Ditto.
	(Fclear_string): Ditto.
	(syms_of_fns): Define functions described above. Thanks to Kenichi
	Niioka <niioka@kk.iij4u.or.jp>.

	* fileio.c: Update doc strings.
	New Lisp Objects: Qauto_save_coding,
	Qafter_insert_file_set_coding, Qwrite_region_annotate_functions
	and Qset_file_times.
	(Fset_file_times): New function from Emacs CVS HEAD.
	(syms_of_fileio): Sync up with Emacs CVS HEAD.

	* data.c (Fbyteorder): New function from Emacs CVS HEAD.
	(syms_of_data): Define Sbyteorder().

2004-11-09  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (PDUMP_SUBR_DOC_SIZE): Increased.

	* emacs.c: Partially sync up with Emacs CVS HEAD.

2004-11-08  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.c (mw32_flash): delegate message thread to flash
	window.
	(timeval_subtract): Removed.
	* mw32term.h (enum emacs_flash_window_type): New enumeration.
	* mw32fns.c (mw32m_flash_window): New function.
	(mw32_WndProc<WM_EMACS_FLASH_WINDOW>): Call mw32m_flash_window if
	the value of wParam is INVERT_EDGES_OF_FRAME.

2004-11-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* fns.c (Fsubstring_no_properties): New function from Emacs CVS
	HEAD.  Thanks to Hidefumi Fujimoto <fujimoto@pluto.dti.ne.jp>.
	(syms_of_fns): Define Fsubstring_no_properties().  Thanks to
	Hidefumi Fujimoto <fujimoto@pluto.dti.ne.jp>.

2004-11-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* emacs.c: Update comment and remove redundant semicolon.

	* window.c (coordinates_in_window): Sync up with Emacs CVS HEAD.
	(Fset_window_fringes): Ditto.

	* w32.c (w32_get_long_filename): Suppress compilation warnings.

	* bytecode.c: Include "window.h".

	* buffer.h: Update external declarations.

	* dispextern.h: Ditto.

	* keyboard.h: Ditto.

	* lisp.h: Ditto.

2004-11-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h (struct interval): Removed.

	* intervals.c: Sync up with Emacs CVS HEAD.

	* intervals.h: Ditto.

	* alloc.c (mark_interval_tree): Ditto.

	* lread.c (substitute_object_recurse): Ditto.

	* mw32term.c (mw32_append_stretch_glyph): Ditto.

	* print.c (print_preprocess): Ditto.
	(print_object): Ditto.

	* textprop.c: Ditto.

2004-11-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_produce_stretch_glyph): Sync up with Emacs CVS
	HEAD.

2004-11-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* insdel.c: Partially sync up with Emacs CVS HEAD.

2004-11-02  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.c (mw32_flash): New function based on XTflash().
	(timeval_subtract): New function imported from xterm.c.
	(Vmw32_visible_bell_type): New variable.
	(MW32_ring_bell): Call mw32_flash() if Vmw32_visible_bell_type is
	`x'.

2004-11-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_message_loop): Don't confirm
	last_mouse_motion_frame is not nil before doing XSETFRAME. Undo
	the last change.

2004-10-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* fringe.c: Sync up with Emacs CVS HEAD.

	* xdisp.c (handle_single_display_prop): Merge codes related with
	the changes in fringe.c.

	* xfaces.c: Update declarations.

	* w32console.c: Partially sync up with Emacs CVS HEAD.

	* mw32term.c (note_mouse_highlight): Update arguments for
	window_from_coordinates().
	(glyph_rect): Ditto.
	(mw32_message_loop): Ditto.
	Merge codes related with the changes in fringe.c.

	* lisp.h: Update declarations.

	* keymap.c: Update declarations.
	(describe_command): Add a dummy argument.
	(describe_translation): Ditto.

	* keyboard.c (make_lispy_event): Update arguments for
	window_from_coordinates().
	(make_lispy_movement): Ditto.

	* dispextern.h: Update declarations.

	* eval.c: Ditto.

	* alloc.c (make_string): Sync up with Emacs CVS HEAD.
	(make_unibyte_string): Ditto.
	(make_multibyte_string): Ditto.

2004-10-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.meadow.w32-in (bootstrap-temacs): Increase
	`PDUMP_OBJECT_ARRAY_SIZE'.

	* alloc.c: Partially sync up with Emacs CVS HEAD.

	* config.in: Ditto.

	* data.c: Ditto.

	* emacs.c: Ditto.

	* fns.c: Ditto.

	* lisp.h: Ditto.

	* lread.c: Ditto.

	* mw32fns.c: Ditto.

	* print.c: Ditto.

	* print1.c: Ditto.

	* syntax.c: Ditto.

	* syntax.h: Ditto.

	* xfaces.c: Ditto.

2004-10-20  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32_message_loop<WM_MOUSEMOVE>): Confirm
	last_mouse_motion_frame is not nil before doing XSETFRAME.

2004-10-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* textprop.c (Fget_char_property_and_overlay): New function.

	* regex.c: Sync up with Emacs CVS HEAD.

	* regex.h: Ditto.

	* xdisp.c (Fformat_mode_line): Ditto.

	* fns.c: Partially sync up with Emacs CVS HEAD.

	* search.c: Ditto.

	* xfaces.c: Ditto.

	* dispextern.h: Update external declarations.

	* lisp.h: Ditto.

	* data.c (Fvariable_binding_locus): New function.

2004-10-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* eval.c (Fdefmacro): Sync up with Emacs CVS HEAD.
	(internal_condition_case): Ditto.
	(top_level_value): Removed.
	(top_level_set): Ditto.
	Doc strings are merged.

	* data.c: Partially sync up with Emacs CVS HEAD.

	* makefile.meadow.w32-in (bootstrap-temacs): Increase
	`PDUMP_OBJECT_ARRAY_SIZE'.

2004-10-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* textprop.c (text_property_stickiness): New function.

	* process.c (Flist_processes): Ditto.

	* minibuf.c (Fminibuffer_complete_and_exit): Sync up with Emacs
	CVS HEAD.
	(Fminibuffer_complete_word): Ditto.

	* keyboard.c (add_command_key): Sync up with Emacs CVS HEAD.
	(command_loop_1): Ditto.
	(read_char): Ditto.
	(Freset_this_command_lengths): Ditto.
	(Fclear_this_command_keys): Ditto.
	Doc strings are merged.

	* intervals.h: Update external declarations.

	* lisp.h: Ditto.

	* editfns.c (Fstring_to_char): Ditto.
	(find_field): Ditto.
	(Fdelete_field): Ditto.
	(Ffield_string): Ditto.
	(Ffield_string_no_properties): Ditto.
	(Ffield_beginning): Ditto.
	(Ffield_end): Ditto.
	(Fconstrain_to_field): Dito.
	(char_property_eq): Removed.
	(text_property_stickiness): Removed.
	Doc strings are merged.

	* abbrev.c (Fdefine_abbrev): Sync up with Emacs CVS HEAD.

2004-10-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.c (the_group): New variable.
	(getgrgid): New function.

	* lisp.h: Partially sync up with Emacs CVS HEAD.

	* fns.c (check_hash_table): Update the arguments for
	CHECK_HASH_TABLE().

	* fileio.c: New variable: `Vread_file_name_function',
	`Vread_file_name_predicate' and
	`read_file_name_completion_ignore_case'.
	(read_file_name_cleanup): New function.
	(Fread_file_name_internal): Sync up with Emacs CVS HEAD.

	* dired.c: Sync up with Emacs CVS HEAD.

	* data.c: Make Qinteger external.

	* alloc.c: Rename BINDING_STACK_SIZE() SPECPDL_INDEX().

	* keyboard.c: Ditto.

	* minibuf.c: Ditto.

	* mw32fns.c: Ditto.

	* undo.c: Ditto.

	* xfaces.c: Ditto.

2004-10-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.meadow.w32-in (bootstrap-temacs): Increase
	`PDUMP_OBJECT_ARRAY_SIZE'.

	* fns.c (Flocale_info): New function.

	* data.c (Fnteractive_form): Renamed from Fsubr_interactive_form.

	* alloc.c (PDUMP_SUBR_DOC_SIZE): Increased.

2004-10-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xfaces.c: Partially Sync up with Emacs CVS HEAD.

	* textprop.c: New function.
	(Fremove_list_of_text_properties): Ditto.
	(remove_properties): Sync up with Emacs CVS HEAD.
	(Fremove_text_properties): Ditto.
	(syms_of_textprop): New variable, `char-property-alias-alist'.

	* process.c (Fset_process_query_on_exit_flag): New function.
	(Fprocess_query_on_exit_flag): Ditto.

	* makefile.meadow.w32-in (bootstrap-temacs): Increase
	`PDUMP_OBJECT_ARRAY_SIZE'.

	* lisp.h: Update external declarations.

	* fns.c (Ffeaturep): Sync up with Emacs CVS HEAD.
	(Fprovide): Ditto.

	* alloc.c (PDUMP_SUBR_DOC_SIZE): Increased.

2004-10-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* eval.c (Fdefvaralias): New Lisp function.
	(Qdefvar): New Lisp object.

2004-10-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32gui.h (XChar2b): New macro.
	(STORE_XCHAR2B): Ditto.
	(XCHAR2B_BYTE1): Ditto.
	(XCHAR2B_BYTE2): Ditto.

	* mw32term.c (mw32_encode_char): Update arguments.
	(mw32_redisplay_interface): Update.

	* mw32font.h (FontCp): Use `wchar_t' instead of `int'.

	* fontset.c (Voverriding_fontspec_alist): New Lisp object.
	(regularize_fontname): New function from Emacs CVS HEAD.
	(Fset_overriding_fontspec_internal): Ditto.
	(Finternal_char_font): Sync up with Emacs CVS HEAD.
	(syms_of_fontset): Initialize `Voverriding_fontspec_alist' and
	Sset_overriding_fontspec_internal.

	* dispextern.h (struct redisplay_interface): New member,
	`encode_char'.

	* alloc.c (PDUMP_SUBR_DOC_SIZE): Increased.

2004-10-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* ccl.c: Sync up with Emacs CVS HEAD.

	* ccl.h: Ditto.

	* data.c (Fdefalias): Ditto.

2004-10-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* charset.c: Sync up with Emacs CVS HEAD except
	Fstring() and symbol related codes.

2004-10-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* charset.h: Sync up with Emacs CVS HEAD.

	* data.c (Faset): Ditto.

	* charset.c: Merge codes related with the changes in coding.h.

2004-10-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* coding.c: Sync up with Emacs CVS HEAD.

	* buffer.c (delete_all_overlays): New fuction from Emacs CVS HEAD.

	* buffer.h: Udate external declarations.

	* insdel.c (adjust_after_replace_noundo): New fuction from Emacs
	CVS HEAD.

	* lisp.h: Udate external declarations.
	(MAX_ALLOCA): New macro.

2004-10-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* coding.h: Sync up with Emacs CVS HEAD except codes related with
	`Vw32_system_coding_system'.

	* coding.c: Merge codes related with the changes in coding.h.

	* charset.h (BCOPY_SHORT): Sync up with Emacs CVS HEAD.

2004-10-09  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_async_handle_message): Call
	WaitForSingleObject() after all the emacs events are stored.

2004-10-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (get_glyph_string_clip_rect): Don't reduce the cursor
	height.

2004-10-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32font_set_frame_ime_font_by_llogfont): Do nothing
	when IME_CONTROL is defined.

	* mw32fns.c (mw32m_ime_create_agent): Invalidated when IME_CONTROL
	is defined.
	(mw32m_ime_destroy_agent): Ditto.

2004-10-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h (SYMBOL_NAME): New macro.

	* mw32term.c (mw32_init_glyph_string): Sync up with Emacs CVS
	HEAD.
	(mw32_dump_glyph_string): Removed.

	* xdisp.c (calc_pixel_width_or_height): New fuction from Emacs CVS
	HEAD.
	(dump_glyph_string): Ditto.

2004-10-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (get_tool_bar_item): New fuction from Emacs CVS HEAD.
	(handle_tool_bar_click): Ditto.
	(note_tool_bar_highlight): Ditto.

	* termhooks.h (EVENT_INIT): New macro.

	* mw32term.c: Rename `help_echo' `help_echo_string'.
	(mw32_tool_bar_item): Removed.
	(note_tool_bar_highlight): Ditto.
	(mw32_process_tool_bar_click): New function.
	rename mw32_process_tool_bar_click() mw32_handle_tool_bar_click().

2004-10-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (x_cursor_to): New function from Emacs CVS HEAD.
	(select_frame_for_redisplay): Ditto.
	(redisplay_internal): Sync up with Emacs CVS HEAD.
	(unwind_redisplay): Ditto.
	(set_cursor_from_row): Ditto.
	(try_cursor_movement): Ditto.
	(row_containing_pos): Ditto.
	(try_window_id): Ditto.
	(XFRAME): Ditto.
	(append_space_for_newline): Ditto.
	(display_line): Ditto.
	(display_mode_line): Ditto.
	(decode_mode_spec): Ditto.
	(invisible_ellipsis_p): Removed.
	(NUMVAL): New macro.
	(syms_of_xdisp): Initialize `overlay-arrow-variable-list'.

	* mw32term.c: Rename mw32_display_and_set_cursor()
	display_and_set_cursor().
	(MW32_cursor_to): Removed.
	(mw32_redisplay_interface): Update.

	* lread.c (Funintern): Reset indirect_variable.

	* lisp.h (struct Lisp_Symbol): New member, `indirect_variable'.

	* dispextern.h (struct it): New member,
	`constrain_row_ascent_descent_p'.
	(struct redisplay_interface): New member,
	`flush_display_optional'.
	Update external declarations.

	* data.c (Qcyclic_variable_indirection): New Lisp object.
	(indirect_variable): New function from Emacs CVS HEAD.
	(Findirect_variable): Ditto.
	(swap_in_symval_forwarding): Sync up with Emacs CVS HEAD.
	(let_shadows_buffer_binding_p): Ditto.
	(set_internal): Ditto.
	(Fmake_variable_buffer_local): Ditto.
	(Fmake_local_variable): Ditto.
	(Fkill_local_variable): Ditto.
	(Fmake_variable_frame_local): Ditto.
	(Flocal_variable_p): Ditto.
	(Flocal_variable_if_set_p): Ditto.
	(syms_of_data): Initialize `Qcyclic_variable_indirection'.
	(syms_of_data): Define `indirect-variable'.

	* bytecode.c (Fbyte_code): Consider indirect_variable.

	* alloc.c (Fmake_symbol): Initialize indirect_variable.

2004-10-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (estimate_mode_line_height): New function from Emacs CVS
	HEAD.
	(pixel_to_glyph_coords): Ditto.
	(glyph_to_pixel_coords): Ditto.
	(x_y_to_hpos_vpos): Ditto.
	(frame_to_window_pixel_xy): Ditto.
	(get_glyph_string_clip_rect): Ditto.
	(set_output_cursor): Ditto.
	(next_overlay_change): Sync up with Emacs CVS HEAD.
	(push_message_unwind): Renamed pop_message_unwind().
	(x_consider_frame_title): Sync up with Emacs CVS HEAD.
	(update_tool_bar): Ditto.
	(get_overlay_arrow_glyph_row): Ditto.
	(display_line): Ditto.

	* w32gui.h (XRectangle): New type definition.
	(NativeRectangle): New macro.
	(CONVERT_TO_XRECT): Ditto.
	(CONVERT_FROM_XRECT): Ditto.
	(STORE_NATIVE_RECT): Ditto.

	* term.c (estimate_mode_line_height): Removed.

	* mw32term.c (enum draw_glyphs_face): Removed.
	(set_output_cursor): Ditto.
	(MW32_estimate_mode_line_height): Ditto.
	(struct glyph_string): Ditto.
	(mw32_get_glyph_string_clip_rect): Ditto.
	(pixel_to_glyph_coords): Ditto.
	(glyph_to_pixel_coords): Ditto.
	(x_y_to_hpos_vpos): Ditto.
	(frame_to_window_pixel_xy): Ditto.
	(mw32_initialize): Remove `estimate_mode_line_height_hook'.
	Rename mw32_get_glyph_string_clip_rect()
	get_glyph_string_clip_rect().

	* dispextern.h (enum draw_glyphs_face): New enumeration.
	(struct glyph_string): New structure.
	(struct it): New member, `override_ascent'.

	* buffer.h (GET_OVERLAYS_AT): New macro.

	* alloc.c (Fgarbage_collect): Rename push_message_unwind()
	pop_message_unwind().

	* keyboard.c (Fexecute_extended_command): Ditto.

	* lisp.h: Ditto.

2004-10-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c: Partially sync up with Emacs CVS HEAD.

	* lisp.h: New external declaration for Vmemory_full.

	* keyboard.c (command_loop_1): Sync up with Emacs CVS HEAD.

	* dispextern.h (struct it_slice): New structure.
	(struct it): New member, `slice'.
	(struct iterator_stack_entry): Ditto.

	* alloc.c (Vmemory_full): New variable.
	(memory_full): Bind Vmemory_full to `t'.
	(buffer_memory_full): Ditto.
	(syms_of_alloc): Initialize Vmemory_full.

2004-10-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (message_with_string): Sync up with Emacs CVS HEAD.
	(clear_garbaged_frames): Ditto.

	* keyboard.c (make_lispy_event): Sync up with Emacs CVS HEAD.

	* frame.h (struct frame): New member, `force_flush_display_p'.

	* dispnew.c: Sync up with Emacs CVS HEAD.

	* dispextern.h (struct glyph_slice): New structure.
	(struct glyph): New member, `ascent', `descent' and `slice'.

2004-10-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (enum resource_types): Removed.
	(mw32_get_arg): Ditto.
	(mw32_get_and_record_arg): Ditto.
	(mw32_default_parameter): Ditto.
	(mw32_figure_window_size): Ditto.
	Rename functions: mw32_get_arg() -> x_get_arg(),
	mw32_default_parameter() -> x_default_parameter() and
	mw32_get_arg() -> x_get_arg().
	(read_integer): New function.
	(XParseGeometry): Ditto.

	* frame.c: Sync up with Emacs CVS HEAD.

	* emacs.c (main): Don't call keys_of_frame().

	* dispextern.h (enum resource_types): New enumeration.
	New prototypes for functions in `frame.c'.

2004-10-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xfaces.c (set_font_frame_param): Sync up with Emacs CVS HEAD.
	(realize_default_face): Ditto.

	* w32gui.h (XrmDatabase): New type definition.

	* mw32term.h: include `w32gui.h'.
	(struct mw32_display_info): New member, `xrdb'.
	(struct mw32_output): Remove member, `win_gravity' and
	`size_hint_flags'.
	(FRAME_X_OUTPUT): New macro.

	* mw32term.c (x_wm_set_icon_position): New function from Sync up
	with Emacs CVS HEAD.

	* mw32font.c (set_font_frame_param): Sync up with Emacs CVS HEAD.

	* mw32fns.c (struct mw32_frame_parm_table): Removed.
	(mw32_frame_parms): Ditto.
	(init_mw32_parm_symbols): Ditto.
	(x_set_frame_parameters): Ditto.
	(x_report_frame_params): Ditto.
	(mw32_set_vertical_scroll_bars): Ditto.
	(validate_x_resource_name): Ditto.
	(Fx_get_resource): Ditto.
	(display_x_get_resource): Ditto.
	(x_get_resource_string): Ditto.
	(Fx_create_frame): Ditto.
	(Fxw_display_color_p): Ditto.
	(Fx_display_grayscale_p): Ditto.
	(Fx_display_color_cells): Ditto.
	(Fx_close_connection): Ditto.
	(mw32_create_tip_frame): Ditto.
	(mw32i_frame_parm_handlers): Update.
	(intern): Sync up with Emacs CVS HEAD.
	* keyboard.c (not_single_kboard_state): New function from Emacs
	CVS HEAD.

	* frame.h (struct frame): New member, `default_face_done_p'.

	* frame.c: New Lisp Objects, Vx_resource_name, Vx_resource_class,
	Qx_frame_parameter, Qx_resource_name and Qtty_color_mode.
	The following variables are moved from `mw32fns.c': Qauto_raise,
	Qauto_lower, Qborder_color, Qborder_width,
	Qcursor_color,Qcursor_type, Qgeometry, Qleft, Qright, Qicon_left,
	Qicon_top,Qicon_type, Qicon_name, Qinternal_border_width,
	Qmouse_color,Qscroll_bar_width, Qvertical_scroll_bars,
	Qvisibility,Qscroll_bar_foreground, Qscroll_bar_background,
	Qscreen_gamma,Qline_spacing, Quser_position, Quser_size,
	Qwait_for_wm, Qwindow_id, Qparent_id and
	Qface_set_after_frame_default.
	(make_frame): Initialize `f->default_face_done_p'.
	(do_switch_frame): Sync up with Emacs CVS HEAD.
	(Fdelete_frame): Ditto.
	(frames_bury_buffer): Removed.
	(frame_parm_table): New structure.
	(frame_parms): New variable.
	(x_set_frame_parameters): New function from Emacs CVS HEAD.
	(x_report_frame_params): Ditto.
	(x_set_scroll_bar_width): Ditto.
	(validate_x_resource_name): Ditto.
	(xrdb_get_resource): Ditto.
	(Fx_get_resource): Ditto.
	(display_x_get_resource): Ditto.
	(x_get_resource_string): Ditto.
	(syms_of_frame): Sync up with Emacs CVS HEAD.

	* dispextern.h (Display_Info): New type definitions.

	* buffer.c (Fbury_buffer): Sync up with Emacs CVS HEAD.

2004-10-02  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* xdisp.c (display_line): Sync up with Emacs CVS HEAD.

2004-10-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.h (FRAME_X_WINDOW): New macro.
	(mw32_new_fontset): Ditto.
	(mw32_new_font): Ditto.

	* mw32font.c (reinit_syms_of_mw32font): Rename mw32_set_font to
	x_set_font.

	* mw32fns.c (mw32_frame_parms): Update.
	(mw32_set_line_spacing): Removed.
	(mw32_set_screen_gamma): Ditto.
	(mw32_set_font): Ditto.
	(mw32_set_fringe_width): Ditto.
	(mw32_set_border_width): Ditto.
	(mw32_set_internal_border_width): Ditto.
	(mw32_set_visibility): Ditto.
	(mw32_set_autoraise): Ditto.
	(mw32_set_autolower): Ditto.
	(mw32_set_unsplittable): Ditto.
	(x_set_scroll_bar_default_width): New function.
	(mw32_fullscreen_adjust): Removed.
	(mw32i_frame_parm_handlers): Update.

	* frame.h (struct frame): New member variables: `win_gravity' and
	`size_hint_flags'.
	Update external declarations.

	* frame.c: New variables: Qfullscreen, Qfullwidth, Qfullheight,
	Qfullboth ad Vmouse_highlight.
	(make_frame): Initialize size_hint_flags and win_gravity of the
	frame.
	(x_fullscreen_adjust): New function.
	(x_set_fullscreen): Ditto.
	(x_set_line_spacing): Ditto.
	(x_set_screen_gamma): Ditto.
	(x_set_font): Ditto.
	(x_set_border_width): Ditto.
	(x_set_internal_border_width): Ditto.
	(x_set_visibility): Ditto.
	(x_set_autolower): Ditto.
	(x_set_unsplittable): Ditto.
	(x_set_scroll_bar_width): Ditto.
	(x_icon_type): Ditto.
	(syms_of_frame): Initialze Qfullscreen, Qfullwidth, Qfullheight,
	Qfullboth ad Vmouse_highlight.

2004-09-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keyboard.c (make_lispy_event): Use enumerations instead of magic
	numbers.

	* mw32term.c (note_mouse_highlight): Ditto.

2004-09-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c: Sync up with Emacs CVS HEAD.

	* window.h: Ditto.

	* keymap.h: New file.

	* buffer.c: Codes related with the changes in window.[ch] are
	merged.

	* buffer.h: Ditto.

	* callint.c: Ditto.

	* dispnew.c: Ditto.

	* frame.c: Ditto.

	* frame.h: Ditto.

	* keyboard.c: Ditto.

	* minibuf.c: Ditto.

	* mw32fns.c: Ditto.

	* mw32term.c: Ditto.

2004-09-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (redisplay_window): Set the second argument for
	make_cursor_line_fully_visible() to 0 to avoid unexpected behavior
	of the cursor in the minibuffer.

2004-09-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c (Fwindow_edges): Sync up with Emacs CVS HEAD.
	(Fwindow_pixel_edges): New function.
	(Fwindow_inside_edges): Ditto.
	(Fwindow_inside_pixel_edges): Ditto.
	(coordinates_in_window): Sync up with Emacs CVS HEAD.
	(Fset_window_fringes): New function.
	(Fwindow_fringes): Ditto.
	(Fset_window_scroll_bars): Ditto.
	(Fwindow_scroll_bars): Ditto.

2004-09-23  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (IT_OVERFLOW_NEWLINE_INTO_FRINGE): Sync up with Emacs
	CVS HEAD.
	(find_last_unchanged_at_beg_row): Ditto.
	(display_line): Ditto.

	* mw32term.h (enum text_cursor_kinds): Removed.

	* mw32term.c (pixel_to_glyph_coords): Sync up with Emacs CVS HEAD.
	(notice_overwritten_cursor): Ditto.
	(mw32_erase_phys_cursor): Ditto.
	(mw32_display_and_set_cursor): Ditto.

	* fringe.c (draw_fringe_bitmap): Sync up with Emacs CVS HEAD.
	(compute_fringe_widths): Ditto.

	* frame.h (enum text_cursor_kinds): New enumeration.

	* dispnew.c (direct_output_for_insert): Sync up with Emacs CVS
	HEAD.
	(update_window_line): Ditto.
	(buffer_posn_from_coords): Add temporary offset for the left area
	width.

	* dispextern.h (struct glyph_row): New member:
	exact_window_width_line_p and cursor_in_fringe_p.

2004-09-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_produce_image_glyph): Sync up with Emacs CVS
	HEAD except codes related with `struct glyph_slice'.

2004-09-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c: Partially sync up with Emacs CVS HEAD.

	* bytecode.c: Codes related with the changes in xdisp.c are
	merged.

	* callint.c: Ditto.

	* charset.c: Ditto.

	* charset.h: Ditto.

	* cmds.c: Ditto.

	* dispextern.h: Ditto.

	* indent.c: Ditto.

	* insdel.c: Ditto.

	* keymap.c: Ditto.

	* lisp.h: Ditto.

	* minibuf.c: Ditto.

	* window.c: Ditto.

	* window.h: Ditto.

2004-09-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32i_after_update_window_line): Sync up with Emacs
	CVS HEAD.
	(mw32_draw_glyph_string_box): Ditto.
	(mw32i_scroll_run): Exclude fringes areas from scrolling.

2004-09-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32i_after_update_window_line): Take account of
	left-fringe-width.
	(expose_window): Sync up with Emacs CVS HEAD.
	(expose_window): Add temporary offset for the intersection box.

2004-09-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (window_box_width): Sync up with Emacs CVS HEAD.
	(window_box_left_offset): New function.
	(window_box_right_offset): Ditto.
	(window_box_left): Sync up with Emacs CVS HEAD.

	* window.h (WINDOW_LEFT_SCROLL_BAR_AREA_WIDTH): New macro.
	(WINDOW_RIGHT_SCROLL_BAR_AREA_WIDTH): Ditto.
	(WINDOW_SCROLL_BAR_AREA_WIDTH): Ditto.
	(WINDOW_SCROLL_BAR_AREA_X): Ditto.

	* window.c (make_window): Remove temporary initialization.

2004-09-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c: Rename macros: FRAME_INTERNAL_BORDER_WIDTH_SAFE ->
	FRAME_INTERNAL_BORDER_WIDTH, WINDOW_DISPLAY_HEADER_LINE_HEIGHT ->
	WINDOW_HEADER_LINE_HEIGHT and WINDOW_DISPLAY_HEIGHT_NO_MODE_LINE
	-> WINDOW_BOX_HEIGHT_NO_MODE_LINE.

	* window.h (WINDOW_TO_FRAME_PIXEL_X): New macro.
	(WINDOW_TO_FRAME_PIXEL_Y): Ditto.
	(FRAME_TO_WINDOW_PIXEL_X): Ditto.
	(FRAME_TO_WINDOW_PIXEL_Y): Ditto.
	(WINDOW_TEXT_TO_FRAME_PIXEL_X): Ditto.

	* window.c (adjust_window_margins): New function.
	(shrink_windows): Ditto.
	(size_window): Sync up with Emacs CVS HEAD.
	(Fsplit_window): Call adjust_window_margins().
	(Fset_window_margins): Ditto.

	* mw32term.c (mw32_erase_phys_cursor): Sync up with Emacs CVS
	HEAD.

	* fringe.c (compute_fringe_widths): Remove debug write.

	* dispnew.c (buffer_posn_from_coords): Use
	WINDOW_LEFT_MARGIN_WIDTH instead of
	WINDOW_DISPLAY_LEFT_AREA_PIXEL_WIDTH.

	* dispextern.h (MATRIX_ROW_PARTIALLY_VISIBLE_AT_TOP_P): Sync up
	with Emacs CVS HEAD.
	(MATRIX_ROW_PARTIALLY_VISIBLE_AT_BOTTOM_P): Ditto.
	(FRAME_INTERNAL_BORDER_WIDTH_SAFE): Removed.
	(WINDOW_DISPLAY_PIXEL_WIDTH): Ditto.
	(WINDOW_DISPLAY_PIXEL_HEIGHT): Ditto.
	(WINDOW_DISPLAY_MODE_LINE_HEIGHT): Ditto.
	(WINDOW_DISPLAY_HEADER_LINE_HEIGHT): Ditto.
	(WINDOW_DISPLAY_HEIGHT_NO_MODE_LINE): Ditto.
	(WINDOW_DISPLAY_TEXT_HEIGHT): Ditto.
	(WINDOW_DISPLAY_LEFT_EDGE_PIXEL_X): Ditto.
	(WINDOW_DISPLAY_RIGHT_EDGE_PIXEL_X): Ditto.
	(WINDOW_DISPLAY_TOP_EDGE_PIXEL_Y): Ditto.
	(WINDOW_DISPLAY_BOTTOM_EDGE_PIXEL_Y): Ditto.
	(WINDOW_TO_FRAME_PIXEL_X): Ditto.
	(WINDOW_TO_FRAME_PIXEL_Y): Ditoo.
	(FRAME_TO_WINDOW_PIXEL_X): Ditto.
	(FRAME_TO_WINDOW_PIXEL_Y): Ditto.
	(WINDOW_DISPLAY_LEFT_AREA_PIXEL_WIDTH): Ditto.
	(WINDOW_DISPLAY_RIGHT_AREA_PIXEL_WIDTH): Ditto.
	(WINDOW_DISPLAY_TEXT_AREA_PIXEL_WIDTH): Ditto.
	(WINDOW_TEXT_TO_FRAME_PIXEL_X): Ditto.
	(WINDOW_AREA_TO_FRAME_PIXEL_X): Ditto.
	(WINDOW_AREA_PIXEL_WIDTH): Ditto.
	(WINDOW_WANTS_MODELINE_P): Sync up with Emacs CVS HEAD.
	(WINDOW_WANTS_HEADER_LINE_P): Ditto.

2004-09-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xfaces.c (realize_basic_faces): Rename BITMAP_AREA_FACE_ID to
	FRINGE_FACE_ID.

	* xdisp.c (handle_single_display_prop): Sync up Emacs CVS HEAD.
	Update doc-strings.

	* window.h: New member: overlay_arrow_bitmap.

	* window.c (make_window): Sync up Emacs CVS HEAD.

	* mw32term.c: Move fringe related functions and variables to
	fringe.c.

	* mw32fns.c (mw32_frame_parms): New elements for left-fringe and
	right-fringe.
	(mw32_fullscreen_adjust): New function.

	* makefile.nt: Update.

	* makefile.meadow.w32-in: Update.

	* lisp.h: New external definitions for fringe.c.

	* fringe.c: New file form Emacs CVS HEAD.

	* frame.h (struct frame): New member:x_pixels_diff,
	y_pixels_diff and want_fullscreen.
	New enumeration for values used as a bit mask.

	* frame.c (make_frame): Sync up with Emacs CVS HEAD.

	* emacs.c (main): Call functions to initialize fringes.

	* dispextern.h (enum face_id): Rename BITMAP_AREA_FACE_ID to
	FRINGE_FACE_ID.
	(struct draw_fringe_bitmap_params): New structure.
	New external definitions for w32_init_fringe() and
	w32_reset_fringes().

	* alloc.c (PDUMP_SUBR_DOC_SIZE): Increased.

2004-09-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (struct fringe_bitmap): Sync up with Emacs CVS HEAD.
	(unknown_bits, left_arrow_bits, right_arrow_bits, ov_bits,
	continued_bits, continuation_bits, zv_bits, left_bracket_bits,
	right_bracket_bits, top_left_angle_bits, top_right_angle_bits,
	bottom_left_angle_bits, bottom_right_angle_bits, up_arrow_bits,
	down_arrow_bits): Sync up with Emacs CVS HEAD.
	(internal_bitmap_array): Sync up with Emacs CVS HEAD.
	(fringe_bmp): New variable.
	(mw32_define_fringe_bitmap): New function.
	(mw32_destroy_fringe_bitmap): Ditto.
	(mw32_init_fringe): Ditto.
	(mw32_reset_fringes): Ditto.
	(mw32_draw_bitmap): Use `fringe_bmp' instead of `pib->hBMP'.
	(mw32_term_init): Call mw32_init_fringe().
	(mw32_delete_display): Call mw32_reset_fringes().
	(mw32_redisplay_interface): Update.

	* dispextern.h (struct redisplay_interface): New member:
	draw_fringe_bitmap, define_fringe_bitmap and
	destroy_fringe_bitmap.

2004-09-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (handle_single_display_prop): Sync up with Emacs CVS
	HEAD.
	(redisplay_internal): Call update_window_fringes().
	(display_line): Sync up with Emacs CVS HEAD.

	* mw32term.c (mw32_any_window_to_frame): Remove marco.
	(mw32_top_window_to_frame): Ditto.
	(min): Ditto.
	(max): Ditto.
	(BETWEEN): Ditto.
	(enum fringe_bitmap_type): Sync up with Emacs CVS HEAD.
	(enum bitmap_location): Removed.
	(enum fringe_bitmap_align): New enumeration.
	(struct fringe_bitmap): Renamed from `internal_bitmap'.
	New variables: unknown_bits, left_arrow_bits, right_arrow_bits,
	ov_bits, continued_bits, continuation_bits, zv_bits,
	left_bracket_bits, right_bracket_bits, top_left_angle_bits,
	top_right_angle_bits, bottom_left_angle_bits,
	bottom_right_angle_bits, up_arrow_bits and down_arrow_bits.
	(internal_bitmap_array): Renamed from `internal_bitmap_array' and
	synced up with Emacs CVS HEAD.
	(mw32_draw_bitmap): New argument `left_p'.
	(valid_fringe_bitmap_id_p): New function.
	(draw_fringe_bitmap): Renamed from `draw_fringe_bitmap.
	(draw_fringe_bitmap): New argument `left_p'.
	(draw_window_fringes): Renamed from `mw32_draw_window_fringes'.
	(draw_row_fringe_bitmaps): New function.
	(update_window_fringes): Sync up with Emacs CVS HEAD.
	(compute_fringe_widths): New function.
	(x_set_window_size): Call compute_fringe_widths().
	(mw32_new_font): Remove temporary initialization and sync up with
	Emacs CVS HEAD.

	* mw32fns.c (mw32_set_fringe_width): New function.
	(mw32_figure_window_size): Sync up with Emacs CVS HEAD.
	(Fx_create_frame): Fix the arguments for
	mw32_figure_window_size().
	(init_frame_faces): Ditto.

	* frame.c: New Lisp object: Qleft_fringe and Qright_fringe.

	* frame.h: Ditto.

	* dispnew.c (direct_output_for_insert): Call
	update_window_fringes().
	(update_window): Ditto.

	* dispextern.h (MAX_FRINGE_BITMAPS): New macro.
	(struct it): New member: left_user_fringe_bitmap,
	left_user_fringe_face_id, right_user_fringe_bitmap and
	right_user_fringe_face_id.


2004-09-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c: Rename macros: FRAME_MW32_RIGHT_FLAGS_AREA_WIDTH ->
	FRAME_RIGHT_FRINGE_WIDTH, FRAME_MW32_LEFT_FLAGS_AREA_WIDTH ->
	FRAME_LEFT_FRINGE_WIDTH, FRAME_X_RIGHT_FLAGS_AREA_WIDTH ->
	FRAME_RIGHT_FRINGE_WIDTH and FRAME_X_LEFT_FLAGS_AREA_WIDTH ->
	FRAME_LEFT_FRINGE_WIDTH.

	* mw32term.h (FRAME_MW32_FLAGS_AREA_COLS): Removed.
	(FRAME_MW32_FLAGS_AREA_WIDTH): Ditto.
	(FRAME_MW32_LEFT_FLAGS_AREA_WIDTH): Ditto.
	(FRAME_MW32_RIGHT_FLAGS_AREA_WIDTH): Ditto.
	(FRAME_X_FLAGS_AREA_COLS): Ditto.
	(FRAME_X_FLAGS_AREA_WIDTH): Ditto.
	(FRAME_X_LEFT_FLAGS_AREA_WIDTH): Ditto.
	(FRAME_X_RIGHT_FLAGS_AREA_WIDTH): Ditto.

2004-09-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_new_font): Initialize fringe related variables
	temporarily.  These should be removed later.

2004-09-16  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (IT_OVERFLOW_NEWLINE_INTO_FRINGE): Always return false.

2004-09-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (redisplay_window): Set the second argument for
	make_cursor_line_fully_visible() to 0.

2004-09-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (message_dolog_marker1): New static variable.
	(message_dolog_marker2): Ditto.
	(message_dolog_marker3): Ditto.
	(message_dolog): Sync up with Emacs CVS HEAD.
	(syms_of_xdisp): Initialize message_dolog_marker1,
	message_dolog_marker2 and message_dolog_marker3.

2004-09-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.h (WINDOW_SCROLL_BAR_COLS): Sync up with Emacs CVS HEAD.
	(WINDOW_BOX_TEXT_HEIGHT): Ditto.

	* window.c (make_window): Bind p->scroll_bar_width to 32
	temporarily.

	* mw32term.c (mw32_redisplay_interface): Sync up with Emacs CVS
	HEAD.

	* mw32fns.c (x_set_frame_parameters): Sync up with Emacs CVS HEAD.
	(mw32i_frame_parm_handlers): New variables.

	* lisp.h (XSETCAR): New macro.
	(XSETCDR): Ditto.
	(SYMBOL_VALUE): Ditto.

	* intervals.c (min): Removed.

	* insdel.c (min): Removed.
	(max): Ditto.

	* dispextern.h (frame_parm_handler): New type definition.
	(DEFAULT_TOOL_BAR_BUTTON_MARGIN): Sync up with Emacs CVS HEAD.
	(DEFAULT_TOOL_BAR_BUTTON_RELIEF): Ditto.
	(TTY_CAP_*): New macros.
	Update comment strings.

	* alloc.c (max): Removed.
	(min): Ditto.

	* charset.c (min): Ditto.
	(max): Ditto.

2004-09-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c: Rename function: window_internal_width ->
	window_box_text_cols.
	Use WINDOW_TOTAL_COLS(w) and WINDOW_TOTAL_LINES(w) instead of
	w->total_cols and p->total_lines.
	(Fpos_visible_in_window_p): Sync up with Emacs CVS HEAD.
	(Fwindow_height): Ditto.
	(Fwindow_width): Ditto.
	(coordinates_in_window): Ditto.
	(decode_any_window): New function.
	(MIN_SAFE_WINDOW_HEIGHT): Sync up with Emacs CVS HEAD.
	(window_box_text_cols): Sync up with Emacs CVS HEAD.

	* window.h (WINDOW_BOX_LEFT_EDGE_COL): Sync up with Emacs CVS
	HEAD.
	(WINDOW_BOX_RIGHT_EDGE_COL): New macro.
	(WINDOW_BOX_LEFT_EDGE_X): Ditto.
	(WINDOW_BOX_RIGHT_EDGE_X): Ditto.
	(WINDOW_LEFT_MARGIN_COLS): Ditto.
	(WINDOW_LEFT_MARGIN_WIDTH): Ditto.
	(WINDOW_RIGHT_MARGIN_WIDTH): Ditto.
	(WINDOW_FRINGE_COLS): Ditto.
	(WINDOW_LEFT_FRINGE_COLS): Ditto.
	(WINDOW_RIGHT_FRINGE_COLS): Ditto.
	(WINDOW_HAS_VERTICAL_SCROLL_BAR): Sync up with Emacs CVS HEAD.
	(WINDOW_HAS_VERTICAL_SCROLL_BAR_ON_LEFT): New macro.
	(WINDOW_HAS_VERTICAL_SCROLL_BAR_ON_RIGHT): Ditto.
	(WINDOW_LEFT_SCROLL_BAR_COLS): Ditto.
	(WINDOW_RIGHT_SCROLL_BAR_COLS): Ditto.
	Rename function: window_internal_width -> window_box_text_cols.

	* mw32term.h (struct mw32_output): Remove members:
	vertical_scroll_bar_extra and flags_areas_extra.
	(CHAR_TO_PIXEL_ROW): Removed.
	(CHAR_TO_PIXEL_COL): Ditto.
	(CHAR_TO_PIXEL_WIDTH): Ditto.
	(CHAR_TO_PIXEL_HEIGHT): Ditto.
	(PIXEL_TO_CHAR_ROW): Ditto.
	(PIXEL_TO_CHAR_COL): Ditto.
	(PIXEL_TO_CHAR_WIDTH): Ditto.
	(PIXEL_TO_CHAR_HEIGHT): Ditto.

	* mw32oime.c: Rename macros: CHAR_TO_PIXEL_COL ->
	FRAME_COL_TO_PIXEL_X and CHAR_TO_PIXEL_ROW ->
	FRAME_LINE_TO_PIXEL_Y.

	* mw32term.c: Ditto.

	* mw32fns.c: Don't use FRAME_NEW_HEIGHT(f) and FRAME_LINES(f).
	(mw32_figure_window_size): Sync up with Emacs CVS HEAD.
	(mw32_WndProc): Rename macros: PIXEL_TO_CHAR_HEIGHT ->
	FRAME_PIXEL_HEIGHT_TO_TEXT_LINES and PIXEL_TO_CHAR_WIDTH ->
	FRAME_PIXEL_WIDTH_TO_TEXT_COLS

	* indent.c: Rename function: window_internal_width ->
	window_box_text_cols.

	* dispextern.h (WINDOW_DISPLAY_LEFT_EDGE_PIXEL_X): Rename macros:
	FRAME_LEFT_FLAGS_AREA_WIDTH -> FRAME_LEFT_FRINGE_WIDTH.

	* dispnew.c: Ditto.
	Don't use FRAME_NEW_HEIGHT(f) and FRAME_LINES(f).

	* frame.c: Don't use FRAME_NEW_HEIGHT(f) and FRAME_LINES(f).
	(make_frame): Initialize scroll_bar_actual_width and
	f->border_width.

	* frame.h (struct frame): New member, scroll_bar_actual_width.
	(FRAME_NEW_HEIGHT): Removed.
	(FRAME_NEW_WIDTH): Ditto.
	(FRAME_LEFT_SCROLL_BAR_AREA_WIDTH): New macro.
	(FRAME_RIGHT_SCROLL_BAR_AREA_WIDTH): Ditto.
	(FRAME_SCROLL_BAR_AREA_WIDTH): Ditto.
	(FRAME_FLAGS_AREA_WIDTH): Removed.
	(FRAME_LEFT_FLAGS_AREA_WIDTH): Ditto.
	(FRAME_LINE_TO_PIXEL_Y): New macro.
	(FRAME_COL_TO_PIXEL_X): Ditto.
	(FRAME_TEXT_COLS_TO_PIXEL_WIDTH): Ditto.
	(FRAME_TEXT_LINES_TO_PIXEL_HEIGHT): Ditto.
	(FRAME_PIXEL_Y_TO_LINE): Ditto.
	(FRAME_PIXEL_X_TO_COL): Ditto.
	(FRAME_PIXEL_WIDTH_TO_TEXT_COLS): Ditto.
	(FRAME_PIXEL_HEIGHT_TO_TEXT_LINES): Ditto.

2004-09-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c (make_window): Initialize fringes_outside_margins,
	scroll_bar_width and vertical_scroll_bar_type.
	(Fsplit_window): Ditto.
	(Fset_window_configuration): Ditto.
	(save_window_save): Ditto.
	(struct saved_window): New member: fringes_outside_margins,
	scroll_bar_width and vertical_scroll_bar_type.
	(compare_window_configurations): Compare fringes_outside_margins,
	scroll_bar_width and vertical_scroll_bar_type.

	* window.h: New member: fringes_outside_margins, scroll_bar_width
	and vertical_scroll_bar_type.
	(WINDOW_LEFT_FRINGE_WIDTH): Sync up with Emacs CVS HEAD.
	(WINDOW_RIGHT_FRINGE_WIDTH): Ditto.
	(WINDOW_HAS_FRINGES_OUTSIDE_MARGINS): New macro.
	(WINDOW_CONFIG_SCROLL_BAR_WIDTH): Ditto.
	(WINDOW_CONFIG_SCROLL_BAR_COLS): Ditto.

	* mw32fns.c: Move left_pos, top_pos and border_width from `struct
	mw32_output' to 'strcut frame'.
	Rename PIXEL_WIDTH (f) to FRAME_PIXEL_WIDTH (f).

	* mw32term.c: Ditto.

	* mw32term.h (struct mw32_output): Remove members: left_pos,
	top_pos, border_width, pixel_height and pixel_width.
	(PIXEL_WIDTH): Removed.
	(PIXEL_HEIGHT): Removed.

	* frame.h (struct frame): New members: left_pos, top_pos,
	pixel_height, pixel_width, border_width and fringe_cols.
	(FRAME_PIXEL_HEIGHT): New macros, FRAME_PIXEL_HEIGHT and
	FRAME_PIXEL_WIDTH.
	(FRAME_FRINGE_COLS): Sync up with Emacs CVS HEAD.
	(FRAME_RIGHT_FRINGE_WIDTH): Ditto.
	(FRAME_LEFT_FRINGE_WIDTH): New macro.
	(FRAME_RIGHT_FRINGE_WIDTH): Ditto.
	(FRAME_TOTAL_FRINGE_WIDTH): Ditto.

	* frame.c: Use FRAME_LINES(f) and FRAME_COLS(f) instead of
	f->text_lines and f->text_cols.
	Update some docstrings.
	(make_frame): Bind f->fringe_cols to 2 temporarily.

	* buffer.h (struct buffer): New members: fringes_outside_margins,
	scroll_bar_width and vertical_scroll_bar_type.

	* buffer.c (init_buffer_once): Initialize fringes_outside_margins,
	scroll_bar_width and vertical_scroll_bar_type.
	(init_buffer_once): Ditto.
	(syms_of_buffer): New Lisp variables:
	default-fringes-outside-margins, default-scroll-bar-width,
	default-vertical-scroll-bar, fringes-outside-margins,
	scroll-bar-width and vertical-scroll-bar.

2004-09-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c: Rename macros: CANON_X_UNIT -> FRAME_COLUMN_WIDTH and
	CANON_Y_UNIT -> FRAME_LINE_HEIGHT.

	* xdisp.c: Ditto.

	* mw32term.h (struct mw32_output): Remove member,
	`internal_border_width'.
	(FRAME_INTERNAL_BORDER_WIDTH): Removed.
	Use FRAME_INTERNAL_BORDER_WIDTH(f) instead of
	f->output_data.mw32->internal_border_width.
	Rename macros: CANON_X_UNIT -> FRAME_COLUMN_WIDTH
	and CANON_Y_UNIT -> FRAME_LINE_HEIGHT.

	* mw32term.c: Rename marocs: CANON_X_UNIT -> FRAME_COLUMN_WIDTH,
	CANON_Y_UNIT -> FRAME_LINE_HEIGHT, PIXEL_X_FROM_CANON_X ->
	FRAME_PIXEL_X_FROM_CANON_X, PIXEL_Y_FROM_CANON_Y ->
	FRAME_PIXEL_Y_FROM_CANON_Y, CANON_X_FROM_PIXEL_X ->
	FRAME_CANON_X_FROM_PIXEL_X and CANON_Y_FROM_PIXEL_Y ->
	FRAME_CANON_Y_FROM_PIXEL_Y

	* mw32fns.c: Ditto.
	Use FRAME_INTERNAL_BORDER_WIDTH(f) instead of
	f->output_data.mw32->internal_border_width.

	* frame.h (struct frame): New member, `internal_border_width'.
	(struct frame): Remove member, `trunc_area_pixel_width' and
	`trunc_area_cols'.
	Remove macros:CANON_Y_UNIT and CANON_X_UNIT.
	Rename marocs: CANON_X_UNIT -> FRAME_COLUMN_WIDTH, CANON_Y_UNIT ->
	FRAME_LINE_HEIGHT, PIXEL_X_FROM_CANON_X ->
	FRAME_PIXEL_X_FROM_CANON_X, PIXEL_Y_FROM_CANON_Y ->
	FRAME_PIXEL_Y_FROM_CANON_Y, CANON_X_FROM_PIXEL_X ->
	FRAME_CANON_X_FROM_PIXEL_X and CANON_Y_FROM_PIXEL_Y ->
	FRAME_CANON_Y_FROM_PIXEL_Y

	* frame.c (make_frame): Initialize f->internal_border_width.

	* dispextern.h: Rename macros: CANON_X_UNIT -> FRAME_COLUMN_WIDTH
	and CANON_Y_UNIT -> FRAME_LINE_HEIGHT.

	* dispnew.c: Ditto.

2004-09-09  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c: Take account of p->left_margin_cols,
	p->right_margin_cols, p->left_fringe_width and
	p->right_fringe_width.

	* lisp.h: Move external definition for frame.c to frame.h.

	* frame.h (struct frame): Rename members: height -> text_lines,
	width -> text_cols, window_width -> total_cols, window_height ->
	text_lines, total_lines -> new_text_lines, total_cols ->
	new_text_cols, scroll_bar_pixel_width -> config_scroll_bar_width
	and scroll_bar_cols -> config_scroll_bar_cols.
	New member, left_fringe_width and right_fringe_width.

	* widget.c: Ditto.

	* mw32term.c: Ditto.

	* mw32fns.c: Ditto.

	* indent.c: Ditto.

	* window.h: Ditto.
	New variables, left_fringe_width and
	right_fringe_width.
	New external definition for frame.c from lisp.h.

	* frame.c (make_frame): Bind f->left_fringe_width and
	f->right_fringe_width to 8 temporarily.
	Rename members of `struct frame': height -> text_lines and width
	-> text_cols.

	* dispnew.c (mode_line_string): Rename macros:
	FRAME_SCROLL_BAR_COLS -> FRAME_CONFIG_SCROLL_BAR_COLS.

	* buffer.c (init_buffer_once): Partially sync up with Emacs.
	(syms_of_buffer): New Lisp variables, `default-left-fringe-width',
	`default-right-fringe-width', `left-fringe-width' and
	`right-fringe-width'.

	* buffer.h (struct buffer): New member, `left_fringe_width' and
	`right_fringe_width'.

	* dispextern.h: Rename macros: FRAME_SCROLL_BAR_WIDTH ->
	FRAME_SCROLL_BAR_COLS and FRAME_FLAGS_AREA_COLS ->
	FRAME_FRINGE_COLS.

2004-09-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c: Update the arguments for CHECK_FRAME() and
	CHECK_LIVE_FRAME().
	Rename macros: SET_FRAME_WIDTH -> SET_FRAME_COLS,
	FRAME_HEIGHT -> FRAME_LINES, FRAME_LEFT_SCROLL_BAR_WIDTH ->
	FRAME_LEFT_SCROLL_BAR_COLS, SET_FRAME_WIDTH -> SET_FRAME_COLS and
	FRAME_COLUMN_WIDTH -> FRAME_LINE_HEIGHT.
	Update the arguments for CHECK_FRAME() and CHECK_LIVE_FRAME().

2004-09-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xfaces.c: Update the arguments for CHECK_FRAME() and
	CHECK_LIVE_FRAME().

	* xdisp.c: Rename macros: SET_FRAME_WIDTH -> SET_FRAME_COLS,
	FRAME_HEIGHT -> FRAME_LINES, FRAME_LEFT_SCROLL_BAR_WIDTH ->
	FRAME_LEFT_SCROLL_BAR_COLS, SET_FRAME_WIDTH -> SET_FRAME_COLS and
	FRAME_COLUMN_WIDTH -> FRAME_LINE_HEIGHT.
	Update the arguments for CHECK_FRAME() and CHECK_LIVE_FRAME().

	* window.c: Ditto.

	* window.h: Rename macros: SET_FRAME_WIDTH -> SET_FRAME_COLS,
	FRAME_HEIGHT -> FRAME_LINES, FRAME_LEFT_SCROLL_BAR_WIDTH ->
	FRAME_LEFT_SCROLL_BAR_COLS, SET_FRAME_WIDTH -> SET_FRAME_COLS and
	FRAME_COLUMN_WIDTH -> FRAME_LINE_HEIGHT.

	* w32console.c: Ditto.

	* term.c: Ditto.

	* sysdep.c: Ditto.

	* scroll.c: Ditto.

	* print1.c: Ditto.

	* mw32term.h (struct mw32_output): Remove `line_height'.

	* mw32term.c: Rename macros: SET_FRAME_WIDTH -> SET_FRAME_COLS,
	FRAME_HEIGHT -> FRAME_LINES, FRAME_LEFT_SCROLL_BAR_WIDTH ->
	FRAME_LEFT_SCROLL_BAR_COLS, SET_FRAME_WIDTH -> SET_FRAME_COLS and
	FRAME_COLUMN_WIDTH -> FRAME_LINE_HEIGHT.

	* mw32ime.c: Update the arguments for CHECK_FRAME() and
	CHECK_LIVE_FRAME().

	* keyboard.c: Rename macros: SET_FRAME_WIDTH -> SET_FRAME_COLS,
	FRAME_HEIGHT -> FRAME_LINES, FRAME_LEFT_SCROLL_BAR_WIDTH ->
	FRAME_LEFT_SCROLL_BAR_COLS, SET_FRAME_WIDTH -> SET_FRAME_COLS and
	FRAME_COLUMN_WIDTH -> FRAME_LINE_HEIGHT.

	* indent.c: Ditto.

	* frame.h: Ditto.
	(struct frame): New members: column_width and line_height.
	(CHECK_FRAME): Sync up with Emacs CVS HEAD.
	(CHECK_LIVE_FRAME): Ditto.

	* frame.c: Update the arguments for CHECK_FRAME() and
	CHECK_LIVE_FRAME().
	Rename macros: SET_FRAME_WIDTH -> SET_FRAME_COLS and FRAME_HEIGHT
	-> FRAME_LINES.

	* fontset.c: Update the arguments for CHECK_LIVE_FRAME().

	* dispnew.c (blank_row): Sync up with Emacs CVS HEAD.
	(line_hash_code): Ditto.
	(allocate_matrices_for_frame_redisplay): Ditto.
	(required_matrix_height): Ditto.
	(required_matrix_width): Ditto.
	(adjust_frame_glyphs_initially): Ditto.
	(fake_current_matrices): Ditto.
	(adjust_frame_glyphs_for_frame_redisplay): Ditto.
	(sync_window_with_frame_matrix_rows): Ditto.
	(frame_row_to_window): Ditto.
	(window_to_frame_vpos): Ditto.
	(Fredraw_frame): Ditto.
	(update_frame): Ditto.
	(update_window): Ditto.
	(update_text_area): Ditto.
	(scrolling_window): Ditto.
	(update_frame_1): Ditto.
	(scrolling): Ditto.
	(update_frame_line): Ditto.
	(change_frame_size_1): Ditto.
	(sit_for): Ditto.
	(Fframe_or_buffer_changed_p): Ditto.
	(init_display): Ditto.

	* buffer.c (Fbuffer_list): Update the arguments for CHECK_FRAME().

2004-09-08  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (window_box_width): Temporarily ignore `pixels'.

2004-09-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* dispnew.c (WINDOW_TO_FRAME_VPOS): Sync up with Emacs CVS HEAD.
	(WINDOW_TO_FRAME_HPOS): Ditto.
	(safe_bcopy): Ditto.
	(margin_glyphs_to_reserve): Ditto.
	(adjust_glyph_matrix): Ditto.
	(clear_glyph_row): Ditto.
	(blank_row): Ditto.

	* xdisp.c (window_text_bottom_y): Sync up with Emacs CVS HEAD.
	(window_box_width): Ditto.
	(window_box): Ditto.
	(pos_visible_p): Ditto.
	(display_line): Ditto.

	* window.h (struct window): New members, `nrows_scale_factor' and
	`ncols_scale_factor'.

	* window.c (make_window): Initialize `nrows_scale_factor' and
	`ncols_scale_factor'.

	* mw32term.h (FRAME_COLUMN_WIDTH): Removed.

	* mw32term.c (mw32_append_glyph): Partially sync up with Emacs CVS
	HEAD.
	(mw32_append_composite_glyph): Ditto.
	(mw32_produce_image_glyph): Ditto.
	(mw32_append_stretch_glyph): Ditto.
	(mw32_draw_glyphs): Ditto.

	* lisp.h: Update extern declaration for `safe_copy'.

	* frame.h (FRAME_COLUMN_WIDTH): New macro.

	* dispextern.h (struct glyph_matrix): Rename members:
	window_left_x -> window_left_col and window_top_y ->
	window_top_line.

2004-09-06  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (IT_OVERFLOW_NEWLINE_INTO_FRINGE): New macro from Emacs
	CVS HEAD.
	(move_it_in_display_line_to): Sync up with Emacs CVS HEAD.

2004-09-05  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.c (fringe_bitmap_type): Renamed from bitmap_type.

2004-09-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.h: Rename some variables: left -> left_col, top ->
	top_line, height -> total_lines, width -> total_cols,
	left_margin_width -> left_margin_cols, right_margin_width ->
	right_margin_cols, orig_height -> orig_total_lines and orig_top ->
	orig_top_line.

	* buffer.c: Ditto.

	* buffer.h: Ditto.

	* dispextern.h: Ditto.

	* dispnew.c: Ditto.

	* frame.c: Ditto.

	* frame.h: Ditto.

	* indent.c: Ditto.

	* keyboard.c: Ditto.

	* mw32fns.c: Ditto.

	* mw32menu.c: Ditto.

	* mw32term.c: Ditto.

	* mw32term.h: Ditto.

	* window.c: Ditto.

	* window.h: Ditto.

	* xdisp.c: Ditto.

2004-09-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keymap.c (Fcurrent_active_maps): New primitive function from
	Emacs CVS HEAD.
	(Fwhere_is_internal): Sync up with Emacs CVS HEAD.
	(syms_of_keymap): Define Fcurrent_active_maps().

	* doc.c (Fsubstitute_command_keys): Update the arguments for
	Fwhere_is_internal().

	* keyboard.c (parse_menu_item): Ditto.
	(Fexecute_extended_command): Ditto.

	* lisp.h: Ditto.

2004-09-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* makefile.nt (LINK_FLAGS): Remove mocklisp.obj.

	* makefile.meadow.w32-in (FULL_LINK_FLAGS): Remove mocklisp.$(O).

	* mocklisp.c: Removed.

	* mocklisp.h: Removed.

	* eval.c: Remove `Qmocklisp_arguments', `Vmocklisp_arguments' and
	`Qmocklisp'.
	(Fprogn): Sync up with Emacs CVS HEAD.
	(Fwhile): Ditto.
	(Feval): Ditto.
	(Ffuncall): Remove codes on mocklisp.
	(funcall_lambda): Sync up with Emacs CVS HEAD.
	(syms_of_eval): Don't initialize `Qmocklisp_arguments',
	`Vmocklisp_arguments' and `Qmocklisp'.

	* emacs.c (main): Don't call syms_of_mocklisp().

	* doc.c (Fdocumentation): Remove codes on mocklisp.

	* data.c (wrong_type_argument): Ditto.

	* callint.c: Don't include "mocklisp.h".
	(Fcall_interactively): Remove codes on mocklisp.

2004-09-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xterm.c (x_after_update_window_line): Sync up with Emacs CVS
	HEAD.

	* xdisp.c (redisplay_window): Sync up with Emacs CVS HEAD.

	* window.h (WINDOW_LEFT_FRINGE_WIDTH): New macro.
	(WINDOW_RIGHT_FRINGE_WIDTH): Ditto.

	* window.c (enum window_part): Removed.

	* mw32term.c (enum fringe_bitmap_type): Rename `NO_BITMAP' to
	`NO_FRINGE_BITMAP'.
	(mw32i_after_update_window_line): Sync up with Emacs CVS HEAD.
	(mw32_draw_window_fringes): Ditto.
	(draw_window_fringes): New function.
	(update_window_fringes): New function from Emacs CVS HEAD.

	* frame.h: New extern declaration for `Qleft', `Qright', `Qtop'
	and `Qbox'.

	* dispnew.c (row_equal_p): Consider `redraw_fringe_bitmaps_p'.
	(update_window_line): Ditto.
	(scrolling_window): Ditto.

	* dispextern.h (enum window_part): Moved here from window.c
	(FRINGE_ID_BITS): New macro.
	(FACE_ID_BITS): Ditto.
	(struct glyph_row): Sync up with Emacs CVS HEAD.

	* buffer.h (struct buffer): New member variable.

	* buffer.c (syms_of_buffer): New Lisp variable,
	default-indicate-buffer-boundaries and indicate-buffer-boundaries.
	Update docstring.

2004-09-04  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (cursor_type_changed): New variable.
	(redisplay_internal): Consider `cursor_type_changed'.
	(compute_window_start_on_continuation_line): Sync up with Emacs
	CVS HEAD.
	(try_cursor_movement): Ditto.
	(set_vertical_scroll_bar): New function from Emacs CVS HEAD.
	(redisplay_window): Sync up with Emacs CVS HEAD.
	(try_window_reusing_current_matrix): Ditto.
	(try_window_id): Ditto.

	* window.h (WINDOW_XFRAME): New macro.
	(WINDOW_TOTAL_COLS): Ditto.
	(WINDOW_HAS_VERTICAL_SCROLL_BAR): Ditto.
	(WINDOW_MODE_LINE_HEIGHT): Ditto.
	(WINDOW_HEADER_LINE_HEIGHT): Ditto.

	* dispextern.h (struct redisplay_interface): Rename
	`clear_mouse_face' to `clear_window_mouse_face'.

	* xdisp.c (make_cursor_line_fully_visible): Sync up with Emacs CVS
	HEAD.
	(try_scrolling): Ditto.
	(redisplay_window): Partially sync up with Emacs CVS HEAD.

	* window.h (WINDOW_TOTAL_LINES): New macro.

	* lisp.h (MOST_NEGATIVE_FIXNUM): New macro from Emacs CVS HEAD.
	(MOST_POSITIVE_FIXNUM): Ditto.

2004-08-29  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_encode_text_prepare): Don't set src_multibyte
	and dst_multibyte true.

2004-08-28  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* syntax.c (describe_syntax): Removed.
	(Finternal_describe_syntax_value): New function from Emacs VCS
	HEAD.
	(describe_syntax_1): Removed.
	(Fdescribe_syntax): Ditto.
	(Fparse_partial_sexp): Sync up with Emacs CVS HEAD.
	(arse_sexp_lookup_properties): Update docstring.
	(open_paren_in_column_0_is_defun_start): Ditto.
	(syms_of_syntax): Removed the definition of Fdescribe_syntax().
	(syms_of_syntax): New primitive function,
	internal_describe_syntax_value().

	* lisp.h (Fkey_description): Fix the number of the arguments for
	Fkey_description().
	(describe_vector): Remove the external definition.

	* keymap.c (Fdefine_key): Fix the arguments for
	Fkey_description().
	(Fkey_description): Sync up with Emacs CVS HEAD.
	(describe_map_tree): Fix the arguments for
	Fkey_description().
	(describe_translation): Ditto.
	(describe_map): Sync up with Emacs CVS HEAD.
	(describe_vector_princ): Ditto.
	(Fdescribe_vector): Ditto.
	(describe_vector): Ditto.

	* keyboard.c (parse_menu_item): Fix the arguments for
	Fkey_description().
	(Fexecute_extended_command): Ditto.

	* doc.c (Fsubstitute_command_keys): Fix the arguments for
	Fkey_description().

	* category.c (Fdefine_category): Update docstring.
	(Fcategory_docstring): Ditto.
	(Fget_unused_category): Ditto.
	(Fset_category_table): Ditto.
	(Fcategory_set_mnemonics): Ditto.
	(Fmodify_category_entry): Ditto.
	(describe_category): Removed.
	(describe_category_1): Ditto.
	(Fdescribe_categories): Ditto.
	(syms_of_category): Remove the definition of
	Fdescribe_categories().

	* callint.c (Fcall_interactively): Fix the arguments for
	Fkey_description().

2004-08-27  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* minibuf.c (min): Removed.
	(Qcase_fold_search): New Lisp object.
	(Fminibufferp): New primitive function.
	(Fminibuffer_prompt_end): Ditto.
	(Fminibuffer_contents): Ditto.
	(Fminibuffer_contents_no_properties): Ditto.
	(Fdelete_minibuffer_contents): Ditto.
	(minibuffer_completion_contents): New function.
	(Ftry_completion): Sync up with Emacs CVS HEAD.
	(Fall_completions): Ditto.
	(Fcompleting_read): Ditto.
	(Ftest_completion): Renamed from test_completion() and sync up
	with Emacs CVS HEAD.
	(Fassoc_string): Renamed from assoc_for_completion() and sync up
	with Emacs CVS HEAD.
	(Fminibuffer_complete): Sync up with Emacs CVS HEAD.
	(Fminibuffer_complete_and_exit): Ditto.
	(Fminibuffer_complete_word): Ditto.
	(Fdisplay_completion_list): Ditto.
	(Fminibuffer_completion_help): Ditto.
	(temp_echo_area_glyphs): Ditto.
	(temp_echo_area_glyphs): Ditto.
	(syms_of_minibuf): Initialize `Qcase_fold_search'.
	(syms_of_minibuf): Entry new primitive functions.

2004-08-26  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.c (mw32_message_loop): Set frame to
	dpyinfo->mouse_face_mouse_frame when WM_MOUSEMOVE is received.

2004-08-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* keymap.c (Fdescribe_buffer_bindings): Renamed from
	Fdescribe_bindings_internal() and synced up with Emacs CVS HEAD.

2004-08-23  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Makefile.c: Remove redundant spaces at end of line.

	* alloc.c: Ditto.

	* atimer.c: Ditto.

	* atimer.h: Ditto.

	* blockinput.h: Ditto.

	* buffer.c: Ditto.

	* buffer.h: Ditto.

	* bytecode.c: Ditto.

	* callint.c: Ditto.

	* callproc.c: Ditto.

	* casetab.c: Ditto.

	* category.c: Ditto.

	* category.h: Ditto.

	* ccl.c: Ditto.

	* ccl.h: Ditto.

	* charset.c: Ditto.

	* cm.c: Ditto.

	* cmds.c: Ditto.

	* coding.c: Ditto.

	* composite.c: Ditto.

	* composite.h: Ditto.

	* data.c: Ditto.

	* dired.c: Ditto.

	* dispextern.h: Ditto.

	* dispnew.c: Ditto.

	* doc.c: Ditto.

	* dosfns.c: Ditto.

	* ecrt0.c: Ditto.

	* editfns.c: Ditto.

	* emacs.c: Ditto.

	* eval.c: Ditto.

	* fileio.c: Ditto.

	* filelock.c: Ditto.

	* floatfns.c: Ditto.

	* fns.c: Ditto.

	* fontset.c: Ditto.

	* fontset.h: Ditto.

	* frame.c: Ditto.

	* frame.h: Ditto.

	* gmalloc.c: Ditto.

	* hftctl.c: Ditto.

	* indent.c: Ditto.

	* indent.h: Ditto.

	* insdel.c: Ditto.

	* intervals.c: Ditto.

	* keyboard.c: Ditto.

	* keyboard.h: Ditto.

	* keymap.c: Ditto.

	* lisp.h: Ditto.

	* lread.c: Ditto.

	* macros.c: Ditto.

	* marker.c: Ditto.

	* minibuf.c: Ditto.

	* msdos.c: Ditto.

	* mw32atimer.c: Ditto.

	* mw32bdf.c: Ditto.

	* mw32bdf.h: Ditto.

	* mw32clpbd.c: Ditto.

	* mw32dl.c: Ditto.

	* mw32dl.h: Ditto.

	* mw32fns.c: Ditto.

	* mw32font.c: Ditto.

	* mw32font.h: Ditto.

	* mw32ime.c: Ditto.

	* mw32mci.h: Ditto.

	* mw32mem.c: Ditto.

	* mw32menu.c: Ditto.

	* mw32oime.c: Ditto.

	* mw32reg.c: Ditto.

	* mw32sync.h: Ditto.

	* mw32term.c: Ditto.

	* mw32term.h: Ditto.

	* print.c: Ditto.

	* print1.c: Ditto.

	* process.c: Ditto.

	* puresize.h: Ditto.

	* ralloc.c: Ditto.

	* regex.c: Ditto.

	* region-cache.c: Ditto.

	* region-cache.h: Ditto.

	* scroll.c: Ditto.

	* search.c: Ditto.

	* sound.c: Ditto.

	* sunfns.c: Ditto.

	* syntax.c: Ditto.

	* syntax.h: Ditto.

	* sysdep.c: Ditto.

	* syssignal.h: Ditto.

	* systime.h: Ditto.

	* systty.h: Ditto.

	* syswait.h: Ditto.

	* term.c: Ditto.

	* termhooks.h: Ditto.

	* textprop.c: Ditto.

	* tparam.c: Ditto.

	* undo.c: Ditto.

	* unexaix.c: Ditto.

	* unexalpha.c: Ditto.

	* unexconvex.c: Ditto.

	* unexec.c: Ditto.

	* unexelf.c: Ditto.

	* unexelf1.c: Ditto.

	* unexenix.c: Ditto.

	* unexhp9k800.c: Ditto.

	* unexnext.c: Ditto.

	* unexsni.c: Ditto.

	* unexsunos4.c: Ditto.

	* unexw32.c: Ditto.

	* vm-limit.c: Ditto.

	* w32.c: Ditto.

	* w32.h: Ditto.

	* w32bdf.c: Ditto.

	* w32bdf.h: Ditto.

	* w32console.c: Ditto.

	* w32heap.c: Ditto.

	* w32inevt.c: Ditto.

	* w32inevt.h: Ditto.

	* w32menu.c: Ditto.

	* w32proc.c: Ditto.

	* w32reg.c: Ditto.

	* w32term.h: Ditto.

	* w32xfns.c: Ditto.

	* widget.c: Ditto.

	* widgetprv.h: Ditto.

	* window.c: Ditto.

	* window.h: Ditto.

	* xdisp.c: Ditto.

	* xfns.c: Ditto.

	* xmenu.c: Ditto.

	* xterm.c: Ditto.

	* xterm.h: Ditto.

	* m/7300.h: Ditto.

	* m/alliant-2800.h: Ditto.

	* m/alliant.h: Ditto.

	* m/alliant1.h: Ditto.

	* m/alliant4.h: Ditto.

	* m/alpha.h: Ditto.

	* m/altos.h: Ditto.

	* m/amdahl.h: Ditto.

	* m/apollo.h: Ditto.

	* m/att3b.h: Ditto.

	* m/celerity.h: Ditto.

	* m/convex.h: Ditto.

	* m/cydra5.h: Ditto.

	* m/delta.h: Ditto.

	* m/delta88k.h: Ditto.

	* m/dpx2.h: Ditto.

	* m/dual.h: Ditto.

	* m/elxsi.h: Ditto.

	* m/gec63.h: Ditto.

	* m/gould-np1.h: Ditto.

	* m/gould.h: Ditto.

	* m/hp800.h: Ditto.

	* m/hp9000s300.h: Ditto.

	* m/i860.h: Ditto.

	* m/ibm370aix.h: Ditto.

	* m/ibmps2-aix.h: Ditto.

	* m/ibmrs6000.h: Ditto.

	* m/ibmrt-aix.h: Ditto.

	* m/ibmrt.h: Ditto.

	* m/ibms390.h: Ditto.

	* m/intel386.h: Ditto.

	* m/irist.h: Ditto.

	* m/is386.h: Ditto.

	* m/isi-ov.h: Ditto.

	* m/masscomp.h: Ditto.

	* m/mega68.h: Ditto.

	* m/mg1.h: Ditto.

	* m/mips-siemens.h: Ditto.

	* m/mips.h: Ditto.

	* m/mips4.h: Ditto.

	* m/news-risc.h: Ditto.

	* m/news.h: Ditto.

	* m/nh3000.h: Ditto.

	* m/nh4000.h: Ditto.

	* m/ns16000.h: Ditto.

	* m/ns32000.h: Ditto.

	* m/nu.h: Ditto.

	* m/orion.h: Ditto.

	* m/orion105.h: Ditto.

	* m/plexus.h: Ditto.

	* m/pmax.h: Ditto.

	* m/powerpcle.h: Ditto.

	* m/pyramid.h: Ditto.

	* m/sequent-ptx.h: Ditto.

	* m/sequent.h: Ditto.

	* m/sparc.h: Ditto.

	* m/sps7.h: Ditto.

	* m/sr2k.h: Ditto.

	* m/stride.h: Ditto.

	* m/sun1.h: Ditto.

	* m/sun2.h: Ditto.

	* m/sun3-68881.h: Ditto.

	* m/sun3-fpa.h: Ditto.

	* m/sun3-soft.h: Ditto.

	* m/sun3.h: Ditto.

	* m/sun386.h: Ditto.

	* m/symmetry.h: Ditto.

	* m/tad68k.h: Ditto.

	* m/tahoe.h: Ditto.

	* m/tandem-s2.h: Ditto.

	* m/targon31.h: Ditto.

	* m/tek4300.h: Ditto.

	* m/tekxd88.h: Ditto.

	* m/template.h: Ditto.

	* m/tower32.h: Ditto.

	* m/tower32v3.h: Ditto.

	* m/ustation.h: Ditto.

	* m/vax.h: Ditto.

	* m/wicat.h: Ditto.

	* m/windowsnt.h: Ditto.

	* m/xps100.h: Ditto.

	* s/386bsd.h: Ditto.

	* s/aix4-1.h: Ditto.

	* s/bsd4-1.h: Ditto.

	* s/freebsd.h: Ditto.

	* s/hiuxmpp.h: Ditto.

	* s/hiuxwe2.h: Ditto.

	* s/hpux8.h: Ditto.

	* s/irix5-0.h: Ditto.

	* s/irix5-2.h: Ditto.

	* s/lynxos.h: Ditto.

	* s/ms-w32.h: Ditto.

	* s/netbsd.h: Ditto.

	* s/ptx.h: Ditto.

	* s/sco4.h: Ditto.

	* s/sco5.h: Ditto.

	* s/template.h: Ditto.

	* s/umax.h: Ditto.

	* s/vms.h: Ditto.

2004-08-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h (CHECK_STRING_OR_BUFFER): Sync up with Emacs CVS HEAD.
	(CHECK_LIST): Ditto.
	(CHECK_STRING): Ditto.
	(CHECK_CONS): Ditto.
	(CHECK_SYMBOL): Ditto.
	(CHECK_CHAR_TABLE): Ditto.
	(CHECK_VECTOR): Ditto.
	(CHECK_VECTOR_OR_CHAR_TABLE): Ditto.
	(CHECK_BUFFER): Ditto.
	(CHECK_WINDOW): Ditto.
	(CHECK_LIVE_WINDOW): Ditto.
	(CHECK_PROCESS): Ditto.
	(CHECK_NUMBER): Ditto.
	(CHECK_NATNUM): Ditto.
	(CHECK_MARKER): Ditto.
	(CHECK_NUMBER_COERCE_MARKER): Ditto.
	(CHECK_FLOAT): Ditto.
	(CHECK_NUMBER_OR_FLOAT): Ditto.
	(CHECK_NUMBER_OR_FLOAT_COERCE_MARKER): Ditto.
	(CHECK_OVERLAY): Ditto.

	* category.h (CHECK_CATEGORY): Ditto.
	(CHECK_CATEGORY_SET): Ditto.

	* abbrev.c: Fix the arguments for CHECK_*().

	* alloc.c: Ditto.

	* buffer.c: Ditto.

	* bytecode.c: Ditto.

	* callint.c: Ditto.

	* callproc.c: Ditto.

	* casefiddle.c: Ditto.

	* category.c: Ditto.

	* ccl.c: Ditto.

	* charset.c: Ditto.

	* cmds.c: Ditto.

	* coding.c: Ditto.

	* composite.c: Ditto.

	* data.c: Ditto.

	* dired.c: Ditto.

	* dispnew.c: Ditto.

	* doc.c: Ditto.

	* dosfns.c: Ditto.

	* editfns.c: Ditto.

	* emacs.c: Ditto.

	* eval.c: Ditto.

	* fileio.c: Ditto.

	* filelock.c: Ditto.

	* floatfns.c: Ditto.

	* fns.c: Ditto.

	* fontset.c: Ditto.

	* frame.c: Ditto.

	* indent.c: Ditto.

	* keyboard.c: Ditto.

	* keymap.c: Ditto.

	* lread.c: Ditto.

	* macros.c: Ditto.

	* marker.c: Ditto.

	* minibuf.c: Ditto.

	* mocklisp.c: Ditto.

	* msdos.c: Ditto.

	* mw32clpbd.c: Ditto.

	* mw32dl.c: Ditto.

	* mw32fns.c: Ditto.

	* mw32font.c: Ditto.

	* mw32ime.c: Ditto.

	* mw32menu.c: Ditto.

	* mw32reg.c: Ditto.

	* mw32term.c: Ditto.

	* print.c: Ditto.

	* print1.c: Ditto.

	* process.c: Ditto.

	* search.c: Ditto.

	* sunfns.c: Ditto.

	* syntax.c: Ditto.

	* textprop.c: Ditto.

	* undo.c: Ditto.

	* w16select.c: Ditto.

	* w32.c: Ditto.

	* w32console.c: Ditto.

	* w32fns.c: Ditto.

	* w32menu.c: Ditto.

	* w32proc.c: Ditto.

	* w32select.c: Ditto.

	* window.c: Ditto.

	* xdisp.c: Ditto.

	* xfaces.c: Ditto.

	* xfns.c: Ditto.

	* xmenu.c: Ditto.

	* xselect.c: Ditto.

2004-08-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* abbrev.c: Renew the style of DOCSTRING in DEFVAR_*().

	* alloc.c: Ditto.

	* buffer.c: Ditto.

	* bytecode.c: Ditto.

	* callint.c: Ditto.

	* callproc.c: Ditto.

	* category.c: Ditto.

	* ccl.c: Ditto.

	* charset.c: Ditto.

	* cmds.c: Ditto.

	* coding.c: Ditto.

	* composite.c: Ditto.

	* dired.c: Ditto.

	* dispnew.c: Ditto.

	* doc.c: Ditto.

	* dosfns.c: Ditto.

	* editfns.c: Ditto.

	* emacs.c: Ditto.

	* eval.c: Ditto.

	* fileio.c: Ditto.

	* filelock.c: Ditto.

	* fns.c: Ditto.

	* fontset.c: Ditto.

	* frame.c: Ditto.

	* indent.c: Ditto.

	* insdel.c: Ditto.

	* keyboard.c: Ditto.

	* keymap.c: Ditto.

	* lread.c: Ditto.

	* macros.c: Ditto.

	* marker.c: Ditto.

	* minibuf.c: Ditto.

	* msdos.c: Ditto.

	* mw32clpbd.c: Ditto.

	* mw32fns.c: Ditto.

	* mw32font.c: Ditto.

	* mw32ime.c: Ditto.

	* mw32menu.c: Ditto.

	* mw32oime.c: Ditto.

	* mw32term.c: Ditto.

	* print.c: Ditto.

	* print1.c: Ditto.

	* process.c: Ditto.

	* syntax.c: Ditto.

	* sysdep.c: Ditto.

	* term.c: Ditto.

	* textprop.c: Ditto.

	* w16select.c: Ditto.

	* w32.c: Ditto.

	* w32console.c: Ditto.

	* w32fns.c: Ditto.

	* w32menu.c: Ditto.

	* w32proc.c: Ditto.

	* w32select.c: Ditto.

	* w32term.c: Ditto.

	* window.c: Ditto.

	* xdisp.c: Ditto.

	* xfaces.c: Ditto.

	* xfns.c: Ditto.

	* xmenu.c: Ditto.

	* xselect.c: Ditto.

	* xterm.c: Ditto.

2004-08-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* window.c (Fwindow_vscroll): Sync up with Emacs CVS HEAD.
	(Fset_window_vscroll): Ditto.

	* abbrev.c: Renew the style of DOCSTRING in DEFUN().

	* abbrev.c: Ditto.

	* alloc.c: Ditto.

	* buffer.c: Ditto.

	* bytecode.c: Ditto.

	* callint.c: Ditto.

	* callproc.c: Ditto.

	* casefiddle.c: Ditto.

	* casetab.c: Ditto.

	* category.c: Ditto.

	* ccl.c: Ditto.

	* charset.c: Ditto.

	* cmds.c: Ditto.

	* coding.c: Ditto.

	* composite.c: Ditto.

	* data.c: Ditto.

	* dired.c: Ditto.

	* dispnew.c: Ditto.

	* doc.c: Ditto.

	* dosfns.c: Ditto.

	* editfns.c: Ditto.

	* emacs.c: Ditto.

	* eval.c: Ditto.

	* fileio.c: Ditto.

	* filelock.c: Ditto.

	* floatfns.c: Ditto.

	* fns.c: Ditto.

	* fontset.c: Ditto.

	* frame.c: Ditto.

	* indent.c: Ditto.

	* insdel.c: Ditto.

	* keyboard.c: Ditto.

	* keymap.c: Ditto.

	* lisp.h: Ditto.

	* lread.c: Ditto.

	* macros.c: Ditto.

	* marker.c: Ditto.

	* minibuf.c: Ditto.

	* mocklisp.c: Ditto.

	* msdos.c: Ditto.

	* mw32clpbd.c: Ditto.

	* mw32dl.c: Ditto.

	* mw32fns.c: Ditto.

	* mw32font.c: Ditto.

	* mw32ime.c: Ditto.

	* mw32mci.c: Ditto.

	* mw32menu.c: Ditto.

	* mw32oime.c: Ditto.

	* mw32reg.c: Ditto.

	* mw32term.c: Ditto.

	* print.c: Ditto.

	* print1.c: Ditto.

	* process.c: Ditto.

	* search.c: Ditto.

	* sound.c: Ditto.

	* sunfns.c: Ditto.

	* syntax.c: Ditto.

	* term.c: Ditto.

	* textprop.c: Ditto.

	* undo.c: Ditto.

	* w16select.c: Ditto.

	* w32.c: Ditto.

	* w32console.c: Ditto.

	* w32fns.c: Ditto.

	* w32menu.c: Ditto.

	* w32proc.c: Ditto.

	* w32select.c: Ditto.

	* window.c: Ditto.

	* window.h: Ditto.

	* xdisp.c: Ditto.

	* xfaces.c: Ditto.

	* xfns.c: Ditto.

	* xmenu.c: Ditto.

	* xselect.c: Ditto.

2004-08-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xfns.c (x_create_bitmap_from_file): Fix the arguments for
	openp().
	(x_find_image_file): Ditto.

	* w32fns.c (x_create_bitmap_from_file): Ditto.
	(x_find_image_file): Ditto.

	* mw32fns.c (x_create_bitmap_from_file): Ditto.
	(mw32_find_image_file): Ditto.

	* w32.c (check_windows_init_file): Ditto.

	* sound.c (Fplay_sound): Ditto.

	* process.c (Fstart_process): Ditto.

	* lisp.h: Ditto.

	* emacs.c (init_cmdargs): Ditto.

	* w32proc.c: include <sys/file.h>.
	(sys_spawnve): Fix the arguments for openp().

	* sysdep.c (min): Removed.

	* mw32menu.c (min): Ditto.
	(max): Ditto.

	* lread.c (Fload): Fix the arguments for openp().
	(Flocate_file_internal): Ditto.
	(openp): Removed.
	(openp2): Renamed to openp().

	* callproc.c (max): Removed.
	(Vexec_suffixes): New Lisp object.
	(synch_process_termsig): New variable.
	(Fcall_process): Sync up with Emacs CVS HEAD.
	(syms_of_callproc): Initialize Vexec_suffixes.

2004-08-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lisp.h: New difinitions of min and max.

	* w32heap.h: Remove undifinitions of min and max.

	* w32gui.h: Ditto.

	* w32.c: Remove difinitions of min and max.

	* lread.c: Ditto.

	* keyboard.c: Ditto.

2004-08-21  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* lread.c (Vload_suffixes): New Lisp object.
	(default_suffixes): Ditto.
	(Flocate_file_internal): New function from Emacs CVS HEAD.
	(openp2): Duplicated function from Emacs CVS HEAD. This should be
	renamed to openp().
	(syms_of_lread): Initialize Vload_suffixes and default_suffixes.

	* lisp.h (CHECK_STRING_CAR): New macro from Emacs CVS HEAD.
	(SPECPDL_INDEX): Ditto.
	(GCPRO6): Ditto.

	* keymap.c (Qremap): New Lisp object.
	(command_remapping_vector): Ditto.
	(Fcommand_remapping): New function from Emacs CVS HEAD.
	(Fkey_binding): Sync up with Emacs CVS HEAD.
	(syms_of_keymap): Initialize Qremap and command_remapping_vector.

	* keyboard.c (parse_menu_item): Fix the arguments for
	Fkey_binding().

	* fileio.c (Fread_file_name): Sync up with Emacs CVS HEAD.

	* emacs.c (empty_string): New variable.
	(syms_of_emacs): Initialize the variable above.

	* data.c (Fsubr_name): New function from Emacs CVS HEAD.

	* callint.c (Fcall_interactively): Fix the arguments for
	Fread_file_name().

	* buffer.c (Fbuffer_local_value): New function from Emacs CVS
	HEAD.

	* makefile.nt (install): Don't install fns-*.el.

	* makefile.meadow.w32-in (bootstrap-temacs): Increase
	PDUMP_OBJECT_ARRAY_SIZE up to 208000.
	(install): Don't install fns-*.el.

2004-08-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32i_update_window_end): Draw fringes.
	(mw32_draw_row_bitmaps): Don't draw fringes.
	(mw32_draw_window_fringes): New function from Emacs CVS HEAD.

2004-08-14  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* minibuf.c (read_minibuf): Set minibuf_selected_window on first
	entry to minibuffer or on entry from a non-minibuffer window.
	UNGCPRO before returning. These codes are imported from emacs CVS
	HEAD.

2004-08-14  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_image_foreground): Draw an image with
	offscreen rendering.

2004-08-13  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* callint.c (Fcall_interactively): Save and restore Vthis_command,
	real_this_command, and current_kbd->Vlast_command. These codes are
	imported from Emacs CVS HEAD.

2004-08-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32clpbd.c (last_clipboard_text): New variable form Emacs CVS
	HEAD.
	(clipboard_storage_size): Ditto.
	(Fw32_set_clipboard_data): Stash away the data we are about to put
	into the clipboard. These codes are imported from Emacs CVS HEAD.
	(Fw32_get_clipboard_data): If the text in clipboard is identical
	to what we put there last time, pretend there's no data in the
	clipboard. These codes are imported from Emacs CVS HEAD.

2004-08-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (Fx_display_color_cells): New function from Emacs CVS
	HEAD.
	(syms_of_mw32fns): Define the above function.

2004-08-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (Fmw32_get_image_magick_extensions): Use Vimage_types
	instead of magick_get_magick_list() to avoid initialization of
	MagickInfos.

2004-08-10  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32term.h (WM_EMACS_SETFOREGROUND): New define.
	(SPI_GETFOREGROUNDLOCKTIMEOUT): Ditto.
	(SPI_SETFOREGROUNDLOCKTIMEOUT): Ditto.

	* mw32term.c (mw32_raise_frame): Delegate the message thread to
	call SetForegroundWindow().

	* mw32fns.c (mw32_WndProc<WM_EMACS_SETFOREGROUND>): New message
	handling.

2004-08-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (Fmw32_get_image_magick_extensions): New function.

2004-08-09  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* makefile.meadow.w32-in ($(DOC)): New target.

2004-08-07  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (pget_image_magick_t): New type definition.
	(pget_image_magick): New static variable.
	(magick_get_image_magick): New function.
	(Fmw32_get_image_magick): Ditto.
	(syms_of_mw32fns): Define the above function.

2004-07-25  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (MW32_frame_up_to_date): Block other threads in the
	process of mouse hightlighting.

2004-07-24  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_set_layout): Comment out entire codes, because
	no layout information is used currently.
	(Fw32_get_font_info): Fix a typo.

2004-07-24  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_set_windows_logical_font): If the font width is
	not desired, adjust `lfWidth' and recreate it later.
	(mw32_convert_lface_to_LOGFONT): Set lfHeight to positive value.
	(mw32_initialize_default_logfont): The height is explicitly set
	here to avoid the annoying variable font width.

2004-07-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_initialize_default_logfont): Undo the last
	change.

2004-07-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_initialize_default_logfont): Set the default
	height to 16 and the default width to 8.

	* mw32fns.c (DEFAULT_COLS): Set the default number of columns to
	80.

2004-07-18  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_draw_box_rect): Don't fill the center of a box.

	* xfaces.c(Qmode_line_inactive): New face.
	(realize_basic_faces): Realize `Qmode_line_inactive'.
	(syms_of_xfaces): Ditto.

	* xdisp.c (window_box_height): Sync up with Emacs CVS HEAD.
	(pos_visible_p): Ditto.
	(init_iterator): Ditto.
	(handle_face_prop): Ditto.
	(x_consider_frame_title): Ditto.
	(display_mode_lines): Ditto.
	(display_mode_line): Ditto.
	(mode_line_proptrans_alist): New variable.
	(mode_line_string_list): Ditto.
	(mode_line_string_face): Ditto.
	(mode_line_string_face_prop): Ditto.
	(display_mode_element): Sync up with Emacs CVS HEAD.
	(store_mode_line_string): New function from Emacs CVS HEAD.
	(Fformat_mode_line): Ditto.

	* window.h: New extern declaration for `minibuf_selected_window'.

	* window.c: New Lisp Object `minibuf_selected_window' and
	`mode_line_in_non_selected_windows'.
	(display_buffer_1): Sync up with Emacs CVS HEAD.
	(Fminibuffer_selected_window): New function from with Emacs CVS
	HEAD.
	(struct save_window_data): New member `minibuf_selected_window'.
	(Fset_window_configuration): Sync up with Emacs CVS HEAD.
	(Fcurrent_window_configuration): Ditto.
	(compare_window_configurations): Ditto.
	(syms_of_window): Initialize `minibuf_selected_window' and
	`mode-line-in-non-selected-windows'.

	* dispextern.h (CURRENT_MODE_LINE_FACE_ID_3): New macro from Emacs
	CVS HEAD.
	(CURRENT_MODE_LINE_FACE_ID): Sync up with Emacs CVS HEAD.
	(enum face_id): New element `MODE_LINE_INACTIVE_FACE_ID'.
	New extern declaration for `mode_line_in_non_selected_windows'.

2004-07-17  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32ime.c (mw32_get_ime_reconversionp_length): Don't move the
	point backward if the point is at the beginning of a line.
	(mw32_get_ime_reconversion_string): Ditto.

2004-07-16  KOBAYASHI Yasuhiro  <kobayays@otsukakj.co.jp>

	* mw32ime.c (mw32_get_ime_reconversion_length): Improve the way to
	guess the region around the point.
	(mw32_get_ime_reconversion_string): Ditto.

2004-07-16  KOBAYASHI Yasuhiro  <kobayays@otsukakj.co.jp>

	* mw32ime.c (mw32_get_ime_reconversion_string): Fix previous
	change and change the reconvert area from eol to end of the word.
	(mw32_get_ime_reconversion_string): Ditto.

2004-07-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.h: Tighten the condition for type definition of
	`RECONVERTSTRING'.

2004-07-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32bdf.c (mw32_BDF_TextOut): Free GDI resources before exiting.

2004-07-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (message_dolog): Unprotect lisp markers after they are
	freed.

2004-07-15  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32ime.c (mw32_get_ime_reconversion_length): Simplify redundant
	expression.
	(mw32_get_ime_reconversion_string): Ditto.

2004-07-15  KOBAYASHI Yasuhiro <kobayays@otsukakj.co.jp>

	* mw32term.h: Define some macros for IME reconversion.

	* mw32ime.c: Include "buffer.h".
	(mw32_get_ime_reconversion_length): New function.
	(mw32_get_ime_reconversion_string): Ditto.

	* mw32fns.c (mw32_WndProc<WM_IME_REQUEST>): New message handler
	for IME reconversion.

	* makefile.meadow.w32-in: Update dependancies.

	* makefile.nt: Ditto.

2004-07-10  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (mw32_set_frame_ime_font): Correct the argument for
	error().

2004-07-07  KOSEKI Yoshinori  <kose@meadowy.org>

	* Meadow 2.00 (KIKYOU) Release.

2004-07-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (default_logfont_courier_new): Abolished.
	(default_logfont_fixed_sys): Ditto.
	(mw32_enumerated_face_name): New static variable.
	(enumfont_callback): New function.
	(mw32_convert_lface_to_LOGFONT): Choose a suitable logfont with
	EnumFontFamiliesEx() if face family is not specified.
	(mw32_initialize_default_logfont): Initialize a logfont with the
	variable in the local scope.
	(mw32_default_logical_font_loader): Don't try `courier new' and
	`FixedSys'.
	(mw32font_set_frame_ime_font_by_llogfont): Call
	mw32_initialize_default_logfont().

2004-07-02  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* coding.c (find_safe_codings): Undo the last Change.
	(syms_of_coding): `Qchar_coding_system' has reverted to
	Emacs-21.1.

2004-06-26  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* coding.c (find_safe_codings): Sync up with Emacs CVS HEAD.
	(code_convert_region): Suppress compilation warnings.

2004-06-23  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c (mw32_set_frame_ime_font): Accept nil as default
	font.
	(mw32_WndProc<WM_EMACS_MODIFY_IME_FONT_PROP>): Use
	selected_frame but f of main thread as target frame.
	(Fx_create_frame): Revive ime-font of frame parameter.
	Use nil as default parameter of ime-font.

	* mw32font.c (mw32font_set_frame_ime_font_by_llogfont): Set
	fixedsys font when llf is nil. Set logical IME font into frame
	parameter.

2004-06-20  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_default_logical_font_loader): Release resources
	for a logical font if no suitable font is found.
	Normalize coding style.

2004-06-19  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32proc.c: Normalize coding style.

	* mw32ime.c: Ditto.

	* mw32fns.c: Ditto.

2004-06-18  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* w32proc.c (Fw32_get_locale_info): Decode the return value of
	GetLocaleInfo()

2004-06-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32bdf.c: Normalize coding style.

2004-06-13  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32bdf.c (mw32_free_bdf_font): Unmap `fontp->font' instead of
	`fontp->hfilemap'.

2004-06-12  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (window_box_height): Ensure that the window height
	should be greater than 0.

	* eval.c (Fsignal): Unblock the input if the current thread has
	blocked it.

2004-06-09  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_message_loop): Clear last_mouse_motion_frame
	when either WM_NCMOUSEMOVE or WM_MOUSELEAVE is received.

2004-06-07  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32fns.c (file_dialog_callback): Alter the behaviour of the
	dialog even when the system has finished arranging the controls.
	(Fmw32_file_dialog): Ditto.
	Use the dialog even if default_file_name is a directory.

2004-06-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* Merge changes from 2.00 branch.

2004-06-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_glyph_metric): Restore the hdc when
	GetCharABCWidths() fails.

2004-06-03  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_glyph_metric): Return an invalid character
	metric when GetCharABCWidths() fails.

2004-06-01  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* w32.c (init_w32system): Don't use w32_mule_clipboard_format to
	encode and decode clipboard string properly.

2004-05-31  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32clpbd.c (Fw32_get_clipboard_data): Ignore
	mw32_mule_clipboard_format if the coding-system is specified.

2004-05-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c: Normalize coding storing.

	* mw32font.c (mw32_set_windows_logical_font): Free the memory
	block for mw32_windows_font * when GetTextMetrics() fails.

2004-05-30  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32clpbd.c (Fw32_set_clipboard_data): Allocate a memory block
	for storing information about compositions.

2004-05-28  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c: Normalize coding style.

2004-05-27  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_glyph_metric): Handle errors from
	GetCharABCWidths().

2004-05-25  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32menu.c (name_is_separator): New function imported from
	w32menu.c.
	(add_menu_item): Detect a separator by calling name_is_separator.

2004-05-25  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c (imagemagick_read_color_table): Correct buffer
	size to allocate not to overrun the area.

2004-05-23  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c: Normalize coding style.

2004-05-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32font.c (mw32_set_layout): Remove workaround for the Mingw
	environment.

	* mw32fns.c (color_radix_change): Normalize coding style.
	(parse_XPM_color_symbols): Check name and color strictly.
	(define_imagemagick_type): Cast the argument to `void **' to
	suppress compilation warning.
	(XPM_read_blob_to_string): Modify the expression of memory size to
	allocate.
	(XPM_read_image): Use macro instead of magic number.

2004-05-22  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* alloc.c (pure_alloc): Sync up with Emacs-21.3.50.

2004-05-17  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (mw32i_update_window_begin): Totally reconstructed
	system caret handling.
	(mw32i_update_window_end): Ditto.
	(mw32_expose_frame): Ditto.
	(anticipate_overwrite_caret): Ditto.
	(mw32_draw_caret_cursor): Ditto.
	(mw32_draw_phys_cursor_glyph): Ditto.
	(mw32_erase_phys_cursor): Ditto.
	(mw32_display_and_set_cursor): Ditto.
	(mw32_draw_bar_cursor): Use macro to access frame parameter.

	* mw32term.h (frame_caret_state): Change enum items.
	(MW32_FRAME_CARET_BLOCKED): New macro.
	(MW32_FRAME_CARET_SHOWN): New macro.
	(MW32_FRAME_CARET_HEIGHT): New macro.
	(MW32_FRAME_CARET_ENABLED_P): Removed.
	(cursor_height): New variable.
	(cursor_blocked): New variable.

	* mw32fns.c (mw32_set_cursor_height): New function.
	(Qcursor_height): New symbol.
	(mw32_frame_parms<cursor-height>): New frame parameter.
	(mw32_set_cursor_height): New function.
	(mw32_set_cursor_type): Totally reconstructed system caret
	handling.
	(mw32_WndProc<WM_SETFOCUS>): Ditto.
	(mw32_WndProc<WM_KILLFOCUS>): Ditto.
	(mw32_WndProc<WM_IME_ENDCOMPOSITION>): Ditto.
	(mw32_WndProc<WM_EMACS_SETCARET>): Ditto.
	(Fx_create_frame): Initializing frame parameter cursor-height.
	(syms_of_mw32fns): Initializing symbol cursor-height.
	(mw32_create_tip_frame): Remove initialize for Qcursor_type.

2004-05-13  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* xdisp.c (window_box_width): Ensure to avoid negative width.

2004-05-11  Masayuki FUJII  <boochang@m4.kcn.ne.jp>

	* mw32fns.c (pacquire_string_t): New type definition.
	(pacquire_string): New static variable.
	(magick_acquire_string): New function.
	(initialize_imagemagick): Substitute strings replicated with
	magick_acquire_string().

2004-05-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (initialize_imagemagick): Purge xstrdup().

2004-05-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (resolve_imagemagick_api): Correct the function name
	for prelinquish_magick_memory.

2004-05-11  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32fns.c (IMAGE_MAGICK_REQUIRE_VERSION): Change the supported
	version of ImageMagick.
	(pget_magick_list_t): New type definition.
	(prelinquish_magick_memory_t): Ditto.
	(pget_magick_list): New static variable.
	(prelinquish_magick_memory): Ditto.
	(magick_get_magick_list): New function.
	(magick_relinquish_magick_memory): Ditto.
	(define_imagemagick_type): Use magick_get_magick_list() instead of
	magick_get_magick_info().

	* mw32magick.h: Rewrite for ImageMagick 6.0.1.

2004-05-05  MIYOSHI Masanori  <miyoshi@meadowy.org>

	* mw32term.c (mw32_process_tool_bar_click): New argument,
	modifiers.
	(struct mw32_tool_bar_parm): New structure.
	(mw32_process_main_thread_message): Get a frame and modifiers out
	of wParm and use them.
	(mw32_message_loop): Get modifiers and give them the the main
	thread.
	Normalize coding style.

2004-04-29  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.h (FRAME_HDC_VALID_P): New macro.

	* mw32term.c (mw32_display_and_set_cursor): Check if HDC of the
	frame is valid.

	* mw32fns.c (mw32m_new_focus_frame): Undo the last change.

2004-04-25  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (mw32m_new_focus_frame): Don't call
	mw32_new_focus_frame() for a null frame.
	Normalize coding style.

2004-04-15  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_get_ime_font_property): Reset the height
	property of the IME font regardless of `lf.lfHeight'.

2004-04-09  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (get_face_height): New function to obtain height
	property out of a face or a list of faces.
	(mw32_get_ime_font_property): Call get_face_height().

2004-03-21  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* xdisp.c (try_window): Sync up with Emacs-21.3.50.
	(display_line): Ditto.

2004-03-09  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.h (WM_EMACS_GET_IME_FONT_PROP): New define.
	(WM_EMACS_MODIFY_IME_FONT_PROP): Ditto.

	* mw32term.c (mw32_get_ime_font_property): New function.
	(mw32_process_main_thread_message<WM_EMACS_GET_IME_FONT_PROP>):
	New message handling.

	* mw32fns.c (mw32_WndProc<WM_IME_STARTCOMPOSITION>): Delegate the
	main thread to derive a face under the cursor.
	(mw32_WndProc<WM_EMACS_MODIFY_IME_FONT_PROP>): New message
	handling.

2004-03-03  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.h (struct mw32_output): New member `ime_logfont'.

	* mw32font.h (mw32_initialize_default_logfont): New declaration.

	* mw32font.c (mw32_initialize_default_logfont): New function.

	* mw32fns.c (mw32_WndProc<WM_IME_STARTCOMPOSITION>): Scale font
	size for IME.
	(mw32_WndProc<WM_MULE_IMM_SET_COMPOSITION_FONT>): Register the
	logfont for the later use.
	(Fx_create_frame): Initialize the logfont for IME.

2004-02-21  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (default_logfont_courier_new): New variable.
	(default_logfont_fixed_sys): Renamed from default_logfont.
	(mw32_convert_lface_to_LOGFONT): Don't initialize plogf.
	(mw32_default_logical_font_loader): First try `courier new' and
	next try `FixedSys'.

2004-02-17  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* emacs.c (main): Don't call init_syntax_once() when Emacs has
	already initialized.

2004-01-22  Hideyuki SHIRAI  <shirai@meadowy.org>

	* fileio.c (Fcopy_file): Ensure file is writable while its
	modified time is set.

2004-01-09  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32font (mw32_set_encoding_to_lf): set font_unit_byte to 2
	when encoding.type is ENCODIF_SHIFTJIS.

2004-01-08  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term (expose_frame): Erase system caret before updating
	frame. This procedure is moved from window.c (delete_window)
	into more appropriate place to cover the other situations.

	* window.c (delete_window): Ditto.

2004-01-07  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (load_in_memory_image): Invert pixel values of bitmap.

2004-01-03  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.h (mw32_output<frame_change_state>):
	Redefined it as char.
	(mw32_output<ime_composition_state>): Ditto.
	(mw32_output<wait_for_wm>): Removed.

	* mw32fns.c (Qwait_for_wm): Removed.  It has not been used.
	(Fx_create_frame): Don't touch waitForWM property.
	(syms_of_mw32fns): Don't initialize Qwait_for_wm.

2004-01-03  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_IME_STARTCOMPOSITION>):
	Set ime_composition_state.
	(mw32_WndProc<WM_IME_ENDCOMPOSITION>): Reset ime_composition_state.

	* mw32term.c (mw32_display_and_set_cursor): Update IME composition
	window unless ime_composition_state is zero.

	* mw32term.h (mw32_output<ime_composition_state>): New member.

2004-01-02  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* makefile.meadow.w32-in (bootstrap-temacs): Increase
	PDUMP_OBJECT_ARRAY_SIZE up to 203622.

2003-12-29  MIYASHITA Hisashi  <himi@li18nux.org>

	* mw32fns.c (mw32_WndProc<WM_IME_STARTCOMPOSITION>):
	Update the IME composition window position.

	* mw32term.c (mw32_display_and_set_cursor): Disabled because
	eager IME composition window position update is not used.

2003-12-29  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* Sync up with Emacs-21.3.

2003-12-28  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* Sync up with Emacs-21.2.

2003-12-26  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (mw32_handle_tool_bar_click): That was removed because
	tool bar event processing was delegated to the main thread so that
	mw32_process_tool_bar_click() deal with it.
	(mw32_process_tool_bar_click): New function.
	(mw32_process_main_thread_message): Call mw32_process_tool_bar_click()
	when WM_EMACS_TOOL_BAR_UP/DOWN message comes.
	(mw32_message_loop): Post WM_EMACS_TOOL_BAR_UP/DOWN if "window" is a
	tool bar window.

	* mw32term.h (WM_EMACS_SHOW_MOUSE_FACE): Removed.
	(WM_EMACS_TOOL_BAR_UP, WM_EMACS_TOOL_BAR_DOWN): New macros.

2003-12-25  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (mw32_handle_tool_bar_click): Don't call show_mouse_face() directly.
	Post WM_EMACS_SHOW_MOUSE_FACE instead.
	(mw32_process_main_thread_message): New function.
	(note_sync_event): Call mw32_process_main_thread_message(), but it may be
	moved in MW32_read_socket later.

	* mw32term.h (w32_create_frame_window): Removed the declaration since
	it isn't used.
	(mw32_process_main_thread_message): New declaration.
	(WM_EMACS_NOTE_MOUSE_MOVEMENT, WM_EMACS_SHOW_MOUSE_FACE): New internal
	windows messages.
	(WAIT_REPLY_MESSAGE): Use mw32_process_main_thread_message().

2003-12-24  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c: Suppress compilation warning.
	Normalize coding style.
	Don't use deprecated defines of ImageMagick.

	* mw32magick.h: Remove deprecated defines.

2003-12-23  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* w32term.h: Don't define macros for font operation.

	* xfaces.c (xlfd_point_size): Suppress compilation warning.
	(pixel_point_size): Ditto.
	(cmp_font_names): Ditto.
	(merge_face_heights): Ditto.
	(merge_face_heights): Ditto.
	(build_scalable_font_name): Ditto.

	* xdisp.c (handle_single_display_prop): Ditto.
	(handle_single_display_prop): Ditto.
	(resize_mini_window): Ditto.
	(try_scrolling): Ditto.
	(try_scrolling): Ditto.

	* window.c (Fset_window_vscroll): Ditto.

	* w32.c (getwd): Ditto.
	(gettimeofday): Ditto.
	(open_unc_volume): Ditto.
	(unc_volume_file_attributes): Ditto.

	* syntax.c (scan_lists): Ditto.

	* strftime.c (my_strftime): Ditto.

	* s/ms-w32.h (warning): Ditto.

	* regex.c: Ditto.

	* keyboard.c (read_char): Ditto.

	* gmalloc.c (register_heapinfo): Ditto.
	(morecore): Ditto.
	(_malloc_internal): Ditto.
	(_free_internal): Ditto.

	* fns.c (maybe_resize_hash_table): Ditto.

	* floatfns.c (Flogb): Ditto.

	* eval.c (internal_catch): Ditto.
	(internal_condition_case): Ditto.
	(internal_condition_case_1): Ditto.
	(internal_condition_case_2): Ditto.
	(Fsignal): Ditto.

	* dispnew.c (required_matrix_width): Ditto.
	(Fsleep_for): Ditto.
	(Fsit_for): Ditto.

	* composite.c (get_composition_id): Ditto.

	* coding.c (code_convert_region): Ditto.

	* charset.h (CHAR_STRING): Ditto.

	* charset.c (Fmake_char_internal): Ditto.

2003-12-01  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (note_mouse_movement): Remove redundant expressions.

2003-12-01  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (note_mouse_movement): Remove redundant expressions.
	(update_mouse_cursor): Validate last_mouse_movement_time.
	(x_destroy_window): Invalidate last_mouse_motion_frame.

2003-11-29  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (imagemagick_read_color_table): Normalized coding
	style.
	(imagimagick_get_mono_bmpdata): Ditto
	(get_foreground_and_background_color): Determine the pallets of fg
	and bg according to their value.
	(get_foreground_and_background_color): Normalized coding style.
	(imagemagick_load_image_data): Don't swap fg and bg.

2003-11-24  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* fns.c (Fstring_to_multibyte): Compensate CHECK_STRING() for the
	second argument.

2003-11-22  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* lisp.h (SREF): New macro from Emacs-21.3.50.
	(SSET): Ditto.
	(SDATA): Ditto.
	(SCHARS): Ditto.
	(SBYTES): Ditto.
	(STRING_SET_CHARS): Ditto.
	(STRING_COPYIN): Ditto.

	* process.c (read_process_output): Use Fstring_to_multibyte()
	instead of Fstring_as_multibyte().

	* fns.c (string_to_multibyte): New function from Emacs-21.3.50.
	(Fstring_to_multibyte): Ditto.

2003-11-07  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* process.c (read_process_output): Sync up with Emacs-21.3.50.

2003-10-22  KOSEKI Yoshinori  <kose@meadowy.org>

	* mw32term.c (internal_bitmap_array): Fix. Indindicate
	indicate-empty-lines at left side.

2003-10-18  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* s/ms-w32.h (fileno): Undefine for Mingw-3.2 or any later
	version. Thanks to Masayuki FUJII (boochang@m4.kcn.ne.jp).
	(_MT): Define to avoid the bug of Mingw-3.2. Thanks to Masayuki
	FUJII (boochang@m4.kcn.ne.jp).

2003-10-15  Richard M. Stallman  <rms@gnu.org>

	* regex.c (MAX_BUF_SIZE): Reduce to 2**15.
	(print_partial_compiled_pattern): Replace assert with a printout.
	(skip_noops, mutually_exclusive_p): Change args, values to re_char *.

2003-10-14  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (Fmw32_registry_list_keys): fix typo doc-string.
	Check if key is string.  Thanks to Masayuki FUJII (boochang@m4.kcn.ne.jp).
	(Fmw32_registry_list_values): Ditto.
	(registry_to_string_list): use registry_to_expand_string().
	(registry_to_expand_string): Added new function.

2003-10-04  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (file_dialog_callback): New function imported from
	Emacs-21.3.50.
	(Fmw32_file_dialog): Sync up with Emacs-21.3.50. Now selecting a
	directory is allowed.

2003-10-04  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (Ffile_system_info): New function imported from
	w32fns.c.
	(syms_of_mw32fns): Define the above function.

2003-10-04  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (imagemagick_load): Take account of `:index' property
	only if it is specified.

2003-10-04  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (initialze_multi_monitor_api): New function.
	(get_working_area_size): Ditto.
	(mw32_WndProc): Derive the size of working area with
	get_working_area_size().
	(init_mw32fns): Call initialze_multi_monitor_api().

2003-10-02  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (imagemagick_load): Take account of `:index' property.

2003-09-28  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* xdisp.c (try_scrolling): Call line_bottom_y() to derive the
	bottom y-position of the line.

2003-09-27  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (TrackMouseEvent_Proc): Correct the declaration.

2003-09-17  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (keymodifier): Set the MSB of keymodifier[0x0d] to 1.

2003-09-06  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (note_mouse_highlight): Clear the mouse face if the
	mouse cursor is off.  Thanks to
	Masayuki FUJII (boochang@m4.kcn.ne.jp).
	(mw32_message_loop): Ditto.

2003-09-06  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (note_sync_event): Don't call
	kbd_buffer_store_help_event() directly but use gen_help_event()
	and kbd_buffer_store_event().
	Simplify redundant expressions.

2003-09-02  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c (default_logfont): Set the lfCharSet to DEFAULT_CHARSET.
	(mw32_convert_lface_to_LOGFONT): If c is less than 0, set lfCharSet
	to ANSI_CHARSET.

2003-08-28  MIYASHITA Hisashi  <himi@li18nux.org>

	* mw32font.c (mw32_face_family_unspecified_p):
	Bug fix.  Must compare name[0] with a char.

	* mw32font.c (mw32_face_family_unspecified_p): New function.
	(mw32_convert_lface_to_LOGFONT): Only when
	mw32_face_family_unspecified_p returns false, override
	the family attribute to lfFaceName.

2003-08-26  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (Qwm_syscommand): New variable.
	(Qsc_keymenu): Ditto.
	(Qsc_monitorpower): Ditto.
	(Qsc_tasklist): Ditto.
	(Qsc_maximize): Ditto.
	(Qsc_restore): Ditto.
	(Qlow_power): Ditto.
	(Qshut_off): Ditto.
	(Fw32_access_windows_intrinsic_facility): New function.
	(syms_of_mw32fns): Initialize symbols for
	Fw32_access_windows_intrinsic_facility().

2003-08-24  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (note_mouse_movement): Don't suspend the main thread,
	because this function is called in the thread.
	(note_sync_event): New function.
	(mw32_message_loop): Don't call note_mouse_movement() but set
	last_mouse_motion_frame.
	Don't handle help echo.

	* keyboard.c (kbd_buffer_get_event): Activate note_sync_event().
	(gobble_input): Call note_sync_event().

2003-08-16  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_relief_rect): Draw a relief rectangle with
	Polygon() instead of Ractangle().

2003-08-16  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_glyph_string_foreground): Draw a text
	inside its relief box.
	(mw32_draw_relief_rect): Draw a relief rectangle which is consist
	of a number of lines with Ractangle(). These coded are imported
	from w32term.c.
	(mw32_draw_glyph_string): Don't call
	mw32_set_glyph_string_clipping() more than once.
	(mw32_fill_glyph_string): Strip off extra width of a box line.
	(mw32_setup_default_hdc): Normalized coding style.
	(mw32_fill_area_pix): Ditto.
	(mw32_draw_glyph_string_background): Ditto.
	(mw32_draw_composite_glyph_string_foreground): Ditto.
	(mw32_draw_box_rect): Ditto.
	(mw32_draw_glyph_string): Ditto.
	(mw32_expose_frame): Ditto.

	* dispextern.h (struct face): New member variable
	`colors_copied_bitwise_p'.

	* xfaces.c (free_face_colors): Don't free face colors if
	`colors_copied_bitwise_p' is t.

2003-08-03  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* buffer.c (Fother_buffer): Check if XBUFFER (buf)->name is nil.

2003-07-30  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (mw32_compute_min_glyph_bounds): Guarantee that
	smallest_char_width and smallest_font_height should be greater
	than 0.

	* mw32term.c (mw32_message_loop): Normalized coding style.

2003-07-27  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* window.c (delete_window) Explicitly erase the cursor on
	deleting window.

2003-07-10  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_image_foreground) Clip image regions not
	with Emacs but with Windows.
	Normalized coding style.

2003-07-08  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* w32.c (sys_pipe): Limit the number of file descriptors to less
	than MAXDESC.

	* mw32fns.c (imagemagick_valid_object_p): Fix a typo.

2003-07-05  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c (note_mouse_highlight_handler): New signal handler for
	get-text-property called in note_mouse_highlight.
	(note_mouse_highlight): Enclose get-text-property by gcondition-case
	to catch signal.

2003-06-29  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (mw32_display_and_set_cursor): Made it
	not directly set MW32_FRAME_CARET_STATE(), call
	mw32_set_caret() instead.

2003-06-28  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32i_write_glyphs): Revive the deleted codes which
	invalidate old phys cursor to clear garbage under it.

2003-06-28  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* xdisp.c (redisplay_window): Current matrix must be up to
	date when calling try_window_id.

2003-06-28  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.h: (enum frame_caret_state):
	Add comment for caret type macros.
	(CARET_CURSOR_P): Fix condition not to be discarded by optimization.

	* mw32term.c: Surely disable caret when non-caret cursor is selected.

	* mw32fns.c: Ditto.

2003-06-28  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c: Change to enable compiling by VC7.

	* mw32term.h: Ditto.

2003-06-14  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_SETFOCUS>)
	(mw32_WndProc<WM_KILLFOCUS>): Show and hide caret if required.
	(mw32_WndProc<WM_EMACS_SETCARET>): Set a caret appropriately.

	* mw32sync.h (block_input_ownthread): New declaration.
	(mw32_special_input): Removed.
	(W32_BLOCK_INPUT): Set block_input_ownthread.
	(W32_UNBLOCK_INPUT): Clear block_input_ownthread.
	(W32_SELF_INPUT_BLOCKED_P): New macro.

	* mw32term.h (enum text_cursor_kinds): Assign CARET_CURSOR from 0x100.
	(CARET_CURSOR_P): New macro.
	(enum frame_caret_state): New enum.
	(MW32_FRAME_CARET_STATE, MW32_FRAME_CARET_WIDTH)
	(MW32_FRAME_CARET_BITMAP, MW32_FRAME_CARET_ENABLED_P): New macros.
	(struct mw32_output): Added a new member, caret_bitmap.
	Removed current_cursor.

	* mw32term.c (mw32_special_input): Removed.  It has not been used.
	(block_input_ownthread): New variable.
	(notice_overwritten_cursor): Imported it from xterm.c.
	(anticipate_overwrite_caret): New function.
	(restore_overwritten_caret): New function.
	(mw32_fill_area_pix): Removed the part that manipulate a caret.
	(MW32_update_begin): Ditto.
	(mw32_set_caret): New function.
	(mw32i_write_glyphs): Call anticipate_overwrite_caret before drawing,
	and also call notice_overwritten_cursor and restore_overwritten_caret
	after drawing.
	(mw32i_insert_glyphs): Likewise.
	(mw32i_clear_end_of_line): Likewise, but notice_overwritten_cursor
	beforehand because we know it before actually drawing.
	(mw32_message_loop): Removed the part on mw32_special_input.
	(mw32_compute_cursor_width): New function.
	(mw32_draw_hollow_cursor): Use mw32_compute_cursor_width().
	(mw32_draw_caret_cursor): New function.
	(mw32_erase_phys_cursor): If the current cursor is a caret, hide it.
	(mw32_display_and_set_cursor): Call mw32_erase_phys_cursor whenever the
	current cursor is a caret, and acll mw32_draw_caret_cursor().

2003-06-08  KOSEKI Yoshinori  <kose@meadowy.org>

	* mw32font.c: Fixed typo.

2003-06-08  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c: Normalized coding style.

2003-06-07  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (x_set_window_size): Set the frame size with
	SetWindowPlacement() for iconic or zoomed frame.  Thanks to
	Masayuki FUJII (boochang@m4.kcn.ne.jp).

	* mw32fns.c (mw32_WndProc): Rearrange the frame size, which should
	be smaller than the display size.

2003-05-29  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c (mw32_load_function_spec): When it's not in the main
	thread, return NULL without calling an elisp function.

2003-05-28  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32fns.c: Deleted needless codes.  (Note that these functions are
	implimented with elisp based emulation functions.)

	* mw32term.c (Fmw32_get_device_capability): New function.
	(syms_of_mw32term): do defsubr() for mw32-get-device-capability.

2003-05-27  ABE Yasushi  <yas@meadowy.org>

	* mw32font.c (mw32_check_font_request_alist): Fix typo.

2003-05-25  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c: Defined Qspec and Qstrict.  Removed Qstrict_spec.
	(mw32_load_strict_spec, mw32_load_function_spec): New functions.
	(mw32_spec_base_font_loader): New function.  Substituded it for
	mw32_strict_logical_font_loader and mw32_elisp_logical_font_loader.
	(mw32_check_font_option): Separated checking option part from
	mw32_check_font_request_alist().
	(mw32_check_font_request_alist): Made it adapt to the new font "spec"
	format.  Furthermore, check logfont lisp object strictly.
	(reinit_syms_of_mw32font): Added mw32_spec_base_font_loader.
	Removed mw32_strict_logical_font_loader and
	mw32_elisp_logical_font_loader.
	(syms_of_mw32font): Initialize Qspec and Qstrict.
	Removed the code on Qstrict_spec.

	* xdisp.c (display_mode_element): When getting charpos,
	check if elt is a multibyte string.

	* window.c (Fset_window_configuration): Add comments.

2003-05-20  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32i_scroll_run): Delete GDI objects.

2003-05-07  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32mem.c (mw32_start): Set _CRT_fmode _O_BINARY for
	Mingw-runtime-3.0 and the later versions. Thanks to Masayuki FUJII
	(boochang@m4.kcn.ne.jp).

2003-04-28  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_message_loop): Remove a garbage.

2003-04-10  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_glyphs): Don't call
	notice_overwritten_cursor().
	Simplify redundant expressions.
	(mw32_draw_hollow_cursor): Enlarge a hollow box cursor.

2003-04-03  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* window.c (Fset_window_configuration): Unblock input around
	 Fselect_window() to prevent deadlock. It may cause deadlock to
	 call a function which handles a message in a critical section.

2003-03-24  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c (mw32_logfont_equal): Check lfCharSet as well.
	(mw32_set_encoding_to_lf): When encoding is Q2_byte_set_msb,
	set ENCODING_BYTE2MSB11 instead.

	* mw32font.h (MW32EncodingType): Remove ENCODING_BYTE2MSB1 and
	ENCODING_BYTE2LSB1.  Define ENCODING_BYTE2MSB11 instead.

	* mw32term.c (mw32_encode_char): Get encoding from MW32LogicalFont.
	When encoding is ENCODING_BYTE2MSB11, set the msb of both bytes.
	Ignore charset_dimension when encoding is ENCODING_BYTE1MSB1 or
	ENCODING_BYTE2MSB11.

2003-03-11  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_glyphs): Change the condition to correct
	the row position. Sync up with Emacs-21.3.50.
	(mw32_draw_glyphs): Call notice_overwritten_cursor().
	(mw32i_write_glyphs): Invalidate old phys cursor if the glyph at
	its hpos is redrawn. Sync up with Emacs-21.3.50.
	(mw32i_insert_glyphs): Don't call notice_overwritten_cursor().
	(notice_overwritten_cursor): Sync up with Emacs-21.3.50.
	(mw32_erase_phys_cursor): If row is completely invisible, don't
	 attempt to delete a cursor which isn't there. Sync up with
	 Emacs-21.3.50.

2003-03-09  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (mw32_check_font_request_alist): Parse and check a
	font request alist.

2003-03-09  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c (Vmw32_windows_font_charset_database): Removed.
	(mw32_windows_set_logical_font_from_char): Now it takes an Emacs char
	not a charset of Windows LOGFONT.
	(mw32_set_windows_logical_font): It takes an Emacs char as well, and
	pass it to mw32_windows_set_logical_font_from_char.
	(mw32_load_lf_from_lisp_object): Likewise, but pass it to
	mw32_set_windows_logical_font.
	(mw32_default_logical_font_loader): Ditto.
	(mw32_convert_lface_to_LOGFONT): Use XCAR() and XCDR(), and if the
	data is invalid, return 0.
	(mw32_strict_logical_font_loader): Pass "c" to
	mw32_load_lf_from_lisp_object.
	(mw32_elisp_logical_font_loader): Ditto.
	(syms_of_mw32font): Remove Vmw32_windows_font_charset_database.

	* mw32fns.c (Fmw32_file_dialog): Almost totally rewrite
	how to handle filename, i.e., manipulate filename with Emacs Lisp
	functions, then finally encode it to a system dependent text.
	And encode "prompt" as well.

2003-03-08  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32i_scroll_run): Don't set the frame garbaged,
	because this causes unexpected "End of buffer".

2003-03-08  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c (mw32_set_encoding_byte_from_charset):
	When c < 0, regard it as an ascii, so set font_unit_byte to 1.
	(mw32_elisp_logical_font_loader): Return immediately whenever it
	is not in the main thread.

2003-03-08  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c (Qencoding_type, Qencoder, Qdim): Removed.
	(Qencoding, Qfont_unit_byte, Q1_byte_set_msb)
	(Q2_byte_set_msb, Qunicode, Qshift_jis): New symbols.
	(mw32_windows_set_logical_font_from_charset): Call mw32_set_encoding_to_lf()
	to initialize MW32Encoding.
	(mw32_glyph_metric): Don't examine dim.  Check font_unit_byte instead.
	(mw32_bdffont_textout): Use font_unit_byte instead of dim.
	(mw32_set_bdf_font): Do nothing with dim, encoding_type, nor ccl_method.
	(set_font_info): When setting font_encoder, use MW32FontEncoding instead of
	encoding_type and ccl_method.
	(mw32_find_ccl_program): Likewise.
	(free_font_info): Removed.
	(mw32_valid_encoding_p): New function.
	(mw32_set_encoding_to_lf): New function.
	(mw32_set_encoding_byte_from_charset): New function.
	(mw32_default_hash_function): Don't use the removed members, encoding_type,
	ccl_method, nor dim.
	(mw32_lf_equal): Ditto.
	(mw32_load_lf): Finally canonicalize encoding info. by calling
	mw32_set_encoding_byte_from_charset.
	(mw32_delete_logical_font): Free ccl_method if possible.
	(mw32_set_option_alist_to_logical_font): Set encoding.  Remove the codes on
	encoding_type, ccl_method, and dim.
	(mw32_check_font_request_alist): Check a value on Qencoding, and don't
	check Qencoding_type, Qencoder, nor Qdim.
	(syms_of_mw32font): Init Qencoding, Qfont_unit_byte, Q1_byte_set_msb,
	Q2_byte_set_msb, Qunicode, and Qshift_jis.  Remove the codes on Qencoding_type,
	Qencoder, nor Qdim.

	* mw32font.h (ENCODING_DIMENSION, ENCODING_BYTE1MSB1)
	(ENCODING_BYTE2MSB1, ENCODING_BYTE2LSB1)
	(ENCODING_SHIFTJIS, ENCODING_UNICODE): Moved to a new enumerator
	named MW32EncodingType.
	(ENCODING_EXTERNAL): New constant.
	(INITIALIZE_CCL_ID): Removed.
	(MW32EncodingType): New enumerator.
	(MW32Encoding): New structure.
	(MW32LogicalFont): Remove encoding_type, ccl_method, and dim.
	Introduce encoding instead.
	(MW32_FONT_FROM_FONT_INFO): New macro.

	* mw32term.c (mw32_encode_char): len is taken from
	MW32LogicalFont.


2003-03-07  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32i_scroll_run): Sync up with Emacs-21.3.50.

	* mw32term.h: Undefine VK_KANA because Cygwin header file defines
	a wrong virtual key code as VK_KANA.

2003-03-06  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_vertical_border): Correct area of a
	vertical window border.

2003-03-04  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (MW32_set_vertical_scroll_bar): Clear under the space
	reserved for scroll bars on the frame. These codes were imported
	from Emacs-21.2.
	(mw32_draw_glyphs): Notice when the text cursor of window W has
	been completely overwritten by a drawing operation.
	(mw32_draw_phys_cursor_glyph): Keep w->phys_cursor_on_p and
	restore it after mw32_draw_glyphs().

2003-03-02  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32mci.c (Fmw32_mci_send_string): Don't use ENCODE_SYSTEM
	and DECODE_SYSTEM.  Use mw32_encode/decode_lispy_string()
	instead.
	(Fmw32_mci_get_error_string): Likewise.

	* mw32term.c (mw32_message_loop<MM_MCINOTIFY>): Simplify redundant
	expressions, and avoid using kbd_buffer_store_event().

	* mw32fns.c (mw32_encode_lispy_string)
	(mw32_decode_lispy_string): New functions.

	* mw32term.h (mw32_encode_lispy_string, mw32_delete_lispy_string):
	New function declaration.

2003-03-02  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* window.c (window_scroll_pixel_based): Break while loop, if
	move_it_by_lines() cannot move the cursor.  Sync up with
	Emacs-21.3.50.

2003-03-01  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32mci.c (Fmw32_mci_send_string): Encode a command string with
	w32-system-coding-system.

2003-02-26  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* termhooks.h (enum event_kind): Add mw32_mci_event.

	* mw32term.c (mw32_message_loop): Generate an Emacs event when
	MM_MCINOTIFY is notified.

	* mw32mci.h: New file.

	* mw32mci.c (Fmw32_mci_send_string): New function.
	(Fmw32_mci_get_error_string): Ditto.
	(syms_of_mw32mci): Ditto.
	(init_mw32mci): Ditto.
	(Qmw32_mci_notify): New lisp object.

	* makefile.meadow.w32-in (FULL_LINK_FLAGS): Append mw32mci.c.
	Update dependancies.

	* makefile.nt (LINK_FLAGS): Ditto.
	Update dependancies.

	* keyboard.c (make_lispy_event): Convert mw32_mci_event to a lisp
	object.
	(make_lispy_event): Modify the lisp object correspond to
	mw32_mci_event.

	* emacs.c (main): Add initialization of mw32mci.

2003-02-24  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (Fmw32_file_dialog): encode a default filename for a
	dialog box.

2003-02-24  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c (mw32_wf_allocator_reserve, mw32_wf_allocator_cancel):
	Revoked.
	(mw32_set_windows_logical_font):
	Cancel to use the above allocator.  Reverted.
	(mw32_lf_allocator_reserve, mw32_lf_allocater_cancel): Ditto.
	(mw32_add_logical_font, mw32_delete_logical_font):
	Cancel to use the above allocator.  Reverted.

2003-02-22  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (Qcentering): New variable.
	(mw32_set_windows_logical_font): Invalidate vertical centering.
	(mw32_set_bdf_font): Ditto.
	(set_font_info): Validate vertical centering if the centering flag
	of the font is true or the font request matches
	vertical-centering-font-regexp.
	(mw32_default_hash_function): Take account of `centering'.
	(mw32_lf_equal): Ditto.
	(mw32_set_option_alist_to_logical_font): Ditto.
	(mw32_check_font_request_alist): Ditto.
	(syms_of_mw32font): Initialize `Qcentering'.

	* mw32font.h (struct MW32LogicalFont): New member variable
	`centering'.

2003-02-20  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32fns.c (initialize_imagemagick): When magick_get_magick_info("XPM")
	returns NULL, immediately return.
	(initialize_imagemagick): Fix coding style and comment.

2003-02-19  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (mw32_WndProc): Set async_visible 0 and
	async_iconified 1 when a frame is iconified.
	(mw32_destruct_image): Use xfree() instead of free().

2003-02-18  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (mw32_wf_allocator_reserve): New function.
	(mw32_wf_allocator_cancel): Ditto.
	(mw32_set_windows_logical_font): Call mw32_wf_allocator_cancel()
	instead of xfree().
	(set_font_info): Allocate heap memory after set_ccl_method()
	successfully has finished.
	(mw32_find_ccl_program): Ditto.
	(mw32_internal_add_font): Allocate memory chunk for pointers to
	MW32LogicalFont.
	(mw32_lf_allocator_reserve): New function.
	(mw32_lf_allocater_cancel): Ditto.
	(mw32_add_logical_font): Call mw32_lf_allocator_reserve() instead
	of xmalloc().
	(mw32_add_logical_font): Expand memory chunk if no space is left.
	(mw32_delete_logical_font): Call mw32_lf_allocater_cancel()
	instead of xfree().

	* mw32font.h (struct MW32FontRequest): New member variable.

2003-02-17  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (mw32_cross_disabled_image): Restore the GDI object
	that has been attached to the DC object.

	* mw32font.c (mw32_lf_equal): Compare font requests instead of
	font infos.
	(set_font_info): Clear plf->fontip.
	Free fontp->name and fontp->full_name, if they are not NULL.

	* mw32term.c (mw32_free_frame_resources): Free resources of
	menubar and faces.
	(x_destroy_window): Free frame resources before the destruction of
	a window.
	(mw32_draw_relief_rect): Restore the GDI object that has been
	attached to the DC object.
	(mw32_draw_box_rect): Ditto.

2003-02-14  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_destroy_frame_hdc): Clear *pf instead of pf.
	(mw32_draw_relief_rect): Unify the calls of RestoreDC().
	(mw32_draw_image_foreground): Narrow the clipping rectangle.
	Ensure deletion of HDC and HGDIOBJ.

	* mw32font.c (mw32_set_windows_logical_font): Defer initializing
	message_thread_hdc.

2003-02-13  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32mem.c (mw32_start): Set _CRT_fmode _O_BINARY for
	Mingw-runtime-2.3 and the later versions.

	* mw32term.c: Include limits.h in the Mingw environment.

2003-02-12  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (w32_score_logfont): Compare the slant component if
	the font is not scalable.

	* mw32fns.c (mw32_WndProc): Move the codes that handle
	WM_MOUSELEAVE from mw32fns.c to mw32term.c

	* mw32term.c (mw32_message_loop): Ditto.

2003-02-08  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.h: Add definitions for TRACKMOUSEEVENT.

	* mw32term.c (mw32_message_loop): Import partial codes that handle
	WM_MOUSELEAVE from emacs-21.3.50.

	* mw32font.c (mw32_bdffont_glyph_metric): Substitute
	glyph.metric.dwidth for glyph.metric.bbw.

	* mw32fns.c (Fx_show_tip): Don't strip the width of the cursor
	glyph in the middle of rows.
	(mw32_WndProc): Import partial codes that handle WM_MOUSEMOVE and
	WM_MOUSELEAVE from emacs-21.3.50.
	(reinit_syms_of_mw32fns): Reset track_mouse_window.
	(init_mw32fns): Initialize track_mouse_event_fn.

2003-02-07  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_message_loop): Reset any_help_event_p.
	(mw32_message_loop): Ditto.

2003-02-05  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (x_bitmap_height): Derive Meadow specific
	display_info.
	(Fclear_image_cache): Use FRAME_MW32_P() instead of FRAME_X_P().

2003-02-04  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32menu.c (Fx_popup_menu): Extract menu info from the keymap if
	it is a cons cell.
	(mw32menu_show): Remove irrelevant flags from uflags.

	* mw32fns.c (mw32_WndProc): Revive the removed codes that handle
	the WM_MEASUREITEM event.
	(initialize_imagemagick): Fix comment.
	(forall_images_in_image_cache): Use FRAME_MW32_P() instead of
	FRAME_X_P().

2003-01-31  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (w32_abort): Exit Meadow only in the Cygwin/Mingw
	environment. This requires w32_abort() not to return.
	(Fx_show_tip): Validate the calculation of the row width of text
	area.

2003-01-30  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32menu.c (Fx_popup_menu): Clean up status of the frame after a
	popup menu has gone.

	* mw32font.c (mw32_set_windows_logical_font): Defer abolishing
	release message_thread_hdc that is temporally set.

	* mw32fns.c: Remove irrelevant codes that were import from
	emacs-21.3.50

	* mw32term.c (mw32_message_loop): Ditto.

	* mw32magick.h: Fix the comment on the version of ImageMagick.

2003-01-29  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (mw32_WndProc): Reset dpyinfo->grabbed after a popup
	menu goes away.

2003-01-28  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (mw32_set_windows_logical_font): Setup and release
	message_thread_hdc of the frame temporally, if it is invalid.

	* mw32term.c (note_mouse_movement): Compare message_thread_hdc and
	INVALID_HANDLE_VALUE instead of substitution.
	(note_mouse_movement): Don't setup and release message_thread_hdc
	of the frame. This is moved to
	mw32_set_windows_logical_font()@mw32font.c
	(show_mouse_face): Initialize mhdc with INVALID_HANDLE_VALUE.

2003-01-24  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* makefile.meadow.w32-in: Execute makedepend.pl with -cc option.
	Refine regular expression for replacement.

	* mw32term.c (note_mouse_movement): Setup and release
	message_thread_hdc of the frame temporally, if it is invalid.

2003-01-23  ABE Yasushi  <yas@meadowy.org>

	* mw32fns.c (cross_disabled_images): New Variable.
	(mw32_cross_disabled_image): New function.
	(mw32_disable_image): Call mw32_cross_disabled_image().

2003-01-22  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (mw32_set_layout): Suppress compilation warnings for
	Cygwin/Mingw environment.

	* mw32fns.c (w32_abort): Ditto.
	(IMAGE_MAGICK_REQUIRE_VERSION): Change the supported version of
	ImageMagick.
	(imagemagick_valid_object_p): Use magick_ping_blob() instead of
	magick_blob_to_image().
	(initialize_imagemagick): Use magick_register_magick_info ()
	instead of hack code.

	* makefile.meadow.w32-in: Ditto.

2003-01-21  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (mw32_WndProc): Derive frame position with
	GetWindowRect() instead of GetClientRect().

2003-01-20  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (MW32_clear_frame): Clear whole of the frame.

	* mw32fns.c (x_set_tool_bar_lines): The condition to clear the
	internal border below was changed, because it is not cleared when
	the tool bar gets larger.

2003-01-19  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* makefile.nt: Update dependencies.

	* makefile.meadow.w32-in (depend): New dependency.
	Update dependencies.

2003-01-16  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.h (WM_EMACS_CREATE_TIP_FRAME): New definitions for
	tooltip.
	(WM_EMACS_CREATE_TIP_FRAME_REPLY): Ditto.

	* mw32fns.c (mw32m_create_tip_frame_window): New function.
	(mw32_WndProc): Don't redraw tooltip with WM_PAINT.
	(mw32_WndProc): New event handling with WM_EMACS_CREATE_TIP_FRAME.
	(mw32_create_tip_window): Renamed from my_create_tip_window.
	(mw32_create_tip_window): Inform the message thread to create a
	tip window.
	(Fx_show_tip): Don't ensure tooltip is on top of other topmost
	windows (eg menus). I think this is irrelevant.

2003-01-15  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (mw32_set_layout): Suppress meaningless warning.

	* mw32fns.c (XPM_read_blob_to_string): Initialize allocated
	memory for image data.

2003-01-10  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (XPM_read_blob_to_string): Check if *p is not NULL.
	Because magick_read_blob_string () returns NULL, even if reading
	blob successfully has finished.

	* mw32term.h: Abolish some definitions for SetWindowLong().

	* mw32fns.c (my_create_tip_window): Don't use SetWindowLong().
	Currently it is meaningless.
	(mw32_create_tip_frame): Renamed from x_create_tip_frame().
	(mw32_create_tip_frame): Derive a tooltip font from `parms'.

2003-01-09  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32menu.c (Fx_popup_menu): Build keymap from menu if (car menu)
	is a kind of keymap.
	(Fx_popup_dialog): Import partial code from emacs-21.3.50.
	(menubar_selection_callback): Free memory used by owner-drawn and
	help-echo strings. This is imported form emacs-21.3.50.
	(single_submenu): Encode pane_name. This is imported form
	emacs-21.3.50.
	(mw32menu_show): Ditto.
	(mw32menu_show): Change fuflags for the title of popup menu.
	(mw32menu_show): Initialize entry.

	* mw32fns.c (mw32_WndProc): Import partial code from
	emacs-21.3.50, which handles such event as WM_MEASUREITEM and
	WM_DRAWITEM.
	(mw32_WndProc): Inform the main thread of
	WM_MULE_IMM_SET_COMPOSITION_FONT_REPLY message.

2003-01-08  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (initialize_imagemagick): Don't use
	magick_register_magick_info () that may cause a crash.

2003-01-07  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* xdisp.c (x_consider_frame_title): Skip setting the title of the
	frame, if it is a tool-tip frame.

	* mw32term.h (struct mw32_output): New member variables,
	menubar_active and menu_command_in_progress.
	Add some definitions for tool-tip.

	* mw32term.c (note_mouse_highlight): Reset help_echo.
	(clear_mouse_face): Remove the last change that is moved to
	mw32_message_loop().
	(mw32_message_loop): Import partial code from emacs-21.3.50, that
	handles WM_MOUSEMOVE event for help echo.
	(mw32_message_loop): Reset dpyinfo->mouse_face_mouse_frame.
	(mw32_message_loop): Import partial code from emacs-21.3.50, that
	cancels a help-echo.
	(mw32_message_loop): Import partial code from emacs-21.3.50, that
	handles WM_COMMAND event.

	* mw32menu.c (push_menu_item): New arguments, `type', `selected'
	and `help'.
	(add_menu_item): New argument, `help'.
	(add_menu_item): Import partial code from emacs-21.3.50 that
	handles info of menu items.
	(single_menu_item): Follow the change of add_menu_item().
	(list_of_items): Ditto.
	(Fx_popup_menu): Derive the menu position for tool-bar in the same
	way as that for menu-bar.
	(Fx_popup_menu): Discard menu items if current_popup_menu is not
	NULL.
	(mw32_menu_display_help): Import whole code from emacs-21.3.50.
	(mw32_free_submenu_strings): Ditto.
	(mw32_free_menu_strings): Ditto.
	(single_submenu): Follow the change of add_menu_item() and
	add_menu_item().
	(mw32menu_show): Ditto.
	(globals_of_w32menu): Import whole code from emacs-21.3.50.

	* mw32fns.c (mw32_WndProc): Import partial code from
	emacs-21.3.50 that handles some events such as WM_EXITMENULOOP,
	WM_MENUSELECT, WM_TIMER and WM_EMACS_POPUP_MENU for tool-tip.
	(my_create_tip_window): Import whole code from emacs-21.3.50.
	(unwind_create_tip_frame): Ditto.
	(x_create_tip_frame): Ditto.
	(compute_tip_xy): Ditto.
	(Fx_show_tip): Ditto.
	(Fx_hide_tip): Ditto.
	(syms_of_mw32fns): Validate x-show-tip and x-hild-tip.

	* frame.c (Fdelete_frame): Call `delete-frame-functions' instead
	of `delete-frame-hook' if the frame is not a tool-tip.

	* emacs.c (main): Call globals_of_w32menu() in mw32menu.c.

2003-01-02  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_image_foreground): Fix the type of bitmap
	handle.

2003-01-01  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (postprocess_image): Don't call mw32_mask_image().
	(imagemagick_make_maskdata): Take account of mask color that is
	defined with :mask or :heuristic-mask, to determine mask.
	(imagemagick_setup_bmpmask): Change the condition to make a mask
	data.
	(resolve_mask_color): New function.
	(imagemagick_load_image_data): Implement `:mask' and
	`:heuristic-mask'.
	(mw32_mask_image): Abolished.

	* mw32term.c (mw32_draw_image_foreground): Change the algorithm of
	image composition. Now you don't have to make a background of a
	masked image black.

2002-12-30  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (XPM_read_colors_section): Support a color name that
	is consist of more than one word.

	* mw32magick.h (BlobMode): New enumeration.

	* mw32fns.c (magick_open_blob): New function.
	(magick_read_blob_string): Ditto.
	(magick_close_blob): Ditto.
	(magick_allocate_image_colormap): Ditto.
	(magick_query_color_database): Ditto.
	(magick_register_magick_info): Ditto.
	(magick_set_magick_info): Ditto.
	(imagemagick_valid_data_p): Don't destroy image if image is NULL.
	(imagemagick_valid_object_p): Ditto.
	(XPM_color_symbols_elem): New enumeration.
	(XPM_color_symbols): Ditto.
	(parse_XPM_color_symbols): New function.
	(free_XPM_color_symbols): Ditto.
	(imagemagick_load): Take account of color-symbols.
	(XPM_palette_info): New structure.
	(XPM_strip_line): New function.
	(XPM_find_next_line): Ditto.
	(XPM_extract_line): Ditto.
	(XPM_read_blob_to_string): Ditto.
	(XPM_read_values_section): Ditto.
	(XPM_read_colors_section): Ditto.
	(XPM_correct_colormap_with_symbols): Ditto.
	(XPM_read_pixels_section): Ditto.
	(XPM_read_image): Ditto.
	(initialize_imagemagick): Entry a customized XPM decoder for
	color-symbols.

2002-12-22  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (unpack_bitmap_data): New function.
	(load_in_memory_image): Use the function described above.

2002-12-21  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (clear_mouse_face): Reset
	dpyinfo->mouse_face_mouse_frame.

	* mw32fns.c (Fmw32_file_dialog): Decode filename.

2002-12-14  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32i_get_glyph_overhangs): Don't call metricproc if
	font is NULL.

2002-12-10  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (load_in_memory_image): Take account of boundary
	alignment of bitmap data.

2002-12-09  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (load_in_memory_image): Fix computation of pixel
	position.

2002-12-07  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (magick_constitute_image): New function.
	(magick_allocate_image): Ditto.
	(magick_set_image_piexels): Ditto.
	(imagemagick_valid_object_p): Use magick_blob_to_image () instead
	of magick_ping_blob (), for magick_ping_blob () seems not to work
	correctly.
	(load_in_memory_image): New function.
	(imagemagick_load): Protect data from GC.
	Support various image formats: in-memory file, string, vector and
	bit-vector.

2002-12-05  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (imagemagick_load_image_data): Add comparison with GIF
	image. Pixel values of GIF image should be also inverted.

2002-12-03  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32fns.c (imagemagick_load_image_data): Hack for
	ImageMagick-5.5.1. It inverts pixel value of PBM(PNM) image, so I
	swap fg and bg.

2002-11-28  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c (IMAGE_MAGICK_REQUIRE_VERSION): Support for ImageMagick
	5.5.1.
	(imagemagick_transparent_color_p): Use MaxRGB.

	* mw32magick.h : Support for ImageMagick 5.5.1.

2002-11-27  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (mw32_default_hash_function): Calculate hash value as
	unsigned int.
	(mw32_register_lf_hash): Ditto.
	(mw32_unregister_lf_hash): Ditto.

	* mw32font.h: Ditto.

2002-11-26  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (mw32i_flush): Call GdiFlush().
	(mw32i_clear_mouse_face): Add comment on GdiFlush().
	(mw32i_scroll_run, mw32i_clear_end_of_line, mw32i_insert_glyphs)
	(mw32i_write_glyphs, mw32i_after_update_window_line)
	(mw32i_update_window_end, mw32i_update_window_begin): Ditto.

	* dispnew.c (update_frame): Call flush_display() after
	updating the frame.

2001-11-22  Yoshiki Hayashi  <yoshiki@meadowy.org>

	* mw32font.c (mw32_get_font_request_parameter): Use assq_no_quit
	instead of Fassq.
	(mw32_convert_lface_to_LOGFONT): Ditto.
	(mw32_elisp_logical_font_loader): Ditto.
	(mw32_strict_logical_font_loader): Ditto.  Also remove unused code and
	check only options is list or not.

2002-11-21  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.c (mw32_logfont_equal): Add comparison of font name.
	(mw32_lf_equal): Ditto.
	(mw32_set_bdf_font): Set fixed_pitch TRUE instead of Qt.

2002-11-19  Yoshiki Hayashi  <yoshiki@meadowy.org>

	* mw32font.c (mw32_get_font_request_parameter): Use assq_no_quit
	instead of Fassq to avoid throwing error.

2002-11-19  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32font.h (struct MW32LogicalFont): New member
	`character_spacing'.

	* mw32font.c (Qspacing, Qdim): New lisp objects.
	(getDeviceWidth): New function.
	(mw32_set_layout): Fix comment.
	(mw32_glyph_metric): Take account of character spacing.
	(mw32_set_windows_logical_font): Ditto.
	(mw32_bdffont_textout): Ditto.
	(mw32_bdffont_glyph_metric): Ditto.
	(mw32_set_bdf_font): Ditto.
	(mw32_default_hash_function): Ditto.
	(mw32_lf_equal): Ditto.
	(mw32_set_option_alist_to_logical_font): Ditto.
	(mw32_check_font_request_alist): Ditto.
	(syms_of_mw32font): Ditto.
	(mw32_set_option_alist_to_logical_font): Set `dim' parameter.
	(mw32_set_bdf_font): Abolish option argument.
	(mw32_load_lf_from_lisp_object): Ditto.
	(mw32_strict_logical_font_loader): Check if font option is alist.

	* mw32bdf.h: Ditto.

	* mw32bdf.c (mw32_BDF_TextOut): Take account of character spacing.

	* makefile.meadow.w32-in: Add dependancies of mw32*.c.

2002-11-18  Yoshiki Hayashi  <yoshiki@meadowy.org>

	* mw32term.c (mw32_message_loop): Call mw32_handle_tool_bar_click
	if mouse button event is on tool-bar frame.

2002-11-18  Yoshiki Hayashi  <yoshiki@meadowy.org>

	* alloc.c (pdump_map_file): New function.  Move in dump file loading
	code from pdump_load and add memory mapped file code for Windows.
	(pdump_load): Call pdump_map_file.
	(pdump_open_dump_file): Add new argument, path.

2002-11-16  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_glyph_string): Add some comment on
	underline position.

2002-11-15  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_glyph_string_foreground): Take account of
	baseline offset.

	* mw32font.c (set_font_info): Set vertical_centering according to
	vertical-centering-font-regexp.

2002-11-14  Yoshiki Hayashi  <yoshiki@meadowy.org>

	* gc: Removed.
	* history.sh: Ditto.
	* w32.c.rea: Ditto.
	* w32heap.c.rea: Ditto.
	* xfns.foo.c: Ditto.

2002-11-14  ABE Yasushi  <yas@meadowy.org>

	* mw32fns.c (mw32_mask_image): New Function.
	(mw32_disable_image): Adjust threshold.
	(postprocess_image): Call mw32_mask_image() after postprocess.

2002-11-13  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_draw_glyph_string): Derive y coordinates of
	underline per not a glyph_string but a glyph_row.

2002-11-09  MIYASHITA Hisashi  <himi@meadowy.org>

	* dispnew.c (update_frame): Block the message thread between
	updating.
	(update_single_window): Likewise.

2002-10-29  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.c (mw32_term_init): Derive n_planes in the Meadow1's
	way for Windows9x.

2002-10-28  Koichiro Ohba  <koichiro@meadowy.org>

	* makefile.nt (mw32fns.obj): Depend on mw32magick.h.

2002-10-25  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (registry_set): Fix previous change.

2002-10-25  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (registry_data_valid_p): Simplify.  Use
	registry_symbol_to_type().

2002-10-25  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (registry_to_string_list): Renamed from
	registry_to_multi_string().
	(registry_get): Bug Fix: Handle case that `regkey->to_lisp_object'
	is NULL.  (Thanks Shun-ichi GOTO).
	(registry_to_reg_multi_sz_size): New function.
	(registry_to_reg_multi_sz): Likewise.
	(registry_key_function_setup): Register new functions above.
	(registry_data_valid_p): Added validation for `registry-multi-sz'
	data.

2002-10-24  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (registry_prepare): Change return values.
	(registry_build_registry_data): Removed function.
	(registry_data_size): Removed function.
	(registry_make_registry_data): Removed function.
	(registry_key): New struct.
	(registry_key_setup): New function.
	(registry_key_function_setup): Likewise.
	(registry_key_destory): Likewise.
	(registry_to_reg_dword_size): Likewise.
	(registry_to_reg_qword_size): Likewise.
	(registry_to_reg_sz_size): Likewise.
	(registry_to_reg_sz): Likewise.
	(registry_to_string): Likewise.
	(registry_to_multi_string): Likewise.
	(registry_to_raw_number): Likewise.
	(registry_to_raw_qword_number): Likewise.
	(registry_to_unibyte_string): Likewise.
	(registry_get): Use registry_key_function_setup().
	(registry_set): Likewise.
	(Fmw32_registry_delete_key): Simplify.  Use registry_key_setup()
	and registry_key_destory().
	(Fmw32_registry_delete_value): Likewise.
	(Fmw32_registry_create_key): Likewise.
	(Fmw32_registry_get): Likewise.
	(Fmw32_registry_set): Likewise.  Removed create argument.

	* mw32fns.c (pixel_to_rgb): Removed unused variables,
	`value'.

2002-10-24  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32bdf.c (mw32_init_bdf_font): Use `==` instead of `='.
	(mw32_get_bdf_glyph): Suppress a compilation warning in the manner
	of emacs 21.2.

2002-10-23  Yoshiki Hayashi  <yoshiki@meadowy.org>

	* mw32reg.c (registry_enum_all_keys): Restore GCPRO and add
	struct gcpro.
	(registry_enum_all_values): Ditto.

2002-10-23  Yoshiki Hayashi  <yoshiki@meadowy.org>

	* mw32reg.c (registry_build_registry_data): Remove bogus GCPRO.
	(registry_get): Remove unused local variable.
	(registry_enum_all_keys): Remove bogus GCPRO.
	(registry_enum_all_values): Ditto.
	(Fmw32_registry_list_keys): Remove unused local variable.
	(Fmw32_registry_list_values): Ditto.

2002-10-22  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* mw32term.h: Suppress compilation warnings.

	* mw32term.c: Ditto.

	* mw32menu.c: Ditto.

	* mw32font.c: Ditto.

	* mw32bdf.c: Ditto.

	* mw32fns.c (pixel_to_rgb): New function.
	(get_foreground_and_background_color): Ditto.
	(imagemagick_load_image_data): Validate foreground and background
	color.
	Suppress compilation warnings.

2002-10-22  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (Fmw32_registry_list_keys): Extract method.
	(Fmw32_registry_list_values): Likewise.
	(registry_enum_all_values): New function.
	(registry_enum_all_keys): New function.

2002-10-20  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* makefile.meadow.w32-in (bootstrap-emacs): Change name of
	executable for Meadow 2 featuring Portable-dumper. Thanks to
	Masayuki FUJII (boochang@m4.kcn.ne.jp).

	* mw32font.c (mw32_set_windows_logical_font): Set pphys_type.
	(mw32_set_bdf_font): Ditto.

	* mw32font.h (EQUALPROC): New type.
	(font_id): Ditto.
	(struct MW32LogicalFont): New method for equality check.
	(MW32_INVOKE_LAYOUTPROC): New macro.

	* mw32font.c (mw32_logfont_equal): New function.
	(mw32_bdffont_equal): Ditto.
	(mw32_set_windows_logical_font): Make an entry of
	mw32_logfont_equal.
	(mw32_set_bdf_font): Make an entry of mw32_bdffont_equal.
	(mw32_register_lf_hash): Invoke equal procedure.

	* makefile.meadow.w32-in (emacs): Change name of executable for
	Meadow 2 featuring Portable-dumper.

2002-10-19  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* mw32reg.c (registry_list_items): Obsoleted because it is
	splitted into Fmw32_registry_list_keys and
	Fmew32_registry_list_values.
	(Fmw32_registry_list_keys): Merged code of registry_list_items.
	(Fmw32_registry_list_values): Merged code of registry_list_items.

2002-10-18  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (Fmw32_registry_set): New function.
	(registry_data_valid_p): New function.
	(registry_set): New function.
	(registry_make_registry_data): New function.
	(registry_data_size): New function.
	(registry_symbol_to_type): New function.
	(syms_of_mw32reg): Register new functions above.

2002-10-16  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (registry_type_to_symbol): Rename from
	registry_type_to_object().
	(registry_build_registry_data): New function.
	(registry_get): Simplify.

2002-10-15  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (registry_delete_key): Removed unused variables,
	`hrkey'.
	(Fmw32_registry_create_key): New function.
	(registry_create_key): New function.
	(syms_of_mw32reg): Register new functions above.

2002-10-15  ABE Yasushi  <yas@meadowy.org>

	* mw32fns.c (postprocess_image): Handle conversion.
	(mw32_image_to_fullcolor): New function.
	(mw32_disable_image): New function.
	(mw32_detect_edges): New function.
	(mw32_laplace): New function.
	(mw32_emboss): New function.
	(mw32_edge_detection): New function.

2002-10-15  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32reg.c (Fmw32_registry_delete_value): New function.
	(Fmw32_registry_delete_key): New function.
	(registry_delete_key): New function.
	(registry_delete_value): New function.

2002-10-14  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* mw32reg.c (registry_get): Use alloca() for temp buffer.
	Allowed NULL for KEY string which means without sub key.
	(registry_list_items): New static function for using commonly
	from mw32-registry-list-keys and mw32-registry-list-values.
	(Fmw32_registry_list_keys): New function.
	(Fmw32_registry_list_values): New function.
	(syms_of_mw32reg): Register new functions above.

2002-10-14  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* mw32reg.c (Fmw32_rigistry_get): Added doc string.
	(Fmw32_registry_words_to_integer): New function.
	(syms_of_mw32reg): Add initialization of error data object
	and registration of mw32-registry-words-to-integer.

2002-10-13  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* emacs.c (main): Call symbol registration functions for
	mw32reg.c.

	* mw32reg.c: Add Registry operation function (made by ohba)
	(registry_type_to_object): New function.
	(registry_get): New function.
	(registry_root_key_to_hkey): New function.
	(registry_prepare): New function.
	(Fmw32_rigistry_get): New function.
	(reinit_syms_of_mw32reg): New function.
	(syms_of_mw32reg): New function.
	(init_mw32reg): New function.

	* coding.h (DECODE_SYSTEM): Fixed argument name.

2002-10-12  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* makefile.nt (bootstrap-emacs): Handle new executable name.

2002-10-12  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* makefile.nt (EMACS): Change name of executable for Meadow 2
	featuring Portable-dumper.

2002-10-08  Koichiro Ohba  <koichiro@meadowy.org>

	* fileio.c (read-file-name): When MEADOW defined, use
	Fmw32_file_dialog().

	* mw32fns.c (Fmw32_file_dialog): New function. Support for NTGUI
	open file dialog.

2002-10-07  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c (magick_set_image_type): Fix return type.
	(imagemagick_pixel_to_bmpbit): Removed function.
	(magick_get_number_colors): Removed wrapper function.
	(magick_signature_image): Likewise.
	(magick_get_pixels): Likewise.
	(imagimagick_get_fullcolor_bmpdata): Use
	magick_get_image_pixels().

2002-10-06  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c (imagemagick_load_image_data): Use
	magick_transform_rgb_image() and imagemagick_get_bits_per_pixel().
	Added support for palette image.
	(imagemagick_setup_bitmapinfo): Removed unused
	variables, `n'.
	(imagemagick_get_bits_per_pixel): New function.
	(magick_get_indexes): New wrapper function for GetMagickIndexes().
	(magick_transform_rgb_image): New wrapper function for
	TransformRGBImage().
	(magick_acquire_image_pixels): New wrapper function for
	AcquireImagePixels().
	(magick_is_monochrome_image): New wrapper function for
	IsMonochromeImage().
	(magick_set_image_type): New wrapper function for SetImageType().
	(imagemagick_setup_bitmapinfo): Fixed compression mode.
	(imagemagick_transparent_color_p): Added attribute const for
	pixel.
	(imagemagick_setup_fullcolor_bitmapinfo): Renamed form
	imagemagick_setup_bitmapinfo().  Use
	imagemagick_get_bits_per_pixel().
	(imagimagick_get_fullcolor_bmpdata): Renamed form
	imagimagick_get_bmpdata().  Support for 24bit color.
	(imagemagick_read_color_table): New function.
	(imagemagick_setup_palette_bitmapinfo): New function.
	(imagimagick_get_mono_bmpdata): New function.
	(imagimagick_get_256_bmpdata): New function.

2002-10-04  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c (imagemagick_load): Simplify.
	(imagemagick_load_image_data): Likewise.

2002-09-29  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* makefile.meadow.w32-in: Change install directory in Meadow's
	way.

2002-09-28  MIYOSHI Masanori  <miyoshi@boreas.dti.ne.jp>

	* makefile.meadow.w32-in: New file. Apply Cygwin/Mingw support
	patch from Masayuki FUJII (boochang@m4.kcn.ne.jp).

	* mw32bdf.c: Apply Cygwin/Mingw support patch from Masayuki FUJII
	(boochang@m4.kcn.ne.jp).

	* mw32fns.c: Ditto.

	* mw32font.h: Ditto.

	* mw32ime.c: Ditto.

	* mw32term.h: Ditto.

	* w32.c: Ditto.

2002-09-27  Yoshiki Hayashi  <yoshiki@meadowy.org>

	* alloc.c (pdump_write_objects): Free allocated data.
	(pdump_header_type): Renamed from pdump_header_t.
	(pdump_forward): Renamed from pdump_forward_t.
	(pdump_forward_pointer): Renamed from pdump_forward_pointer_t.
	(pdump_forward_subr_doc): Renamed from pdump_forward_subr_doc_t.
	(pdump_forward_interval_tree): Renamed from pdump_forward_interval_tree_t.
	(pdump_forward_hash_table): Renamed from pdump_forward_hash_table_t.
	(pdump_root): Renamed from pdump_root.
	(pdump_type_objects): Renamed from pdump_type_objects_t.

2002-09-25  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32mem.c (mw32_initialize_system_info): Bug fix.
	Set dwOSVersionInfoSize properly before calling GerVersionEx().
	Thanks to M.Fujii.
	* w32.c (get_emacs_configuration): Likewise.

2002-09-24  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32fns.c (mw32_WndProc<WM_EMACS_FLASH_WINDOW>): Return 0.

2002-09-23  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (mw32_message_loop<WM_EMACS_CLEAR_MOUSE_FACE>):
	When wParam is zero, don't clear help echo message.

	* mw32fns.c (mw32_WndProc<WM_KILLFOCUS>): Post WM_EMACS_CLEAR_MOUSE_FACE
	with setting WPARAM to 1 to clear help echo message as well.
	(mw32_WndProc<WM_NCMOUSEMOVE>): Add comment (Set WPARAM to 0 in order
	not to clear help echo message).

2002-09-19  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32mem.c: New file, which consists of new heap manager and small part of
	w32heap.c and unexw32.c services.

	* makefile.nt (STARTUP_ENTRY): New macro.
	(LINK_FLAGS): Remove -merge option.  Use STARTUP_ENTRY macro to specify
	-entry: option.
	(OBJ2): When MEADOW is defined, add mw32mem.obj and remove w32heap.obj
	and unexw32.obj.

	* mem-limits.h (get_lim_data): When MEADOW is defined, use
	get_reserved_heap_size() instead of directly accessing reserved_heap_size.

	* w32proc.c: When MEADOW is defined, don't include w32heap.h.

	* w32.c: When MEADOW is defined, don't include w32heap.h.
	(get_emacs_configuration): Don't use osinfo_cache.  Call GetVersionEx()
	here to set osinfo, and use it instead of osinfo_cache.

	* w32.h (MW32_OSTYPE): New enum.
	(os_subtype, get_processor_type)
	(get_w32_major_version, get_w32_minor_version): New extern declarations
	for mw32mem.c
	(file_data, open_input_file, open_output_file, close_file_data):
	Likewise, but for Memory Mapped file routines
	(OFFSET_TO_RVA, RVA_TO_OFFSET, RVA_TO_PTR, find_section):
	PE image manipulation macros and a function declaration.

2002-09-19  MIYASHITA Hisashi  <himi@meadowy.org>

	* alloc.c (NSTATICS): Increased it to 1280.

	* mw32fns.c (Qgs): Removed.
	(xbm_type, gs_type, pbm_type, xpm_type, jpeg_type)
	(tiff_type, gif_type, png_type): Removed.  They are automatically
	registered by define_imagemagick_type.
	(pget_magick_info_t, pget_magick_info): new function pointer type and
	variable for GetMagickInfo().
	(magick_get_magick_info): New wrapper function for GetMagickInfo().
	(resolve_imagemagick_api): Put error handling parts together.
	(imagemagick_load): Removed unused variables, `contents' and `size'.
	(imagemagick_image_type_lisp_symbol): New function.
	(initialize_imagemagick): New function.
	(syms_of_mw32fns): Remove the part on registering the symbol of "gs".
	(init_mw32fns): Don't define image types of ImageMagick here.
	Call initialize_imagemagick() instead only when `initialized' is true.

	* mw32magick.h (MagickInfo): Added for GetMagickInfo().

2002-09-11  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c (imagemagick_make_maskdata): Use
	imagemagick_transparent_color_p.
	(imagimagick_get_bmpdata): Likewise.
	(imagemagick_transparent_color_p): New function.

2002-09-11  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (mw32_handle_tool_bar_click): Before using emacs_event
	we MUST initialize it with MW32_INIT_EMACS_EVENT.
	(mw32_scroll_bar_handle_click): Likewise.
	(mw32_drop_file_handler): Likewise.
	(mw32_menu_bar_store_activate_event): Likewise.
	(mw32_message_loop): Likewise

	* mw32term.h (MW32_INIT_EMACS_EVENT): New macro.

	* mw32term.c (mw32_setup_image_bitmap_handle): Fix the
	comment style.
	(mw32_setup_glyph_string_hdc): Setup hdc also when hl is
	DRAW_IMAGE_RAISED or DRAW_IMAGE_SUNKEN.

	* mw32fns.c (imagemagick_make_maskdata): Make it return 1.
	(mw32_WndProc<WM_PAINT>): Remove an unused variable, ps.
	(mw32_WndProc<WM_ERASEBKGND>): mw32_clear_area() does not need
	event blocking.  Remove it.

	* mw32term.h (VERTICAL_SCROLL_BAR_TOP_RANGE): Fix the range to
	0xffff regardless of f and height.

2002-09-11  ABE Yasushi  <yas@meadowy.org>

	* mw32fns.c (Fimage_mask_p): Use MW32_IMAGE_HAS_MASK_P.

	* mw32term.c (mw32_draw_image_glyph_string): Use MW32_IMAGE_HAS_MASK_P.

	* mw32term.h (MW32_IMAGE_HAS_MASK_P): New macro.

	* dispextern.h (struct image): Remove member mask.

2002-09-09  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c (imagemagick_pixel_to_bmpbit): Fixed a typo of pixcel.
	(imagemagick_load_image_data): Use imagemagick_setup_bmpmask.
	(imagimagick_get_bmpdata): Made the transparent color to be
	converted to black.
	(mw32_destruct_image): Added free resource for pbmpmask.
	(imagemagick_setup_bmpmask): New function.
	(imagemagick_make_maskdata): New function. Generates a
	maskdata from ImageMagick.
	(bmp_read_bitmap_info): Use bmp_get_bitmap_width_bytes.
	(bmp_get_bitmap_width_bytes): New function.

2002-09-06  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (mw32_setup_image_bitmap_handle): Now we prepare
	phbmpmask if possible.  And to return two values, change the
	interface.  If fail to init bitmap handle(s), return 0.
	Otherwise, return 1.
	(mw32_draw_image_foreground): When hbmpmask is initialized,
	transfer pbmpmask to fill the destination area covered by the
	mask with 0, then transfer the image by taking bitwise-OR.

	* mw32fns.c (imagimagick_get_bmpdata): Fix typo of pixcel.
	(Fx_create_frame): At the startup of frame, set focus to it.

	* dispextern.h (mw32_image): Add mask_size and pbmpmask.

2002-08-27  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c (imagemagick_load): Fix overflow of blob data size.

2002-08-27  Keiichi Suzuki  <keiichi@meadowy.org>

	* mw32term.c (x_set_offset): Fix unable to use
	`set-frame-position'.

2002-08-23  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32fns.c (bmp_read_bitmap_info): Correct the expression that caliculates
	image size in byte.  For detail, see the comment.
	(bmp_read_bitmap_info): The temporary variable, align is removed.

2002-08-21  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c (imagemagick_load): Free resoruce for multi page images.
	(imagemagick_valide_object_p): Comment out.

2002-08-21  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c : Added validation for image data.
	(magick_destroy_image_list): New function. ImageMagick wrapper
	function.
	(resolve_imagemagick_api): Added lookup for ImageMagick function.
	(imagemagick_valide_data_p): New function.
	(imagemagick_valide_object_p): New function.
	(imagemagick_load): Use imagemagick_valide_data_p() and
	imagemagick_valide_object_p().

2002-08-21  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32fns.c : Added version check for ImageMagick.
	(IMAGE_MAGICK_REQUIRE_VERSION): New macro.
	(magick_get_magick_version): New function.  ImageMagick wrapper
	function.
	(magick_ping_blob): Likewise.
	(magick_ping_image): Likewise.
	(resolve_imagemagick_api): Added lookup for ImageMagick function.
	(imagemagick_version_p): New function.
	(define_imagemagick_type): Use imagemagick_version_p.

2002-08-20  Koichiro Ohba  <koichiro@meadowy.org>

	* mw32magick.h : New file.  stub header based on
	ImageMagick 5.4.8.

	* mw32fns.c : Added support for ImageMagick
	<http://www.imagemagick.org/>.
	Include mw32magick.h.
	(magick_initialize_magick): New function.  ImageMagick wrapper
	function.
	(magick_get_exception_info): Likewise.
	(magick_clone_image_info): Likewise.
	(magick_read_image): Likewise.
	(magick_blob_to_image): Likewise.
	(magick_destroy_image): Likewise.
	(magick_destroy_image_info): Likewise.
	(magick_get_image_pixels): Likewise.
	(magick_get_pixels): Likewise.
	(magick_signature_image): Likewise.
	(magick_get_number_colors): Likewise.
	(pinitialize_magick_t): New struct.
	(pread_image_t): Likewise.
	(pblob_to_image_t): Likewise.
	(pclone_image_info_t): Likewise.
	(pdestroy_image_t): Likewise.
	(pdestroy_image_info_t): Likewise.
	(pget_image_pixels_t): Likewise.
	(pget_pixels_t): Likewise.
	(pget_exception_info_t): Likewise.
	(pget_exception_info_t): Likewise.
	(psignature_image_t): Likewise.
	(pget_number_colors_t): Likewise.
	(pinitialize_magick): New variable.
	(pread_image): Likewise.
	(pblob_to_image): Likewise.
	(pclone_image_info): Likewise.
	(pdestroy_image): Likewise.
	(pdestroy_image_info): Likewise.
	(pget_image_pixels): Likewise.
	(pget_pixels): Likewise.
	(pget_exception_info): Likewise.
	(psignature_image): Likewise.
	(pget_number_colors): Likewise.
	(IMAGE_MAGICK_DLL): New macro.  Filename of the ImageMagick DLL
	file.
	(hmagick): New variable.  Handle ImageMagick DLL.
	(magick_exception): New variable.
	(resolve_imagemagick_api): New function.
	(imagemagick_setup_bitmapinfo): Likewise.
	(imagemagick_pixel_to_bmpbit): Likewise.
	(imagimagick_get_bmpdata): Likewise.
	(imagemagick_load_image_data): Likewise.
	(imagemagick_load): Likewise.
	(define_imagemagick_type):
	(Qxbm): New variable.
	(Qgs): Likewise.
	(Qpbm): Likewise.
	(Qxpm): Likewise.
	(Qjpeg): Likewise.
	(Qtiff): Likewise.
	(Qgif): Likewise.
	(Qpng): Likewise.
	(xbm_type): New variable.  For typecodes suppouted by ImageMagick.
	(gs_type): Likewise.
	(pbm_type): Likewise.
	(xpm_type): Likewise.
	(jpeg_type): Likewise.
	(tiff_type): Likewise.
	(gif_type): Likewise.
	(png_type): Likewise.
	(syms_of_mw32fns): Added lisp symbol for ImageMagick.
	(init_mw32fns): Use define_imagemagick_type.

2002-08-07  ABE Yasushi  <yas@meadowy.org>

	* mw32term.c (mw32i_produce_glyphs): Adapt to change of METRICPROC
	return value type.
	(mw32i_get_glyph_overhangs): Ditto.

	* mw32font.c (mw32_glyph_metric): Change return value type to MW32CharMetric.
	(mw32_bdffont_glyph_metric): Ditto.
	(mw32_bdffont_cm): Remove.

	* mw32font.h (METRICPROC): Change return value type to MW32CharMetric.

2002-08-06  ABE Yasushi  <yas@meadowy.org>

	* mw32bdf.h: New extern mw32_init_cached_bitmap_slots.

	* mw32font.c (reinit_syms_of_mw32font): Call mw32_init_cached_bitmap_slots.

	* mw32bdf.c (mw32_free_bdf_font): Put NULL to released bitmap
	cache slot.
	(clear_cached_bitmap_slots): Likewise.
	(mw32_init_cached_bitmap_slots): New function.

2002-08-02  Keiichi Suzuki  <keiichi@meadowy.org>

	* mw32font.c (mw32_elisp_logical_font_loader): Use `Qfunction'
	instead of `Qstrict_spec'.

2002-07-24  ABE Yasushi  <yas@meadowy.org>

	* mw32font.c (mw32_bdf_font): Delete.
	(mw32_bdffont_glyph_metric): Use mw32_get_bdf_glyph().
	(mw32_bdffont_textout): Use bdffont instead of mw32_bdf_font.
	(mw32_bdffont_free): Likewise.
	(mw32_set_bdf_font): Likewise.

2002-07-21  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32font.c (mw32_register_lf_hash): Don't check plf->hash
	because it must be set by LF creater or loader.
	(mw32_add_logical_font): Set the default hash LF method.
	(mw32_register_logical_font): New function.
	(mw32_load_lf_from_lisp_object): Use mw32_register_logical_font.
	(mw32_default_logical_font_loader): Likewise.

	* mw32term.c (mw32_clip_to_row): Delete hcr before exiting.
	It was resource leak.

	* mw32font.c (LF_HASH_SIZE): New macro.
	(lfhashtbl): Hash table for LF.
	(mw32_windows_set_logical_font_from_charset): Use INITIALIZE_CCL_ID()
	instead of manually setting members of ccl_method.
	(mw32_set_bdf_font): Likewise.
	(mw32_get_ccl_id): Likewise.
	(mw32_bdffont_textout): Correct the style.
	(mw32_set_bdf_font): Ditto.
	(HASHMAXVAL): New macro.
	(mw32_hash_ccl_method): New function.
	(mw32_default_hash_function): New function.
	(mw32_ccl_method_equal): New function.
	(mw32_lf_equal): New function.
	(mw32_register_lf_hash): New function.
	(mw32_unregister_lf_hash): New function.
	(mw32_compute_min_glyph_bounds): Now try to set the minimum char width
	and height.
	(mw32_delete_logical_font): Call mw32_unregister_lf_hash().
	(mw32_load_lf_from_lisp_object): Try to register LF to the hash table.
	If it has already existed, delete the created LF and return the existed
	LF.
	(mw32_default_logical_font_loader): Likewise.

	* mw32font.h (INITIALIZE_CCL_ID): New macro.
	(HASHPROC): New LF method.
	(struct MW32LogicalFont): Add a new member pnext.
	(MW32_INVOKE_HASHPROC): New macro.

	* mw32fns.c (mw32_WndProc [WM_MULE_IMM_SET_COMPOSITION_FONT]):
	Don't send the reply message because this UI-related message does not
	need to guarantee synchronous operation and message reachability.
	(mw32_WndProc [WM_MULE_IMM_SET_CONVERSION_WINDOW]): Likewise.

2002-07-18  MIYASHITA Hisashi  <himi@meadowy.org>

	* mw32term.c (mw32_initialize): Increase the message thread's
	stack size to 4MB.

2002-05-31  Keiichiro Nagano  <knagano@sodan.org>

	* mw32font.c (mw32font_set_frame_ime_font_by_llogfont): New
	function for IME font support.

	* mw32fns.c (mw32_set_frame_ime_font): New function for IME font
	support.
	(Fx_create_frame): Remove default value for the parameter
	'ime-font'.

2002-05-26  ABE Yasushi  <yas@meadowy.org>

	* mw32font.c (mw32_load_lf_from_lisp_object): Added support for
	bdf-font.
	(mw32_bdf_font): New struct.
	(mw32_bdffont_textout): New function.
	(mw32_bdffont_glyph_metric): New function.
	(mw32_bdffont_set_layout): New function.
	(mw32_bdffont_free): New function.
	(mw32_set_bdf_font): New function.

2002-04-23  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* emacs.c (Fdump_emacs): GetModuleFileName() returns upper-cased
	pathname on Win9x, so use xstrcmp() to compare.
	Correct comments on #else and #endif.

2002-04-22  Keiichiro Nagano  <knagano@sodan.org>

	* buffer.c (init_buffer): Always use getwd when WINDOWSNT.

2002-04-18  Keiichiro Nagano  <knagano@sodan.org>

	* buffer.c (reinit_buffer_once_1): Intialize
	buffer_permanent_local_flags at here.

	* emacs.c (Fdump_emacs): Always Fcopy_file temacs.exe -> emacs.exe
	on Windows.

	* mw32font.c (mw32_set_option_alist_to_logical_font): Fixed typo.

2002-04-16  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* makefile.nt (install): Modified to copy fns-VERSION.el.

2002-04-15  Keiichiro Nagano  <knagano@sodan.org>

	* makefile.nt (bootstrap-emacs): Copy dump file to bindir.
	(bootstrap-clean): Remove dump file.

	* alloc.c (PDUMP_HASH_SIZE): Set default value iff. it is not
	defined yet.
	(PDUMP_OBJECT_ARRAY_SIZE): Likewise.
	(pdump_message): fflush.
	(PDUMP_REGISTERING_MESSAGE): New macro.  Display stats of
	registering objects.  This should be set to noop usually.

2002-04-14  Keiichiro Nagano  <knagano@sodan.org>

	* Makefile.in: Do not compile in UNEXEC when PDUMP.
	(emacs): Add -nd option when PDUMP.
	(clean): Remove emacs.dmp when PDUMP is defined.

	* abbrev.c (reinit_syms_of_abbrev): New function.  Reinitialize
	abbrev_table.
	(syms_of_abbrev): Call reinit_syms_of_abbrev.

	* alloc.c (NSTATICSP): New constant.
	(staticpvec, staticpidx): New array to hold root objects which are
	not dumped by portable dumper.
	(Fmake_byte_code): Use Fmake_vector when PDUMP.
	(pure_alloc): Abort when called, when PDUMP_DEBUG is defined.
	(Fpurecopy): Return given obj immediately with no action when
	PDUMP.
	(staticpro_nopdump): New function.
	(Fgarbage_collect): Mark objects in staticpvec.
	(mark_object): Do not check pure space when PDUMP.  Throw obj to
	the object validity checker when
	PDUMP_CHECK_OBJECT_VALIDITY_ON_GC.
	(gc_sweep): Call unmark_pdumped_objects when PDUMP.
	(pdump_header_t): New struct.
	(pdump_forward_t): Likewise.
	(pdump_forward_pointer_t): Likewise.
	(pdump_forward_subr_doc_t): Likewise.
	(pdump_forward_interval_tree_t): Likewise.
	(pdump_forward_hash_table_t): Likewise.
	(pdump_root_t): Likewise.
	(PDUMP_HASH_SIZE): New constant.
	(PDUMP_OBJECT_ARRAY_SIZE): Likewise.
	(PDUMP_POINTERS_SIZE): Likewise.
	(PDUMP_SUBR_DOC_SIZE): Likewise.
	(PDUMP_INTERVAL_TREE_SIZE): Likewise.
	(PDUMP_HASH_TABLE_SIZE): Likewise.
	(PDUMP_OFFSET): Likewise.
	(pdump_hash): New variable that holds Lisp_Objects.
	(pdump_load_scheme): New enum.
	(pdump_current_load_scheme): New variable.
	(pdump_load_offset): Likewise.
	(pdump_object_type): New enum.
	(pdump_type_objects_t): New struct.
	(pdump_lisp_object): New variable.
	(pdump_pointers, pdump_pointers_index): Likewise.
	(pdump_subr_doc, pdump_subr_doc_index): Likewise.
	(pdump_interval_tree, pdump_interval_tree_index): Likewise.
	(pdump_hash_table, pdump_hash_table_index): Likewise.
	(pdump_header): Likewise.
	(pdump_objects_start): Likewise.
	(hash_put, hash_clear): New extern.
	(PDUMP_STRING_BYTES, PDUMP_LARGE_STRING_P,
	PDUMP_STRING_DATA_DUMP_SIZE_ALIGNMENT,
	PDUMP_STRING_DATA_DUMP_SIZE, PDUMP_LISP_STRING_DUMP_SIZE): New
	macros.
	(PDUMP_BOOL_VECTOR_SIZE, PDUMP_BOOL_VECTOR_P,
	PDUMP_VECTORLIKE_LENGTH, PDUMP_VECTORLIKE_SIZE,
	PDUMP_LISP_HASH_TABLE_SIZE, PDUMP_LISP_HASH_TABLE_ELEM_COUNT,
	PDUMP_LISP_HASH_TABLE_ALLOCATED_COUNT): Likewise.
	(pdump_message, PDUMP_MESSAGE): New function and macro for
	PDUMP_DEBUG.
	(pdump_hash_value): New function.
	(pdump_put_hash): Likewise.
	(pdump_get_hash): Likewise.
	(pdump_register_object): New function.
	(pdump_register_pointer): Likewise.
	(pdump_register_subr_doc): Likewise.
	(pdump_count_interval_tree_length,
	pdump_register_interval_tree_iter, pdump_register_interval_tree):
	Likewise.
	(pdump_register_hash_table): Likewise.
	(pdump_add_object): Likewise.
	(pdump_object_to_enum): Likewise.
	(pdump_forward_object): Likewise.
	(pdump_size): Likewise.
	(pdump_write_objects): New function.
	(pdump_add_special_buffers, pdump_write_special_buffers):
	Likewise.
	(pdump_write_coding_symbols): Likewise.
	(pdump): New function.
	(PDUMP_RELOCATE): New macro.
	(pdump_object_start_address): New function.
	(pdump_load_interval_tree, pdump_load_hash_table,
	pdump_read_coding_symbols): Likewise.
	(pdump_load): New function.
	(pdump_free): New function.
	(pdump_relocate_objects): New function.
	(unmark_pdumped_objects): New function.
	(pdump_check_hash_table): New function.
	(PDUMPED_PTR_P): New macro.
	(pdump_check_object_validity): New function.
	(pdump_check_object_validity_Lisp_Int,
	pdump_check_object_validity_Lisp_String_data,
	pdump_check_object_validity_Lisp_String_intervals,
	pdump_check_object_validity_Lisp_String,
	pdump_check_object_validity_Lisp_Vectorlike,
	pdump_check_object_validity_Lisp_Symbol,
	pdump_check_object_validity_Lisp_Misc,
	pdump_check_object_validity_Lisp_Cons,
	pdump_check_object_validity_Lisp_Float): Likewise.
	(pdump_check_root_objects): Likewise.
	(pdump_file_check_readable): New function.
	(PATH_MAX): Try to decide PATH_MAX from MAX_PATH, MAXPATHLEN when
	PATH_MAX is not given.
	(pdump_find_exe_path): New function.
	(pdump_find_dump_file): Likewise.
	(pdump_open_dump_file): Likewise.
	(Fpdump_load_scheme): New Lisp function that gives current load
	scheme.
	(Fpdump_relocated_p): New Lisp function that predicates whether
	pure data are reloctated while startup.
	(Fpdumped_p): New Lisp function that predicates whether this Emacs
	is dumped using the portable dumper.
	(reinit_alloc_once): New function.  Reinitialize global data.
	(init_alloc): Call reinit_alloc_once.

	* buffer.c (pdump_global_buffer_p): New function.
	(reinit_buffer_once_1): New function.
	(reinit_buffer_once_2): New function.
	(init_buffer_once): Call reinit_buffer_once_1, reinit_buffer_once_2.
	(syms_of_buffer): Do not pdump Vbuffer_defaults, Vbuffer_local_symbols,
	Vbuffer_alist.

	* callint.c (reinit_syms_of_callint): New function.  Reinitialize data.
	(syms_of_callint): Call reinit_syms_of_callint.

	* category.c (reinit_syms_of_category): New function.  Reinitialize
	category_table_version.
	(syms_of_category): Call reinit_syms_of_category.

	* coding.c (reinit_coding_once): New function.  Reinitialize
	data.
	(init_coding_once): Call reinit_coding_once.

	* config.in (HAVE_MMAP, PDUMP, PDUMP_DEBUG): New #undef,
	substituted by configure.
	(PDUMP_CHECK_OBJECT_VALIDITY_ON_GC): New #undef.

	* dispnew.c (reinit_syms_of_display): New function.  Reinitialize
	frame_and_buffer_state.
	(syms_of_display): Call reinit_syms_of_display.

	* editfns.c (reinit_syms_of_editfns): New function.
	(syms_of_editfns): Call reinit_syms_of_editfns.

	* emacs.c (print_version_and_exit): New function.
	(main): When PDUMP, set print_version and print version string later.
	Handle -nd option when PDUMP.
	Initialize initialized to the negation of no_dump.
	Call reinit functions to reinitialize global data when PDUMP.
	(standard_args): Add -nd.
	(Fkill_emacs): Call pdump_free when PDUMP.
	(Fdump_emacs): Call pdump when PDUMP.  Link temacs to emacs.

	* eval.c (reinit_eval_once): New function.  Reinitialize data.
	(init_eval): Call reinit_eval_once.

	* fns.c (HASH_KEY): Moved to lisp.h.
	(HASH_VALUE): Likewise.
	(HASH_NEXT): Likewise.
	(HASH_HASH): Likewise.
	(HASH_INDEX): Likewise.
	(HASH_TABLE_SIZE): Likewise.

	* fontset.c (reinit_syms_of_fontset): New function.  Reinitialize
	next_fontset_id.
	(syms_of_fontset): Call reinit_syms_of_fontset.

	* frame.c (syms_of_frame): Use staticpro_nodump for Vframe_list.

	* insdel.c (reinit_syms_of_insdel): New function.  Reinitialize
	combine_after_change_buffer.
	(syms_of_insdel): Call reinit_syms_of_insdel.

	* keyboard.c (syms_of_keyboard): Do staticpro on Qecho_area_clear_hook.

	* keymap.c (syms_of_keymap): Staticpro meta_map, control_x_map.

	* lisp.h (HASH_KEY): Moved from fns.c.
	(HASH_VALUE): Likewise.
	(HASH_NEXT): Likewise.
	(HASH_HASH): Likewise.
	(HASH_INDEX): Likewise.
	(HASH_TABLE_SIZE): Likewise.
	(DEFUN): Add PSEUDOVECTOR_FLAG.

	* lread.c (read1): Never use make_pure_string when PDUMP.
	(read_vector): Never use make_pure_vector when PDUMP.
	(read_list): Never use pure_cons when PDUMP.
	(make_symbol): Never use make_pure_string when PDUMP.
	(reinit_obarray): New function.  Reinitialize data.
	(init_obarray): Call reinit_obarray.  Use non pure version
	to construct data when PDUMP.

	* makefile.nt (EMACS_DMP): Filename of the dumped file.
	(emacs, bootstrap-emacs): Add -nd flag.
	(install): Install emacs.dmp.

	* minibuf.c (reinit_minibuf_once): New function.  Reinitialize
	Vminibuffer_list.
	(init_minibuf_once): Call reinit_minibuf_once.  Do
	staticpro_nopdump on Vminibuffer_list.
	(reinit_syms_of_minibuf): New function reinitialize minibuf_level.
	(syms_of_minibuf): Call reinitialize.

	* mw32fns.c (reinit_syms_of_w32fns): Call init_w32_parm_symbols.
	(syms_of_w32fns): Call reinit_syms_of_w32fns.

	* mw32font.c (reinit_syms_of_mw32font): New function.  Reinitialize
	data.
	(syms_of_mw32font): Call reinit_syms_of_mw32font.

	* mw32menu.c (reinit_syms_of_w32menu): New function.  Reinitialize
	menu_items to Qnil.
	(syms_of_w32menu): Call reinit_syms_of_w32menu.  Do
	staticpro_nopdump on menu_items.

	* print.c (syms_of_print): Mark Vprin1_to_string_buffer as non
	portable dumpable root object.

	* puresize.h (CHECK_IMPURE): Make this noop when PDUMP.
	(PURE_P): Always return FALSE when PDUMP.

	* search.c (reinit_syms_of_search): New function.
	(reinit_syms_of_search): Call reinit_syms_of_search.

	* w32.c (init_ntproc): Do not call check_windows_init_file when PDUMP.

	* w32fns.c (reinit_syms_of_w32fns): New function.
	(syms_of_w32fns): Call reinit_syms_of_w32fns.

	* w32menu.c (reinit_syms_of_w32menu): New function.
	(syms_of_w32menu):  Call reinit_syms_of_w32menu.

	* w32proc.c (syms_of_ntproc): Staticpro Qhigh and Qlow.

	* window.c (make_window): Initialize window->height_fixed_p and
	last_cursor_off_p.
	(reinit_window_once): New function.
	(syms_of_window): Call reinit_window_once.  Mark Vwindow_list as
	non-portable-dumpable root object.

	* xfaces.c (next_face_id): Remove static so that pdump can access
	this variable.
	(lface_id_to_name, lface_id_to_name_size): Likewise.
	(font_sort_order): Likewise.

	* xfns.c (reinit_syms_of_xfns): New function.
	(syms_of_xfns): Call reinit_syms_of_xfns.

	* xmenu.c (reinit_syms_of_xmenu): New function.
	(syms_of_xmenu): Call reinit_syms_of_xmenu.

	* xselect.c (reinit_syms_of_xselect): New function.
	(syms_of_xselect): Call reinit_syms_of_xselect.

2002-02-21  ABE Yasushi  <yasushi@stbbs.net>

	* mw32term.c (mw32_destroy_frame_hdc): Bug fix. Put
	INVALID_HANDLE_VALUE to released DC's cache slot

2002-02-09  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32term.c (mw32_get_frame_hdc): Bug fix.  Put the new hdc and
	frame to the last slot.
	(mw32_draw_relief_rect): Before drawing right edge, move
	to (right_x, top_y + 1).
	(mw32_expose_frame): Call expose_window_tree on f->root_window
	only if WINDOWP (f->root_window).
	(mw32_update_cursor): Call mw32_update_cursor_in_window_tree
	on f->root_window only if WINDOWP (f->root_window).

	* mw32fns.c (bmp_load): Free contents before exiting.

	* frame.c: Include mw32sync.h.
	(Fdelete_frame): During destroying windows, block the
	message thread by W32_BLOCK_INPUT.

2002-01-26  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32term.c (mw32_draw_relief_rect): Adjust bottom_y and right_x before actually
	drawing relieves.  And correct the coodinates of relief stencils.
	(mw32_draw_glyphs): Don't touch head->hdc when head is NULL.

	* mw32term.c (mw32_setup_default_hdc): Set hdc's background mode to
	TRANSPARENT.
	(mw32_draw_glyph_string_background): Only when really filled the
	background, set s->background_filled_p.
	(mw32_draw_glyph_string_foreground): When fulfilling the condition that
	we don't have to draw background, never draw background even if
	s->face->box is FACE_NO_BOX.

	* makefile.nt: Regenerate dependency rules.

	* mw32term.c (mw32_draw_image_foreground): When drawing cursor,
	select NULL_BRUSH not to fill the area by Rectangle ().
	(mw32_draw_hollow_cursor): Likewise.

	* keyboard.c (kbd_buffer_get_event): Remove the part for Meadow that
	waits for the next event.  MW32_read_socket() do the same thing.
	(gobble_input): Remoed the #if 0 part that calls note_sync_event().
	(async_handle_message): Removed.

	* mw32term.c (MW32_read_socket, mw32_message_loop): Rename MW32_read_socket
	into mw32_message_loop.  And create simple version of MW32_read_socket
	as an external interface for read_socket_hook().
	(mw32_async_handle_message): New function.  It replaces
	async_handle_message@keyboard.c.
	(mw32_initialize): Change the message thread's entry function to
	mw32_async_handle_message().

2002-01-25  MIYASHITA Hisashi  <himi@m17n.org>

	* window.c (delete_window): Set this function as critical section with
	W32_BLOCK_INPUT.
	(Fset_window_configuration): Likewise.

	* mw32term.c (MW32_update_begin): Remove W32_BLOCK_INPUT, because updating
	process dose not alter glyph matrices.
	(MW32_update_end): Remove W32_UNBLOCK_INPUT for the above reason.
	(mw32_new_focus_frame): Don't return even if frame is NULL.
	(note_mouse_movement): Suspend the main thread during mouse face updating
	procedure.
	(show_mouse_face): Setup message_thread_hdc if the current thread is
	message thread.
	(MW32_read_socket [WM_MOUSEMOVE]): Call note_mouse_movement(), and
	generate help events.
	(MW32_read_socket [WM_EMACS_CLEAR_MOUSE_FACE]): Call clear_mouse_face()
	instead of note_mouse_highlight().  And generate help events to clear
	help echo.
	(mw32_initialize): Duplicate the main thread handle, and set it to
	main_thread in order to control it from the message thread.

	* mw32font.c (Fw32_add_font_internal): Renamed from w32_add_font.
	(Fw32_change_font_attribute_internal): Renamed from
	w32_change_font_attribute.
	(syms_of_mw32font): Change each argument of defsubr for
	the above two functions.

	* xfaces.c (clear_font_table): Call mw32_delete_logical_font()
	to release plf.

2002-01-24  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32font.c: Include mw32bdf.h.
	(Qfunction, QCwidth, QCheight, QCfamily, QCweight, QCslant):
	Add declarations.
	(Qany, Qstrict_spec): New symbols.
	(mw32_select_logical_font_loader): Removed.
	(mw32_lf_loader_num, mw32_lf_loaders): New variables.
	(mw32_load_font, load_face_font): Call mw32_load_lf()
	instead of MW32_INVOKE_LOADLFPROC().
	(mw32_internal_add_font): Set pfr->idx.  Remove the
	lines on setting pfr->FR and pfr->loadlf.
	(check_lisp_object_logfont): New function.
	(mw32_add_lf_loader): New function.
	(mw32_load_lf): New function.
	(mw32_delete_logical_font): Make this function non-static.
	(mw32_set_option_alist_to_logical_font): New function.
	(mw32_load_lf_from_lisp_object): New function.
	(mw32_select_logical_font_loader): Removed.
	(mw32_fr_spec_match_p): New function.
	(mw32_strict_logical_font_loader): New function.
	(mw32_convert_face_attrs): New function.
	(mw32_elisp_logical_font_loader): New function.
	(Fw32_check_logfont): Now it only calls check_lisp_object_logfont.
	(syms_of_mw32font): Init Qany and Qstrict_spec.
	(syms_of_mw32font): Add mw32_strict_logical_font_loader,
	mw32_elisp_logical_font_loader, and mw32_default_logical_font_loader
	as lf loaders.

	* mw32fns.c (mw32_set_scroll_bar_width): Use
	FRAME_DEFAULT_FONT_WIDTH().  And add the code to set
	scroll bar pixel width to the column width of scroll bar,
	but it is desabled.

	* mw32term.c (MW32_set_vertical_scroll_bar): Don't put the
	center of the area defined by SCROLL_BAR_COLS.  Put the
	left boundary because the right side area is nallowed by
	window adjustment.

	* mw32font.h: Don't include mw32bdf.h here.
	(MW32FontRequest): Add idx.  And, remove FR and laodlf.
	(MW32_INVOKE_LOADLFPROC): Removed.
	(mw32_add_lf_loader, mw32_load_lf, mw32_delete_logical_font):
	Add declarations.

2002-01-22  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32font.c (mw32_plf_table): replaces mw32_lf_table with it.
	(mw32_plf_alloced_num): replaces mw32_lf_alloced_num.
	(mw32_get_font_info): Lookup mw32_plf_table to obtain the
	pointer of the corresponding LF.
	(mw32_compute_min_glyph_bounds): Likewise.
	(load_face_font): Likewise.
	(mw32_add_logical_font): When expanding mw32_plf_table, fill
	created slots with NULL pointer.  And set the pointer of
	allocated LF.  Note that the allocated LF must be filled with 0.
	(mw32_delete_logical_font): When deleting LF, clear the corresponding
	slot in mw32_plf_table with NULL, and do xfree on the pointer of LF.

	* mw32font.h: Add comments on the license.

	* makefile.nt: Regenerate dependency rules with makedepend.pl.
	* makefile.nt (EMACS_ROOT, SRC): Move it to the head of this file.
	(ALLOBJES, MAKEDEPEND): New macros.
	(depend): New target.

	* mw32fns.c (mw32_WndProc [WM_SIZE]): Remove the part on
	change the frame size because WM_WINDOWPOSCHANGED do it.
	(mw32_WndProc [WM_WINDOWPOSCHANGED]): When the client area
	is smaller than the required size, ignore it and call
	DefWindowProc().

2002-01-21  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32fns.c (x_set_tool_bar_lines, valid_image_p): Merge
	the differences of xterm.c between 21.0.104 and 21.1.
	(Vmw32_max_tooltip_size): New variable.  It comes from
	21.1.
	* mw32fns.c: replace the code on tooltip with that of 21.1.

	* mw32term.c (fast_find_position): Merge the differences of xterm.c
	between 21.0.104 and 21.1.
	(notice_overwritten_cursor): Likewise. (Renamed from note_overwritten_text_cursor.)
	(mw32_get_glyph_string_clip_rect): Merge the differences of xterm.c
	between 21.0.104 and 21.1.
	(mw32_draw_glyph_string, mw32_set_glyph_string_background_width)
	(mw32i_write_glyphs, mw32i_insert_glyphs)
	(mw32i_clear_end_of_line, expose_window_tree, mw32_expose_frame)
	(expose_line, expose_window, note_mouse_highlight)
	(show_mouse_face): Likewise.

2002-01-20  Shuichi KITAGUCHI  <kit@meadowy.org>

	* xfaces.c (x_display_list): add new #define.

	* xterm.c: Sync up with 21.1.

	* xfns.c: Sync up with 21.1.

	* xfaces.c: Sync up with 21.1.

	* xdisp.c: Sync up with 21.1.

	* window.c: Sync up with 21.1.

	* w32fns.c: Sync up with 21.1.

	* sinkmask.h: Sync up with 21.1. (Removed)

	* sink11mask.h: Sync up with 21.1. (Removed)

	* sink11.h: Sync up with 21.1. (Removed)

	* sink.h: Sync up with 21.1. (Removed)

	* process.c: Sync up with 21.1.

	* minibuf.c: Sync up with 21.1.

	* lisp.h: Sync up with 21.1.

	* keymap.c: Sync up with 21.1.

	* keyboard.c: Sync up with 21.1.

	* insdel.c: Sync up with 21.1.

	* indent.c: Sync up with 21.1.

	* frame.c: Sync up with 21.1.

	* fontset.c: Sync up with 21.1.

	* fns.c: Sync up with 21.1.

	* fileio.c: Sync up with 21.1.

	* emacs.c: Sync up with 21.1.

	* dispnew.c: Sync up with 21.1.

	* dispextern.h: Sync up with 21.1.

	* dired.c: Sync up with 21.1.

	* coding.c: Sync up with 21.1.

	* callproc.c: Sync up with 21.1.

	* buffer.c: Sync up with 21.1.

	* alloc.c: Sync up with 21.1.

2002-01-18  MIYASHITA Hisashi  <himi@m17n.org>

	* makefile.nt (OBJ1): When MEADOW is defined, add mw32atimer.obj
	not atimer.obj.

	* mw32fns.c: Almost totally rewrite it by merging with mw32fns.c.

	* mw32term.c: Almost totally rewrite it by merging with xterm.c.
	In this ChangeLog, write only the important part of changes.
	(1) Now, in order to obtain HDC, use mw32_get_frame_hdc() instead
	of directly calling GetDC() or something else except for the message
	thread.  If obtaining HDC in the message thread, you can directly call
	GetDC() but you MUST set it to message_thread_hdc!  If you used
	mw32_get_frame_hdc() to obtain HDC, you don't have to release it.
	HDC manager automatically release it when it cannot allocate a new DC.
	(2) When you change the state of DC, you MUST restore it by using SaveDC()
	or something else!
	(3) Glyph string layout of characters must be rearranged by layoutproc
	of LF.  In the current implementation, we prepare layout information
	by refering the glyph metric information, but layoutproc could overwrite
	the such predefined metric.
	(4) Images must be stored in the format of DIB that could be interpreted
	by CreateDIBSection().

	* mw32term.h: Almost totally rewrite it by merging with xterm.h.
	In this ChangeLog, write only the summary of changes.
	(1) Newly introduce mw32_display_info.  It has DC cache slots.
	(2) Renew mw32_output by merging with x_output.
	(3) The prefix of many macro names are changed from w32 to mw32.
	(4) Declare function declarations defined in mw32term.c, mw32fns.c,
	mw32menu.c, mw32ime.c and xfaces.c
	(5) Introduce new code conversion macros, MW32_ENCODE_TEXT
	and MW32_ENCODE_CSTR.

	* mw32font.c: Almost totally rewrite it for Meadow 2 new font system.
	In this ChangeLog, write only the summary of changes.
	(1) Introduce FR/LF/PF layers, c.f. Meadow-white-paper-font.txt.
	(2) This module overwrite load_face_font and set_font_frame_param
	to load fonts for faces.  So directly accesses fontset database.
	(3) Only LF methods deal with actual PF layer.  mw32font.c also
	provides windows_font LF methods.  mw32bdf.c will provide these
	methods for BDF later.
	(4) Now w32-add-font adds new FR, and Meadow font system will properly
	load a new LF from the FR infomation data and the face data that will
	be given at realization time.
	!!!Note that the current FR implementation is very rudimentary.
	This version could not call Elisp function to obtain LF, it
	colud only select the default LF loader.

	* mw32font.h: Almost totally rewrite for Meadow 2 new font system.
	(MW32CharMetric): New struct.
	(FontCp): New Font Codepoint data type.
	(LOADLFPROC, OUTPUTPROC, LAYOUTPROC, FREEPROC): New FR/LF handler.
	(MW32FontRequest): New struct(FR).
	(MW32LogicalFont): New struct(LF).
	(FONT_WIDTH, FONT_HEIGHT, FONT_BASE, FONT_NAME): New macros.
	(MW32_LF_EMPTY_SLOT_P, MW32_FONT_INFO_FROM_FONT): LF accessing macros.
	(MW32_INVOKE_OUTPUTPROC, MW32_INVOKE_METRICPROC)
	(MW32_INVOKE_LAYOUTPROC, MW32_INVOKE_FREEPROC): LF Method invocation
	macros.
	(MAKEFONTCP, SERIALIZE_FONTCP): New macros to construct FontCp.
	(load_face_font, set_font_frame_param): New function declarations.

	* mw32menu.c: Include charset.h, coding.h, and dispextern.h.
	And remove the part on including coding.h that is only for MEADOW.
	(appendmenu_encode): Use MW32_ENCODE_CSTR().
	(modifymenu_encode): Likewise.
	(insertmenu_encode): Likewise.
	(Fx_popup_menu): Call check_mw32() to check the facility.
	(Fx_popup_menu): Use SELECTED_FRAME() instead of selected_frame.
	(Fx_popup_menu): Use FRAME_DEFAULT_FONT_WIDTH() and FRAME_LINE_HEIGHT()
	to caliculate xpos and ypos.
	(Fx_popup_menu): Use get_keymap() also for checking the object validity.
	And change the calling fashion of get_keymap.
	(popup_activated): New function.
	(menubar_selection_callback): Use mw32_window_to_frame() instead of
	w32_window_to_frame().
	(menubar_selection_callback): Change the event kind to MENU_BAR_EVENT.
	(set_frame_menubar, mw32menu_show): Change the output_data member
	from w32 to mw32.
	(set_frame_menubar, mw32menu_show): Use FRAME_MW32_WINDOW().
	(free_frame_menubar): Likewise.
	(syms_of_mw32menu): Renamed from syms_of_w32menu.

	* mw32ime.c: Include windows.h at the top.  And don't define NULL
	macro here.  Include mw32term.h only if HAVE_NTGUI is defined.
	(hinst, hprevinst, lpCmdLine, nCmdShow): Declare them as `extern'
	variables.
	(mw32_set_ime_conv_window): Change the function interface.  This
	function now takes hwnd, x, and y.  And change the prefix from
	w32 to mw32.
	(mw32_set_ime_status): Change the prefix from w32 to mw32.
	(mw32_get_ime_status): Likewise.
	(conversion_agent_wndproc): Change the function prefix from w32
	to mw32.
	(Ffep_force_on): Use SELECTED_FRAME() instead of selected_frame.
	And use FRAME_MW32_WINDOW() instead of FRAME_W32_WINDOW().
	(Fw32_ime_register_word_dialog): Use MW32_ENCODE_TEXT().
	(Fw32_ime_associate_context): Use FRAME_MW32_WINDOW().
	(Fw32_ime_get_composition_string): Don't use not Fconcat() but concat2().

	* mw32reg.c: Include lisp.h.  But don't include blockinput.h.
	(mw32_get_resource_with_class, mw32_get_string_resource)
	(mw32_get_env_resource): Change the prefix from w32 to mw32.

	* mw32reg.h (mw32_get_resource, mw32_get_resource)
	(mw32_get_resource): Change the prefix from w32 to mw32.

	* mw32oime.c (Ffep_force_on): Use FRAME_MW32_WINDOW() instead of
	FRAME_W32_WINDOW().
	(Ffep_force_off): Likewise.
	(Ffep_get_mode): Likewise.
	(Fdoes_ime_have_undetermined_strings): Likewise.
	(mw32_set_ime_conv_window): Likewise.
	(mw32_set_ime_conv_window): Renamed from w32_set_ime_conv_window().
	(mw32_ime_font): Likewise.
	(mw32_ime_control_init): Likewise.

	* mw32sync.h (mw32_special_input): Renamed from w32_special_input.

	* mw32dl.c: Change my e-mail address.
	(set_function_documentation, set_variable_documentation)
	(free_function_documentation, free_variable_documentation):
	Add Qnil for the new argument of Fintern_soft().
	(Fdll_function_call): Removed.

	* mw32clpbd.c (MW32_MULE_CB_REQSIZE, MW32_MULE_CB_SIZE)
	(MW32_MULE_CB_CONTENTS, MW32_MULE_SET_CB): Renamed from W32_* to MW32_*.
	(Fw32_set_clipboard_data, Fw32_get_clipboard_data): Use MW32_MULE_* macros
	instead of W32_MULE_* macros.

	* mw32bdf.c: Add GPL copyright notice.

	* mw32atimer.c: New file.  Substitute it for atimer.c on Meadow.

	* keyboard.c (make_lispy_event [w32_mouse_wheel]): Change
	the calling fashion of pixel_to_glyph_coords() and
	glyph_to_pixel_coords().
	(gobble_input): Don't call note_sync_event().  We'll take
	consideration to it later.

	* dispextern.h (struct glyph): Don't define w32_font_type if MEADOW
	is defined.
	(struct face): Don't define gc if MEADOW is defined.
	(struct face): Define stipple as not Pixmap but int.
	(PREPARE_FACE_FOR_DISPLAY): Make it void when MEADOW is defined.
	(mw32_image): Define it when MEADOW is defined.  I'll move it to
	mw32term.h later.
	(struct image): When MEADOW is defined, defined mw32_img as mw32_image
	and mask as HBITMAP instead of defining them as Pixmap.
	(gamma_correct): Change the function declaration.

	* dispnew.c: Include mw32sync.h and mw32term.h when MEADOW is defined.
	(adjust_glyphs): Set this function as critical section with
	W32_BLOCK_INPUT.
	(free_glyphs): Likewise.
	(change_frame_size_1): Likewise but apply it to the part of this
	function.

	* xfaces.c: If MEADOW is defined, (1) include mw32term.h and fontset.h;
	and (2) define x_display_info as mw32_display_info, check_x_frame as
	check_mw32_frame, and x_list_fonts as mw32_list_fonts.
	(XColor): Don't define here if MEADOW is define, because mw32term.h
	defines it.
	(set_font_frame_param): Don't define it here because mw32font.c defines it.
	(load_face_font): Likewise.
	(choose_face_font): Likewise.
	(x_create_gc, x_free_gc): Don't define them if MEADOW is defined.
	(init_frame_faces): Use FRAME_MW32_WINDOW if MEADOW is defined.
	(clear_font_table): Free font_info->font with MW32_INVOKE_FREEPROC.
	Notice that this operation is invalid!!!
	(defined_color): When MEADOW is defined, call x_defined_color().
	(x_face_list_fonts): When MEADOW is defined, call x_list_fonts(),
	which is acutually mw32_list_fonts().
	(free_realized_face): Don't operate GC when MEADOW is defined.
	(prepare_face_for_display): Likewise.
	(clear_face_gcs): Likewise.
	(realize_x_face): Likewise.
	(dump_realized_face): Likewise.

	* w32gui.h: Change the alias of XFontStruct to MW32LogicalFont.

	* w32.c (init_environment): Set BITMAPPATH.
	(init_w32system): Initialize mw32_mule_clipboard_format, which
	is renamed from w32_mule_clipboard_format.

	* w32.h (mw32_mule_clipboard_format): Renamed from
	w32_mule_clipboard_format.

	* w32console.c (initialize_w32_display): Don't call w32_initialize_display_info()
	if Meadow is defined.

	* w32heap.c: Merged from Meadow-1_X branch.

	* window.c: Include mw32term.h if MEADOW is defined.
	(set_window_buffer): Save w->buffer to tem to access it from
	where we call Qset_selected_window_buffer_functions hook.

	* process.c (Fstart_process): Merged from Meadow-1_X branch.

	* fontset.c (Vfontset_table): Remove `static' qualifier to make it accessible
	from mw32font.c.
	(fontset_set, fontset_ref_via_base): Likewise.

	* emacs.c (main): Call init_w32system() before any other initialization
	functions because it initializes important critical sections for Meadow.
	(main): Rewrite the part on calling syms_of_mw32*().

	* dired.c (directory_files_internal): Merged from Meadow-1_X branch.

	* ChangeLog: Sync up with 21.0.104.
	* alloc.c: Likewise.
	* blockinput.h: Likewise.
	* buffer.c: Likewise.
	* callproc.c: Likewise.
	* category.c: Likewise.
	* ccl.c: Likewise.
	* ccl.h: Likewise.
	* charset.c: Likewise.
	* charset.h: Likewise.
	* coding.c: Likewise.
	* coding.h: Likewise.
	* dired.c: Likewise.
	* dispextern.h: Likewise.
	* dispnew.c: Likewise.
	* emacs.c: Likewise.
	* fileio.c: Likewise.
	* fns.c: Likewise.
	* fontset.c: Likewise.
	* frame.c: Likewise.
	* frame.h: Likewise.
	* indent.c: Likewise.
	* insdel.c: Likewise.
	* keyboard.c: Likewise.
	* keymap.c: Likewise.
	* lisp.h: Likewise.
	* lread.c: Likewise.
	* makefile.nt: Likewise.
	* minibuf.c: Likewise.
	* process.c: Likewise.
	* termhooks.h: Likewise.
	* w32.c: Likewise.
	* w32.h: Likewise.
	* w32console.c: Likewise.
	* w32fns.c: Likewise.
	* w32gui.h: Likewise.
	* w32inevt.c: Likewise.
	* w32proc.c: Likewise.
	* w32xfns.c: Likewise.
	* window.c: Likewise.
	* xdisp.c: Likewise.
	* xfaces.c: Likewise.
	* xfns.c: Likewise.
	* xterm.c: Likewise.
	* m/ews4800.h: Likewise.
	* s/bsdos4.h: Likewise.
	* s/irix6-5.h: Likewise.
	* s/ms-w32.h: Likewise.
	* s/ux4800.h: Likewise.

	* line.h: Removed. (Sync up with 21.0.104)
	* unexencap.c: Removed. (Sync up with 21.0.104)
	* unexfx2800.c: Removed. (Sync up with 21.0.104)
	* unexsgi.c: Removed. (Sync up with 21.0.104)
	* vms-pp.c: Removed. (Sync up with 21.0.104)
	* vms-pp.trans: Removed. (Sync up with 21.0.104)
	* vms-pwd.h: Removed. (Sync up with 21.0.104)
	* vmsdir.h: Removed. (Sync up with 21.0.104)
	* vmsfns.c: Removed. (Sync up with 21.0.104)
	* vmsgmalloc.c: Removed. (Sync up with 21.0.104)
	* vmsmap.c: Removed. (Sync up with 21.0.104)
	* vmspaths.h: Removed. (Sync up with 21.0.104)
	* vmsproc.c: Removed. (Sync up with 21.0.104)
	* vmsproc.h: Removed. (Sync up with 21.0.104)
	* vmstime.c: Removed. (Sync up with 21.0.104)
	* vmstime.h: Removed. (Sync up with 21.0.104)
	* w32faces.c: Removed. (Sync up with 21.0.104)
	* x-list-font.c: Removed. (Sync up with 21.0.104)
	* m/iris5d.h: Removed. (Sync up with 21.0.104)

2001-08-29  Hideyuki SHIRAI  <shirai@meadowy.org>

	* coding.c (code_convert_string): Apply patch from Miyashita-san.
	Enable pre_post_conversion when code_convert_region.

2001-08-28  Kyotaro HORIGUCHI	<horiguti@meadowy.org>

	* dired.c (Fdirectory_files): Add missing GCPROs.
	(Sync up with emacs-20.7.3)

2001-08-27  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* mw32term.c: Fix for windows rect usage.
	(pixel_to_glyph_coords): Calculate rect width and height
	correctly.
	(w32_draw_box): ditto.
	(x_set_window_size): ditto.

	* mw32fns.c: Bug fix for internal-border-width and windows rect
	usage.
	(w32_WndProc [WM_SIZE]): Calculate rect width and height
	correctly.
	(w32_WndProc [WM_WINDOWPOSCHANGED]): Calculate rect width and
	height correctly. And calculate wdiff and hdiff considering
	internal-border-width.
	(Fx_create_frame): Default value of internal-border-width is 1.

2001-08-21  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* w32heap.c: Cancel last import except allocate_heap().
	(allocate_heap): Enable probing heap memory area for the problem
	of "runtime error R6027 - not enough space for lowio initialization".

2001-08-21  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* w32heap.c: Import whole code from emacs-20.7.

2001-08-21  Shun-ichi GOTO  <gotoh@taiyo.co.jp>

	* mw32term.h (struct w32_output): New struct member dwStyleEx to
	hold extended window style.

	* mw32term.c (x_set_window_size): Use AdjustWindowRectEx() instead
	of AdjustWindowRect() to use extended window style.

	* mw32fns.c (check_x_frame): New function from w32fns.c.
	(Fw32_send_sys_command): Likewise.
	(w32_real_positions): Use AdjustWindowRectEx() instead of
	AdjustWindowRect() to use extended window style.
	(w32_WndProc): Likewise.
	(w32_create_frame_window): Use CreateWindowEx() instead of
	CreateWindow() to use extended window style.
	(Fx_create_frame): Use extended window style WS_EX_CLIENTEDGE as
	default.
	(syms_of_w32fns): Register new function w32_send_sys_command.

2001-07-31  Kyotaro HORIGUCHI	<horiguti@meadowy.org>

	* mw32ime.c (w32_ime_register_word_dialog): Show mouse cursor
	on popping the dialog up.

2001-05-09  KOSEKI Yoshinori  <kose@meadowy.org>

	* regex.c (re_match_2_internal): Add `if (immediate_quit) QUIT;'
	(Sync up with emacs-20.7.3)

2000-12-21  Andrew Innes  <andrewi@gnu.org>

	* w32xfns.c (select_palette): Avoid calling SelectPalette if
	palette is NULL, since this corrupts memory!  Also get
	display_info reference from frame.
	(Sync up with emacs-20.7.3)

2000-10-30  Kenichi Handa <handa@etl.go.jp>

	* search.c (Fset_match_data): Be sure to make search_regs always
	sane.

1999-12-07  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* dired.c (Fdirectory_files): [MD:1632]
	When re_search, ctrl-G problem Fix.

2001-04-24  Hideyuki SHIRAI  <shirai@meadowy.org>

	* sysdep.c: Delete duplicate '#define setpgrp setpgid'.

2001-04-23  KOSEKI Yoshinori  <kose@meadowy.org>

	* sync up with emacs-20.7

2001-03-30  Keiichi Suzuki  <keiichi@nanap.org>

	* mw32term.c (note_mouse_movement): Invalid mouse movement check,
	fix.

2001-03-16  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32term.c(w32_mouse_wheel_handler): Make compatibe with
	Sony VAIO Jog Dial Utility.

2001-03-11  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c: clear mouse-face on WM_NCMOUSEMOVE.
	  (Moved from WM_SETCURSOR(lParam!=HTCLIENT))
	(w32_track_popup_menu): Show mouse on popup menu and won't hide.
	* mw32font.c(w32-query-get-logfont):
	Show mouse cursor on dialogue.
	* mw32term.c: new C variable mouse_cursor_stat.
	new elisp variable w32-hide-mouse-timeout, w32-hide-mouse-on-key.
	new function lock_mouse_cursor_visible.
	(note_mouse_highlight): clear mouse-face when mouse-cursor hides.
	(w32_menu_bar_store_activate_event): lock mouse cursor visible on
	menu.
	(W32read_socket[WM_KEYDOWN]): Hide mouse cursor on key in.
	(W32read_socket[WM_MOUSEMOVE],[WM_NCMOUSEMOVE]):
	Show mouse cursor on mouse move.
	(W32read_socket[WM_[LMR]]BUTTONDOWN):
	Show mouse cursor on click mouse button.
	* mw32term.h: definition of lock_mouse_cursor_visible.

2001-03-06  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c: FIX: Clearing mouse-face with kill focus.

2001-03-06  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c: FIX: Clearing mouse-face when mouse cursor enters
	menu-bar.
	(WM_SETCURSOR ,lParam!=HTCLIENT): Triggers clearing mouse-face.
	* mw32term.c (note_mouse_highlight): Bug fix. x = -1, y = -1 surely
 	clears mouse-face.
	(WM_EMACS_CLEAR_MOUSE_FACE): Clear mouse-face.
	* mw32term.h (WM_EMACS_CLEAR_MOUSE_FACE): New message added.

2001-03-05  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c: Correct caret vertical position.

2001-02-22  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c: Add new frame parameter 'cursor-height'
	Add new global variable Qcursor-height.
	(FRAME_CURRENT_CURSOR): Replace one w32 frame parameters to
	 access via macro.

	KNOWN_BUGS..Now it is effective only for caret cursors.

	* mw32term.h: Add two macros, and one variable.
	(FRAME_CURRENT_CURSOR, FRAME_CURSOR_HEIGHT): Macro added.
	(w32_output): add cursor_height;

	* mw32term.c: Replace some variable access to macro, see above.

2001-02-22  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c: Add new caret type 'hairline'
	* mw32term.h:
	* mw32fns.c:
	 Add new global variable Qhairline_caret
	(w32_set_cursor_type):
	(w32_WndProc):

	* mw32term.h: (text_cursor_kinds): Add hairline_caret_cursor.

	* mw32term.c: Handle all caret cursors
	(W32update_end):
	(w32_display_caret_cursor): Modify parameter meaning.
	(w32_display_cursor): Pass parameter 'caret_type' to
	w32_display_caret_cursor.

2001-02-21  Kyotaro HORIGUCHI  <horiguti@meadowy.org>

	* mw32fns.c: caret cursor type (solid/checkered)
	 Add new global variable Qcheckered_caret
	(w32_set_cursor_type):
	(w32_WndProc):

	* mw32term.h: (text_cursor_kinds): Add checkered_caret_cursor.

	* mw32term.c: Handle checkered_caret_cursor
	(W32update_end):
	(w32_display_caret_cursor): Add parameter 'checkered'.
	(w32_display_cursor): Pass parameter 'checkered' to
	w32_display_caret_cursor.

2001-02-21  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32term.c (W32update_end): If frame's current cursor
	is not caret, don't show caret.
	(W32write_glyphs): Hide caret if there is no updating frame.
	If updating, don't control caret state because Meadow is in
	the critical section.

2001-02-21  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32term.c (W32write_glyphs): Remove the part on controling the
	caret state.
	(W32update_begin): Erase the caret before updating.
	(W32update_end): Restore the caret after updating.

2001-02-21  Kyotaro HORIGUCHI <horiguti@meadowy.org>

	* w32proc.c (variable process_dir): Protect process_dir from
	reallocation of source data memory.

2001-02-08  Kyotaro HORIGUCHI   <horiguti@meadowy.org>

	* alloc.c(make_string): Use multibyte_chars_in_text to create
	multibyte string correctly for parameter 'contents' containing
	multibyte characters.

2001-01-21  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32fns.c (w32_set_frame_ime_font): We don't need
	to call w32_set_ime_font() here because the window proc.
	calls it.

2001-01-05  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32term.c (W32write_glyphs): After f is set, hide a caret.

2001-01-04  MIYASHITA Hisashi  <himi@m17n.org>

	* mw32fns.c: Add new global variable Qcaret.
	(w32_set_cursor_type): Deal with the case of Qcaret.
	(w32_WndProc[WM_SETFOCUS]): Initialize caret if current_cursor
	is caret_cursor.
	(w32_WndProc[WM_KILLFOCUS]): Call DestroyCaret() if caret is
	present.
	(w32_WndProc[WM_EMACS_SETCARET]): Set a caret for the frame f.
	(syms_of_w32fns): Initialize Qcaret.

	* mw32term.c (w32_fill_rect): Before drawing,
	hide the caret if exists.  After drawing,
	restore the state.
	(W32write_glyphs): Likewise.
	(w32_display_caret_cursor): New function.
	(w32_display_cursor): If FRAME_DESIRED_CURSOR is caret_cursor,
	call w32_display_caret_cursor like the others.
	(w32_get_glyph_width): New function.

	* mw32term.h (text_cursor_kinds): Add caret_cursor.
	(struct w32_output): Add a new member, caret_state.
	(WM_EMACS_SETCARET): New macro.
	(w32_get_glyph_width) New function declaration.

2000-06-28  MIYASHITA Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.h (WM_MULE_IMM_SET_COMPOSITION_FONT): New macro.
	(WM_MULE_IMM_SET_COMPOSITION_FONT_REPLY): likewise.

	* mw32fns.c (w32_WndProc): Modify test code on
	w32_set_ime_font() to check the facility of
	ImmSetCompositionFont.
	(w32_WndProc[WM_MULE_IMM_SET_COMPOSITION_FONT):
	This message invokes w32_set_ime_font().
	(w32_set_frame_ime_font):
	Send a message instead of setting the composition font
	of IME directly.

2000-06-22  MIYASHITA Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* ccl.c (ccl_driver[CCL_End]): Decrement stack_idx
	only when it is more than 0.

2000-06-15  MIYASHITA Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32clpbd.c (W32_MULE_CB_REQSIZE):
	(W32_MULE_CB_SIZE):
	(W32_MULE_CB_CONTENTS):
	(W32_MULE_SET_CB):
	New macros to access new clipboard format.
	(Fw32_set_clipboard_data):
	(Fw32_get_clipboard_data):
	Use the above macros to set mule specific clipboard format.

	* w32.h (MULE_CLIPBOARD_FORMAT): modified in order to upgrade
	format version.

2000-05-15  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* .cvsignore: Add *.idb.

	* fileio.c (Ffile_writable_p): When dir exists,
	return t without checking the read-only attribute.

2000-04-11  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32bdf.c (draw_for_invalid_index): New function.
	(mw32_BDF_TextOut):
	When we cannot find out any griphs, display a
	circle with slash.

2000-04-10  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.h (Vw32_system_coding_system):
	Moved to coding.h from Emacs 20.6.

2000-04-09  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.c (dumpglyphs):
	If encoding is ENCODING_UNICODE, call W API for rendering font.

	* mw32font.h (ENCODING_DIMENSION):
	(ENCODING_BYTE1MSB1):
	(ENCODING_BYTE2MSB1):
	(ENCODING_BYTE2LSB1):
	(ENCODING_SHIFTJIS):
	(ENCODING_UNICODE):
	Define encoding number macros.

	* charset.c (str_cmpchar_id):
	Fix CVS merge mistakes.

2000-04-07  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* ccl.c: comment fixed. And merged to the newest version.
	(MAX_MAP_SET_LEVEL): increased to 30.
	(PUSH_MAPPING_STACK): Enclose with do-while block.
	(POP_MAPPING_STACK): Likewise.
	(stack_idx_of_map_multiple): New variable.
	(CCL_CALL_FOR_MAP_INSTRUCTION): New macro.
	(ccl_driver) <CCL_IterateMultipleMap>: If content is a symbol,
	call the corresponding CCL program by CCL_CALL_FOR_MAP_INSTRUCTION.
	(ccl_driver) <CCL_MapSingle>: Likewise.
	(ccl_driver) <CCL_MapMultiple>: Rewrited in order to remove many
	bugs, deal with the case where looking up process reaches to the
	end of map-set, and call CCL programs like the above change.

2000-03-09  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c (detect_coding_utf_8):
	Don't skip extra octets.

2000-02-26  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c (detect_coding_mask): Even if `priorities' are not
	specified, check utf-8 and utf-16 coding systems as well as other
	coding systems.

2000-02-25  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* ccl.c (ccl_driver[CCL_MapMultiple]):
	When the mapped valued is lambda, set the map index to reg[RRR].
	(ccl_driver[CCL_MapSingle]):
	When the mapped valued is found, set 0 to reg[RRR].
	Otherwise, set -1 to reg[RRR].

2000-02-16  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.c (x_set_mouse_pixel_position):
	Adjust given mouse corsor position by ClientToScreen().
	(Thanks K.Horiguchi).

	* mw32fns.c (w32_WndProc):
	(x_report_frame_params):
	Likewise.

2000-01-29  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* keymap.c (Fsingle_key_description):
	(describe_buffer_bindings):
	Use KEY_DESCRIPTION_SIZE to obtain buffer size.

	* keyboard.c (echo_char):
	Use KEY_DESCRIPTION_SIZE to obtain buffer size.

	* w32.c (check_windows_init_file):
	When fail to obtain EMACSLOADPATH, show MessageBox().

	* lisp.h (KEY_DESCRIPTION_SIZE):
	New macro.

	* ccl.c (ccl_driver[CCL_WriteExprConst, CCL_WriteExprRegister]):
	Set the next ic to jump_address.
	(ccl_driver[ccl_set_expr]):
	Set jump_address to the current ic even if code is
	CCL_WriteExprConst or CCL_WriteExprRegister.

	* lread.c (init_lread):
	On cd-bootable Meadow, don't set Vload_path.

	* w32.c (check_windows_init_file):
	Add cd_load_path to load_path for cd-bootable Meadow.
	(init_w32system):
	Set cd_lock_path for cd-bootable Meadow.

	* unexw32.c:
	Define invocation_path, cd_exec_path, cd_load_path,
	cd_info_path, cd_doc_path, and cd_lock_path for cd-bootable
	Meadow.
	(_start):
	Set the above variables at startup.

	* mw32term.c (EmacsTranslateMessage):
	Add comments on ToAscii.

	* emacs.c (main):
	Load cd-startup.el if cd-bootable executable.
	(main):
	bug fix.  Set no_loadup correctly.

1999-11-12  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* window.c (syms_of_window):
	Fix documentation strings on select-window-functions and
	set-selected-window-functions.

1999-10-28  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (getwd):
	Normalize path by dostounix_filename().

1999-10-15  Kenichi Handa  <handa@etl.go.jp>

	* fns.c (Fstring_as_multibyte): Call
	register_composite_chars_string for a multibyte string.

1999-10-14  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.c (dumpglyphs):
	Also when charset is ascii, initialize cps.
	Use font_unit_bytes instead of charset_dimension
	as a length of byte stream of a character in the
	case of cmpcharp.

1999-10-10  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.c (w32_menu_bar_store_activate_event):
	During creating menu structure, Meadow maybe
	call certain Emacs Lisp function that require
	msg thread's operation.  Therefore, even during
	menu updating phase, we wait only for 1 second.

1999-10-03  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c (code_convert_string):
	Apply patch from Handa-san.
	recode_unwind_protect() for safety against
	an error of temp_output_buffer_setup().
	And deal with encoding of unibyte string.

1999-10-01  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32fns.c (w32_WndProc[WM_SETFOCUS]):
	If selected_frame is the focused frame,
	or selected_frame is the initial terminal frame,
	not generate WM_EMACS_ACTIVATE.

1999-09-28  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.c:
	New variable w32_frame_window.
	(x_destroy_window):
	(w32_scroll_bar_create):
	Use SEND_INFORM_MESSAGE() instead of POST_INFORM_MESSAGE().
	(w32_scroll_bar_remove):
	To destroy scrollbar window, send WM_CLOSE instead of calling
	DestroyWindow() from msg thread.
	(W32read_socket):
	Move operations for private messages, WM_EMACS_CREATE_SCROLLBAR,
	WM_MULE_IME_DESTROY_AGENT, WM_EMACS_DESTROY_FRAME,
	and WM_EMACS_POPUP_MENU to window procedure(w32_WndProc).
	Still, also in the message loop, we deal with WM_EMACS_CREATE_FRAME
	and WM_MULE_IME_CREATE_AGENT but just call w32_create_frame_window()
	and w32_ime_create_agent() respectively.

	* mw32ime.c (Fw32_ime_create_conversion_agent):
	Use SEND_MSGTHREAD_INFORM_MESSAGE() instead of
	POST_INFORM_MESSAGE(), and modify message type from
	WM_MULE_CREATE_AGENT to WM_MULE_IME_CREATE_AGENT.
	(Fw32_ime_destroy_conversion_agent):
	Use SEND_INFORM_MESSAGE() instead of POST_INFORM_MESSAGE().

	* mw32fns.c :
	Include <shellapi.h> for DragAcceptFiles().
	(w32_WndProc):
	Deal with WM_EMACS_CREATE_FRAME, WM_EMACS_CREATE_SCROLLBAR,
	WM_MULE_IME_CREATE_AGENT, WM_MULE_IME_DESTROY_AGENT,
	WM_EMACS_DESTROY_FRAME, and WM_EMACS_POPUP_MENU.
	(w32_window):
	Use SEND_MSGTHREAD_INFORM_MESSAGE() instead of
	POST_INFORM_MESSAGE().
	(w32_create_frame_window):
	(w32_destroy_frame):
	(w32_create_scrollbar):
	(w32_track_popup_menu):
	(w32_ime_create_agent):
	(w32_ime_destroy_agent):
	New functions.

	* mw32menu.c (w32menu_show):
	Use SEND_INFORM_MESSAGE() instead of POST_INFORM_MESSAGE().

1999-09-27  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* keyboard.c (make_lispy_event):
	In the first call of DragQueryFile(), use only nfiles
	and ignore returned filename.
	Then in the second call of it, build files with decoding
	filename.
	And if window is not find from event coodinates,
	store event->frame_or_window, not its car, to window.

1999-09-20  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32fns.c (Fx_create_frame):
	Don't call Fselect_frame() on a newly created frame.

	* keyboard.c (make_lispy_event[meadow_private_event]):
	Currently, only return Qnil.

	* mw32term.c (W32read_socket[WM_EMACS_ACTIVATE]):
	Enable this message.  In order to raise switch-frame,
	set meadow_private_event to event queue.

	* termhooks.h (event_kind):
	New event type for Meadow.

1999-09-19  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* charset.c (str_cmpchar_id):
	Before xmalloc(), copy str to buf where is safe against
	memory realocation caused by r_alloc.  After cmpcharp->data is
	prepared by xmalloc(), copy buf to here.

1999-09-17  Kenichi Handa  <handa@etl.go.jp>

	* insdel.c (insert_from_string_1): Comparing the current gap size
	with outgoing_nbytes to check if we must enlange the gap.

1999-09-16  Kenichi Handa  <handa@etl.go.jp>

	* charset.h: (register_composite_chars_region): Extern it.
	(register_composite_chars_string): Extern it.

	* charset.c (str_cmpchar_id): New argument REGISTERP.  Caller
	changed.
	(register_composite_chars_region): New function.
	(register_composite_chars_string): New function.

	* alloc.c (make_string): Call register_composite_chars_string for
	a multibyte string.
	(make_multibyte_string): Likewise.
	(make_string_from_bytes): Likewise.
	(make_specified_string): Likewise.

	* buffer.c (Fset_buffer_multibyte): On setting the buffer
	multibyte, call register_composite_chars_region.

	* insdel.c (insert_1_both): Call register_composite_chars_region
	after the insertion.
	(adjust_after_replace): Likewise.

	* indent.c (MULTIBYTE_BYTES_WIDTH): Adjusted for the change of
	str_cmpchar_id.

1999-09-09  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32fns.c (Fx_create_frame):
	Output error messages if any font/fontset cannot be selected.

1999-09-08  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* category.c (modify_lower_category_set):
	Import Handa-san's bug fix.
	To check whether the char table has category table,
	use CATEGORY_SET_P().

	* mw32font.c (Fw32_query_get_logfont):
	Return Qnil when ChooseFont() fails.

1999-09-03  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c:
	New variable inhibit_pre_post_conversion.
	If it is set, disable all operation as to nether
	pre_write_conversion nor post_read_conversion.
	(From Handa-san.)

	* minibuf.c (Fminibuffer_complete_word):
	To retrieve byte size of completion_string,
	use STRING_BYTES() instead of size key of XSTRING().
	(Thanks K.Horiguchi).

	* keyboard.c (make_lispy_event):
	Decode filenames that are passed
	from DragQueryFile(). (Thanks K.Horiguchi).

1999-09-02  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (setup_code_conversion_workbuf): New funtion.
	(code_convert_string_unwind): New function.
	(code_convert_string): Make work buffer by
	setup_code_conversion_workbuf instead of temp_output_buffer_setup.
	This is to avoid running temp-buffer-setup-hook.

1999-08-31  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32font.c (Fw32_get_logfont_info):
	Add max-width element in returned A-list.

	* mw32term.c (dumpglyphs):
	Only on TrueType font, we utilize glyph metrics to draw
	background.
	(dumpglyphs):
	If relative_compose is negative, draw all elements of one
	composite character with one ExtTextOut() call in order
	to make use of TrueType rendering facility.

1999-08-29  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32font.c (Fw32_score_logfont_candidates):
	fix documentation string.

	* w32.c (file_attributes_stat):
	Generate hashval to store st_ino.

	* mw32font.c :
	New variables Qbase, Qweight, Qfixed, Qitalic,
	Qfamily, Qraster, and Qscalable.
	(w32_score_logfont):
	(Fw32_score_logfont_candidates):
	New function.
	(Fw32_get_logfont_info):
	(Fw32_get_font_info):
	(Fw32_change_font_attribute):
	(Fw32_add_font):
	Use Qwidth, Qheight .etc instead of using intern().
	(syms_of_mw32font):
	Set Qbase, Qweight, Qfixed, Qitalic, Qfamily,
	Qraster, and Qscalable, and staticpro().
	defsubr Sw32_score_logfont_candidates.

	* mw32font.h (logfont_candidates):
	New struct for Fw32_score_logfont_candidates.

1999-08-20  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32menu.c (free_frame_menubar):
	Bug fix: set correct width and height to SetWindowPos().

1999-08-17  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32menu.c (free_frame_menubar):
	Set f->output_data.w32->menbar_handle to INVALID_HANDLE_VALUE.

	* mw32fns.c (x_set_menu_bar_lines):
	To enable menubar, call set_frame_menubar() when menubar is disable.

1999-08-15  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c (detect_coding_system):
	To look up category_index, apply Fget to a category symbol,
	not to a category value, which is supporsed to be a coding-system
	symbol.

1999-08-09  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c:
	New variable Vexec_suffix_list.
	(setup_exec_suffix_list):
	New fuction
	(syms_of_w32misc):
	set up Vexec_suffix_list.

1999-08-07  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32bdf.c (mw32_BDF_TextOut):
	Let hBMP and bits static.
	Make new static variables DIBsection_hdc, DIBsection_width,
	and DIBsection_height to store current status of DIB section.
	If these are identical to required DIB section,
	use the current hBMP handle for efficiency.

	* mw32menu.c (modifymenu_encode):
	New function to check whether the current menu string is identical
	to new one, and if it is, return 1.  Otherwise, modify menu string
	with new one, and then return 0.
	(x_activate_menubar):
	Set pending_menu_activation to 1, call set_frame_menubar(),
	and then reset pending_menu_activation to 0.
	(set_frame_menubar):
	Enable deep_p argument.  If deep_p is 0, refresh only top level
	menu items.  At this, if all item strings are identical to
	previous corresponding items, do nothing for efficiency.
	And at the end of the function, in the case of pending_menu_activation,
	call SetEvent() on f->output_data.w32->mainthread_to_frame_handle
	in order to inform message loop thread of the finish of menubar
	reconstruction.

	* mw32term.c (w32_menu_bar_store_activate_event):
	New function.
	(W32read_socket [case WM_INITMENU]):
	Removed.
	(x_destroy_window):
	Call CloseHandle() on
	f->output_data.w32->mainthread_to_frame_handle.
	(w32_term_init):
	Initialize message_loop_blocked_p with 0.

	* mw32term.h:
	New extern declaration message_loop_blocked_p.

	* mw32term.c:
	New variable message_loop_blocked_p.

	* mw32term.h (struct w32_output):
	New menber mainthread_to_frame_handle
	and disable reconstruct_menubar.

	* mw32fns.c (w32_WndProc [case WM_INITMENU, WM_EXITMENULOOP):
	When WM_INITMENU message comes from the menubar of the frame,
	call w32_menu_bar_store_activate_event() to rebuild menubar.
	When WM_EXITMENULOOP comes from the menubar of the frame,
	set disable_reconstruct_menubar to 0 in order to allow main
	thread reconstruct menubar.
	(w32_window):
	Initialize mainthread_to_frame_handle.

1999-07-30  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c (detect_eol_type_in_2_octet_form):
	New function.
	(detect_eol):
	cooding->category_idx selects
	which detect_eol_type_XXX () is called.

1999-07-29  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c
	write some comment on coding-category-utf-8,
	coding-category-utf-16-be, and coding-category-utf-16-le.
	(coding_category_name):
	Append "coding-category-utf-8",
        "coding-category-utf-16-be",
        and "coding-category-utf-16-le".
	(UTF_8_1_OCTET_P):
	(UTF_8_EXTRA_OCTET_P):
	(UTF_8_2_OCTET_LEADING_P):
	(UTF_8_3_OCTET_LEADING_P):
	(UTF_8_4_OCTET_LEADING_P):
	(UTF_8_5_OCTET_LEADING_P):
	(UTF_8_6_OCTET_LEADING_P):
	New macros for checking UTF-8 octets range.
	(detect_coding_utf_8):
	A new function for detecting UTF-8 text.
	(UTF_16_INVALID_P):
	(UTF_16_HIGH_SURROGATE_P):
	(UTF_16_LOW_SURROGATE_P):
	New macros for checking UTF-16 octets range.
	(detect_coding_utf_16):
	A new function for detecting UTF-16 text.
	(detect_coding_mask):
	When priorities are specified, skip any categories that have
	`nil' coding-system.
	(detect_coding_mask):
	Bug fix:if detect_coding_XXX() returns the mask
	not set at priorities[i] but set at other bit,
	detect_coding_mask() returned the wrong mask as
	its result.  Fix to detect coding specified by
	priorities[i] correctly.
	(detect_coding_system):
	remove `nil' coding-system in the result.
	(Fupdate_coding_systems_internal):
	update all coding-categories.

	* coding.h (CODING_CATEGORY_IDX_UTF_8):
	(CODING_CATEGORY_IDX_UTF_16_BE):
	(CODING_CATEGORY_IDX_UTF_16_LE):
	New macros
	(CODING_CATEGORY_IDX_RAW_TEXT):
	(CODING_CATEGORY_IDX_BINARY):
	(CODING_CATEGORY_IDX_MAX):
	Renumber these after CODING_CATEGORY_IDX_UTF_16_LE.
	(CODING_CATEGORY_MASK_UTF_8):
	(CODING_CATEGORY_MASK_UTF_16_BE):
	(CODING_CATEGORY_MASK_UTF_16_LE):
	New macros.
	(CODING_CATEGORY_MASK_ANY):
	Append CODING_CATEGORY_MASK_UTF_8,
	CODING_CATEGORY_MASK_UTF_16_BE,
	and CODING_CATEGORY_MASK_UTF_16_LE.
	(CODING_CATEGORY_MASK_UTF_16_BE_LE):
	a new macro.

1999-07-27  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

        * charset.c (Fmake_char_internal): Check validity of code points.
        * coding.c (DECODE_CHARACTER_ASCII): Decode ASCII invocated to GR
        correctly.
	These changes are from Handa-san.

	* mw32font.c (set_ccl_method):
	Correspond to the below specification change.
	Call setup_ccl_program() with symbol and
	entruct checking whether the given data is valid to
	setup_ccl_program().

	Below changes are from Handa-san.

	* ccl.h (setup_ccl_program): The type is changed to `int'.

	* ccl.c (ccl_driver) <CCL_Call>: Now CCL program ID to call may be
	stored in the following CCL code.  Adjusted for the change of
	Vccl_program_table.
	(resolve_symbol_ccl_program): Adjusted for the new style of
	embedded symbols (SYMBOL . PROP) in CCL compiled code.   Return Qt
	is resolving failed.
	(ccl_get_compiled_code): New function.
	(setup_ccl_program): Function type changed from `void' to `int'.
	Resolve symbols in CCL_PROG.
	(Fccl_program_p): New function.
	(Fccl_execute): Get compiled CCL code by just calling
	setup_ccl_program.
	(Fccl_execute_on_string): Likewise.
	(Fregister_ccl_program): Adjusted for the change of
	Vccl_program_table.

	* coding.c (setup_coding_system): Get compiled CCL code by just
	calling setup_ccl_program.

	* xterm.c (x_find_ccl_program): Get compiled CCL code by just
	calling setup_ccl_program.

	* w32fns.c (w32_find_ccl_program): Get compiled CCL code by just
	calling setup_ccl_program.


1999-07-19  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32inevt.c:
	enable below definitions.
	    extern void reinvoke_input_signal (void);
	    extern int change_frame_size (FRAME_PTR, int, int, int, int);
	    extern int w32_use_full_screen_buffer;

	* w32console.c (write_glyphs):
	Use FillConsoleOutputAttribute() to fill attribute.

	* w32.c (file_attributes_stat):
	If Vw32_get_true_file_attributes is non-nil,
	generate i-node and set link_count from the
	information generated by GetFileInformationByHandle().
	(stat):
	Disable the part that corresponds to the above operation.

	* makefile.nt (install):
	If MEADOW_TEST_RELEASE is enabled, install vc.pdb.

1999-07-18  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32proc.c (sys_select):
	On Meadow, use only WaitForMultipleObjects()
	even if keyboard_handle is set to FD 0.
	And disables drain operaion of message queue.
	(read comments)

	* callproc.c (Fcall_process):
	* process.c (Fstart_process):
	* w32.c (check_windows_init_file):
	Close fd only when fd is valid (greater than 0).
	(thanks to Hiroya Tsubakimoto [meadow-develop:1221])

	* unexw32.c (get_section_info):
	Bug fix: set SectionNameData_found to 1.

	* mw32fns.c (x_rgb_names):
	Bug fix: rescale color values because X rgb: color scale is
	defined by number of characters.
	(color_radix_change):
	Check range of size.

	* w32.c (init_w32system):
	* mw32term.c (w32_term_init):
	Initialize interrupt_handle in
	init_w32system() instead of w32_term_init()
	to initialize it also on console.
	(reported from Shun-ichi GOTO [meadow-develop 1211])
	(W32read_socket):
	In the case of WM_INITMENU, store menu_bar_activate_event.

1999-07-17  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32bdf.c:
	(BDF_CODEPOINT_HEAP_INITIAL_SIZE):
	(BDF_BITMAP_HEAP_INITIAL_SIZE):
	New macro for HeapCreate() parameter.
	(hbdf_cp_heap):
	(hbdf_bmp_heap):
	heap handles for character codepoint and character bitmap respectively.
	(mw32_init_bdf_font):
	Initialize hbdf_cp_heap and hbdf_bmp_heap.
	(mw32_free_bdf_font):
	Call HeapFree() to free codepoint table.
	(cache_char_offset):
	Call HeapAlloc() to allocate codepoint table instead of xmalloc().
	(clear_cached_bitmap_slots):
	Call HeapFree() to free cached bitmap data.
	(mw32_get_bdf_glyph):
	Create bitmap data for DIB instead of compatible bitmap.
	And if this glyph is white space, return -1.
	(get_bitmap_with_cache):
	Copy bitmap to memory allocated by HeapAlloc() for cache.
	If bitmap is a what space, set pbmp to NULL.
	(create_offscreen_bitmap):
	New function to create DIBSection.
	(mw32_BDF_TextOut):
	Draw BDF font with DIBSection.
	Copy bitmap data directly into DIBSection memory.
	When pcb->pbmp is NULL, regard it as a white space character,
	then skip it.

	* mw32bdf.h
	Write some comment on GLYPH METRIC.
	(BDF_FONT_CACHE_SIZE):
	Increase cache size to 3000.
	(BDF_FONT_CLEAR_SIZE):
	Increase clear size to 600.
	(glyph_struct):
	New member row_byte_size.
	(cache_bitmap):
	New member row_byte_size.

	* unexw32.c (get_section_info):
	Introduce SectionNameData_found to check if the current section is
	the first .emdata section.  And print out the log of .emdata
	section.  These dealings are for alpha version of Visual C++
	Version 6.

1999-05-12  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.c
	(fast_find_position):
	(show_mouse_face):
	Sync up with xterm.c

1999-05-10  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32bdf.c (GET_HEX_VAL):
	If the input is ranged from g(G) to z(Z), make it fails.

1999-05-08  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (CSTR_EQUAL):
	If CSTR_EQUAL is not defined, define it as 2.

1999-05-03  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32font.c (Fw32_enum_logfont):
	Cast mw32_enumfontfamilyproc with (FONTENUMPROC)
	because the actual type of mw32_enumfontfamilyproc's last argument
	is Lisp_Object* is confilicts with the formal type LPARAM.

1999-05-02  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32font.c
	(Fw32_get_logfont_info):
	(Fw32_get_font_info):
	(Fw32_get_font_logfont):
	At the tail, add return Qnil to make every control path return
	value.

	* keyboard.c (async_handle_message):
	call SetEvent(keyboard_handle), even if we read no events.

1999-05-01  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* keyboard.c (async_handle_message):
	Only when read_avail_input read any inputs,
	call SetEvent(keyboard_handle).

	* w32proc.c (sys_select):
	ResetEvent() interrupt_event before waiting for interrupt_event.
	because WaitForMultipleObjects() cannot be released by PulseEvent().

	* keyboard.c (read_avail_input):
	remove PulseEvent() because it is hard to check keycode
	that is not modified at this point.
	(interrupt_signal):
	Set SetEvent().

	* mw32term.c (w32_drop_file_handler):
	rename w32_drag_n_drop_handler to w32_drop_file_handler.

	(W32read_socket [case WM_EMACS_POPUP_MENU]):
	When the message queue is not empty (for example, owing to
	WM_PAINT that is never removed by PeekMessage().), this message
	loop can't stop.  Hence, we make PeekMessage() receives only WM_COMMAND
	and then try PeekMessage() only once.

1999-05-01  Horiguchi Kyotaro  <kyota@po.ntts.co.jp>

	* mw32term.c (w32_drag_n_drop_handler, W32read_socket
	  [case WM_EMACS_CREATE_WINDOW, WM_DROP_FILES],

	* keyboard.c (make_lispy_event [case drag_n_drop])
	Added support for Drag and Drop.

1999-04-29  Horiguchi Kyotaro  <kyota@po.ntts.co.jp>

	* callproc.c (Fcall_process)
	* process.c (Fstart_process)
	PROGRAM, INFILE, STDERR-FILE and cmdname are allowed to be a
	string containing mutibyte characters (Using ENCODE_FILE to encode
	string)
        For argument editing, any program pathes are allowed to pass
	argument editing program. (Addition to changes on 1999-02-24.)

	* lread.c (openp)
	str is allowed to be a string containig multibyte characters. This
	change allows to check files correctly whose names are such strings.

1999-04-27  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32reg.h (w32_get_string_resource):
	* mw32reg.c (w32_get_string_resource):
	Change type of arguments to LPCTSTR.

	* mw32reg.h (REG_VERSION_ROOT):
	(REG_VERSION_ENV_ROOT):
	(REG_COMMON_ROOT):
	(REG_COMMON_ENV_ROOT):
	New macros instead of REG_ROOT and REG_ENV_ROOT.

	* mw32reg.c
	Define meadow_version_string, meadow_common_root,
	meadow_common_env_root, meadow_version_root, and
	meadow_version_env_root.

	(w32_get_env_resource):
	(x_get_string_resource):
	Check version specific registry entry first,
	then check common registry entry.

1999-04-25  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (init_environment):
	When we set current directory to the invocation directory,
	parse the path with CharNext, and copy it to tmporary area.
	(and sync up with 20.3.8)

1999-04-19  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.c (dumpglyphs):
	specify bytes of font.  Make it independent of charset_dimension.
	(dumpglyphs):
	When codepoint is encoded by CCL and encoding[charset] is 4(SJIS,
	but which is alomost meaningless),
	set font_unit_bytes to charset_dimension.

1999-03-27  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* ccl.c (ccl_driver) <CCL_ReadMultibyteChar2>:
	Bug fix: Skip leading byte(CHARSET_COMPOSTION)
	of composite character

1999-03-17  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32bdf.c (get_quoted_string):
	Bug fix: search length of quatation mark at tail is
	not (end - q) but (end - p).

1999-03-01  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32bdf.c (cache_char_offset):
	(get_cached_font_char):
	To change codepoint range easily, rewrite the part of
	checking codepoint range with the below macro.

	* mw32bdf.h (BDF_CODEPOINT_MAX):
	(BDF_CODEPOINT_RANGE_COVER_P):
	New macro.


1999-02-28  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (w32_get_long_filename):
	Bug fix: when any directory separators are found,
	Set p to NULL pointer to distinguish from the temporary
	mark to separate a path element.

1999-02-27  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (file_attributes_stat): Bug fix: Fix to check whether the
	last character of path is directory separator, not to check a
	terminator(0) of string.

	* mw32ime.c (w32_set_ime_font):
	Exclude the case that psetlf is NULL.

	* mw32fns.c (syms_of_w32fns): Set Qime_font.

	(w32_window):
	(Fx_create_frame): The default font with which IME displays
	internally is set not at w32_window() but at Fx_create_frame() and
	it is determined also by `params' that is passed to
	Fx_create_frame().

1999-02-26  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (open_unc_volume):
	Change prototype of path to const char*.

1999-02-25  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (normalize_filename):
	(parse_root):
	(get_long_basename):
	(w32_get_long_filename):
	(is_unc_volume):
	(get_volume_info):
	(map_w32_filename):
	(readdir):
	(read_unc_volume):
	(sys_link):
	(sys_rename):
	(generate_inode_val):
	(stat):
	(file_attributes_stat):
	Rewrite with W32 string manipulation API.
	(Use string type TCHAR instead char)

	(is_string_contains_chars):
	New function.

1999-02-24  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32proc.c (sys_spawnve):
	Checks whether the cmdname (that have already
	produced by argument editing) exists.

	* callproc.c (Fcall_process):
	For argument editing, any program pathes are allowd to
	pass argument editing program.

1999-02-23  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* keyboard.c (read_key_sequence):
	Immerge IME_CONTROL operation again.

	* w32proc.c (sys_spawnve):
	To canonicalize cmdname, call openp to retrieve full path.
	And remove the check of Ffile_executable_p().

1999-02-21  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32fns.c (w32_WndProc):
	Change frame size in delay mode.

	* mw32menu.c (free_frame_menubar):
	To preserve window area of the frame as correctly as possible,
	call SetWindowPos() with its before value.

1999-02-20  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32fns.c (w32_WndProc):
	For visible-bell, Imprement WM_EMACS_FLASH_WINDOW.

	* mw32term.c
	(x_iconify_frame):
	(W32clear_frame):
	(W32clear_end_of_line):
	(W32cursor_to):
	(W32reset_terminal_modes):
	(W32set_terminal_modes):
	(W32reassert_line_highlight):
	(W32frame_up_to_date):
	(W32update_end):
	(W32update_begin):
	(W32ring_bell):
	(W32insert_glyphs):
	(W32delete_glyphs):
	(W32set_terminal_window):
	(W32ins_del_lines):
	Change prototype.  Set the type of the return value to void.

	* mw32term.h (WM_EMACS_FLASH_WINDOW):
	New macro.

	* mw32term.c (W32ring_bell):
	Post WM_EMACS_FLASH_WINDOW if visible bell is enabled.

	* mw32term.h:
	Define gravity parameters.

	* keyboard.c (async_handle_message):
	Remove a critical section from read_avain_input() part.
	(Move it to finer parts).

	* mw32fns.c (w32_WndProc):
	Set dumprectangle() part to a critical section.

1999-02-18  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32ime.c (Fw32_ime_undetermined_string_length):
	Rename from Fdoes_ime_have_undetermined_strings.

	* mw32fns.c (Fw32_focus_frame):
	dummy function.
	(syms_of_w32fns):
	Define Sw32_focus_frame.

	* mw32term.c
	(w32_focus_on_frame):
	(w32_unfocus_frame):
	Rename x_focus_on_frame and x_unfocus_frame, respectively.
	Write some comments.

	* w32proc.c (sys_spawnve):
	Use STRING_BYTES() instead.

1999-02-04  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32menu.c (single_menu_item):
	New function from xmenu.c.
	Disable the facility to display a mark of submenu.
	Enable the facility to show submenu.
	(syms_of_w32menu):
	Remove Qmenu_alias to follow xmenu.c

	* mw32fns.c (w32_WndProc):
	Dispatch IMM message to a specialized wndproc.

	* mw32term.h:
	Define many macros for communication between IMM Agent
	and Lisp Interpreter.

	* mw32menu.c (insertmenu_decode):
	(appendmenu_decode):
	Use '\0' instead of NULL.

1998-08-09  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.h:
	Make classification many messages with their functions.

1998-07-15  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32bdf.c (get_quoted_string):
	append new function to obtain quoted string.
	(set_bdf_font_info):
	initialize new font properties.
	(mw32_get_bdf_font_info):
	Set new font properties to alist.
	(set_bdf_font_info):
	Set new font properties from BDF data.

1998-04-25  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32term.c (dumpglyphs):
	Bug fix: to get metrics of fonts, use cps instead of bufs.

1998-04-06  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* xterm.h:
	append extern declearation of x_find_ccl_program().

	* xterm.c (x_find_ccl_program):
	Even if bad data type is found, not give up but try next one.
	bug fix to the argument of resolve_symbol_ccl_program.

	* xfns.c (syms_of_xfns):
	set backend hook.(find_ccl_program_func)

1998-03-28  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* mw32fns.c
	(Fx_create_frame):
	(w32_set_font):
	 Set regexpp to Qt because of change of Fquery_fontset.

1998-03-28  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* fontset.c (Fnew_fontset):
	(Fset_fontset_font):
	* xfns.c (x_set_font):
	(Fx_create_frame):
	 Set regexpp to Qnil because of change of Fquery_fontset.

1998-03-25  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* coding.c (setup_coding_system):
	Get a ccl program specified by SYMBOL.

1998-03-23  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* xterm.c (x_find_ccl_program):
	To convert CCL program to make it executable by using
	resolve_symbol_ccl_program().

1998-03-21  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* ccl.c (Fccl_execute):
	(Fccl_execute_on_string):
	ccl-execute and ccl-execute-on-string can handle SYMBOLized
	CCL-PROGRAM.

1998-03-20  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* ccl.c (Fregister_ccl_program):
	modify to use resolve_symbol_ccl_program.
	(resolve_symbol_ccl_program):
	New function.

1998-03-19  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* ccl.c:
	Qunification_table:
	Qunification_table_id: new variables.
	(syms_of_ccl):
	Register Qunification_table and Qunification_table_id,
	and protect these as static.
	(Fregister_ccl_program):
	Convert a vector of ccl program.
	Change ccl_translation_table and unification_table symbol to
	their ID.
	(ccl_driver): (CCL_TranslateMultipleMap)
	modified to use	nested tables.
	(CCL_ReadMultibyteChar2):
	Rename CCL_ReadMultibyteCharacter into this.

1998-01-23  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32proc.c: New variable, Vw32_get_true_file_link_count.
	(syms_of_ntproc): New variable, Vw32_get_true_file_link_count.

1998-01-12  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (file_attributes_stat):
	Delete count_subdirectory.  Instead, use this function.

	* dired.c (Ffile_attributes):
	use file_attribute_stat to know a link count of a directory.

1998-01-08  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (count_subdirectory):
	New function.
	(stat): set 2 + number of subdirectorys to st_nlink
	when the specified path is a directory.

1997-11-21  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (get_emacs_configuration):
	fix wrong use of GetVersion().

1997-11-08  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* keyboard.c (read_avail_input):
	Read input from file handle. So remove "return 0;"

	* dispnew.c (init_display):
	isatty() on Windows does not show whether the I/O is a tty.
	So disable this code.

	* termcap.c (tgetent):
	(valid_filename_p):
	 change compile condition from MSDOS to DOS_NT.

	* w32.c (init_environment):
	add TERMCAP environment.

	* term.c (term_init):
	To support various terminal on Windows, make terminal initialize code
	selectable.

1997-11-06  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32proc.c (sys_select):
	If a process can't be created by accident, cp may be NULL.
	In this case, we should skip this handle, not abort().

1997-11-04  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32console.c (write_glyphs):
	encode output string.

1997-11-03  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* termhooks.h (event_kind):
	append w32_change_keyboard_layout.

	* charset.c (find_charset_in_str):
	If we can't valid charset in string, not set "charsets" table to 1.

1997-11-2 Miyashita Hisasshi <himi@bird.scphys.kyoto-u.ac.jp>

	* w32proc.c (sys_spawnve):
	Set process_dir to NULL.
	(We should check whether process_dir is set by caller.)
	(create_child):
	When process_dir is not set by caller, we use NULL to
	call CreateProcess.

1997-10-30  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* window.c (Fset_window_buffer):
	add set_selected_window_buffer_functions hook.
	(syms_of_window):
	add select-window-functions, select-window-buffer-functions.

1997-10-24  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32proc.c (w32_executable_type):
	Type of nt_header and dos_header is defferent.
	Cast them into (char*)

1997-08-31  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (sys_read):
	use flag and if the ReadFile is failed by reading bloken pipe,
	return 0.

1997-08-30  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* w32.c (_sys_read_ahead):
	If the pfn_recv() returns SOCKET_ERROR and its reason
	is that the socket receives no data in non-blocing mode,
	I retry pfn_recv().

1997-08-20  Miyashita Hisashi  <himi@etl.go.jp>

	* ccl.c (syms_of_ccl):
	append new variable Vccl_translation_table_vector.
	(Fregister_ccl_translation_table): New function.
	(Fregister_ccl_program): delete unused variable int idx.
	(syms_of_ccl): append new symbols.
	Qccl_translation_table and Qccl_translation_table_id.

1997-08-19  Miyashita Hisashi <himi@etl.go.jp>

	* ccl.c: (CCL_Call) fix the comment.

	* charset.h (UNIFICATION_ID_TABLE):
	made a new macro for CCL.
	(Vcharacter_unification_table_vector):
	export.

1997-08-16  Miyashita Hisashi  <himi@etl.go.jp>

	* ccl.h: (struct ccl_program):
	append private_state for suspending.

1997-08-11  Miyashita Hisashi  <himi@etl.go.jp>

	* charset.c (syms_of_charset):
	make Vcharacter_unification_table_vector.

	* ccl.c (EXCMD): add new entry for excmd.
	(CCL_ReadMultibyteCharacter):
	(CCL_WriteMultibyteCharacter):
	(CCL_UnifyMultibyteCharacter):
	(CCL_IterateMultipleMap):
	(CCL_TranslateMultipleMap): New CCL Command

1997-07-22 Miyashita Hisashi   <himi@bird.scphys.kyoto-u.ac.jp>

	* termhooks.h (event_kind): add w32_mouse_wheel for intellimouse.

	* keyboard.c (syms_of_keyboard): set staticpro (&mouse_wheel_syms).

	* keyboard.c : Add static char *lispy_mouse_wheel_names and
	mouse_wheel_syms for Intellimouse.
	(make_lispy_event): Add w32_mouse_wheel condition.

1997-05-17  Miyashita Hisashi  <himi@bird.scphys.kyoto-u.ac.jp>

	* buffer.h:
	(struct buffer_text)
	* buffer.c
	(syms_of_buffer):
	(init_buffer_once):
	(reset_buffer_local_variables):
	(init_buffer_once):
	* fileio.c
	(Finsert_file_contents):
	(Fwrite_region):
	(syms_of_fileio):
	On MULE, buffer_file_type and find-buffer-file-type is not required.
	And file mode is fixed to O_BINARY.

Thu Mar 06 14:40:23 1997  himi  <himi@etl.go.jp>

	* ccl.h: add ccl-program symbol.

	* ccl.c (syms_of_ccl): add ccl-program symbol.

Wed Mar 05 23:54:40 1997  himi  <himi@etl.go.jp>

	* dispextern.h: To add property to struct face.
	                "Lisp_Object *property" have array of properties.
			This array can have only Lisp_Object_Int.
			And delete "char underline".

	* xterm.c (x_find_ccl_program): move it from fontset.c.

	* xfns.c (syms_of_xfns): set pointer "find_ccl_program_func" to x_find_ccl_program.

	* fontset.h: add *find_ccl_program_func.

	* fontset.c (fs_load_font): use (*find_ccl_program_func).

